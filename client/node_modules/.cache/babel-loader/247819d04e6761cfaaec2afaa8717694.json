{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAccountType = type => {\n      this.accountType = type;\n    };\n\n    this.autorisation = (type, component) => {\n      alert(`${type} ${this.accountType}`);\n\n      if (type === this.accountType) {\n        alert(1);\n        return component;\n      } else {\n        alert(2);\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"BRAK DOSTEPU\"); //return (<Redirect to='/login'></Redirect>)\n      }\n    };\n\n    this.render = () => {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(SignIn, {\n        connection: this.connection,\n        onLogged: this.setAccountType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.autorisation('admin', React.createElement(AdminPanel, {\n        connection: this.connection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(Route, {\n        exact: true,\n        path: \"/account/director\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(DirectorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/reception\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ReceptionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(DoctorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))));\n    };\n\n    this.connection = {\n      ip: '127.0.0.1',\n      port: '1234'\n    };\n    this.accountType = undefined;\n  }\n\n} //<Redirect from=\"/\" to=\"/login\"></Redirect> dac przed koncem browser router\n\n\nexport default App;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","SignIn","AdminPanel","DirectorPanel","DoctorPanel","ReceptionPanel","App","Component","constructor","props","setAccountType","type","accountType","autorisation","component","alert","render","connection","ip","port","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,cATmB,GASDC,IAAD,IAAU;AACzB,WAAKC,WAAL,GAAmBD,IAAnB;AACD,KAXkB;;AAAA,SAanBE,YAbmB,GAaJ,CAACF,IAAD,EAAOG,SAAP,KAAqB;AAClCC,MAAAA,KAAK,CAAE,GAAEJ,IAAK,IAAG,KAAKC,WAAY,EAA7B,CAAL;;AACA,UAAGD,IAAI,KAAK,KAAKC,WAAjB,EAA8B;AAC5BG,QAAAA,KAAK,CAAC,CAAD,CAAL;AACA,eAAOD,SAAP;AACD,OAHD,MAGO;AACLC,QAAAA,KAAK,CAAC,CAAD,CAAL;AACA,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAR,CAFK,CAGL;AACD;AACF,KAvBkB;;AAAA,SAyBnBC,MAzBmB,GAyBV,MAAM;AACb,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAoB,QAAA,IAAI,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,KAAKC,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKP,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,YAAL,CAAkB,OAAlB,EAA4B,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKI,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5B,CADH,CALF,EASE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAaE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,EAiBE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,CADF,CADF;AAyBD,KAnDkB;;AAEjB,SAAKA,UAAL,GAAkB;AAChBC,MAAAA,EAAE,EAAE,WADY;AAEhBC,MAAAA,IAAI,EAAC;AAFW,KAAlB;AAIA,SAAKP,WAAL,GAAmBQ,SAAnB;AACD;;AAT+B,C,CAuDlC;;;AACA,eAAed,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.connection = {\n      ip: '127.0.0.1',\n      port:'1234'\n    }\n    this.accountType = undefined\n  }\n  \n  setAccountType = (type) => {\n    this.accountType = type\n  }\n\n  autorisation = (type, component) => {\n    alert(`${type} ${this.accountType}`)\n    if(type === this.accountType) {\n      alert(1)\n      return component\n    } else {\n      alert(2)\n      return (<h1>BRAK DOSTEPU</h1>)\n      //return (<Redirect to='/login'></Redirect>)\n    }\n  }\n\n  render = () => {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <PrivateRoute exact path=\"/login\">\n            <SignIn connection={this.connection} onLogged={this.setAccountType}></SignIn>\n          </PrivateRoute>\n\n          <Route exact path=\"/account/admin\">\n            {this.autorisation('admin', (<AdminPanel connection={this.connection}></AdminPanel>))}\n          </Route>\n\n          <Route exact path=\"/account/director\">\n            <DirectorPanel></DirectorPanel>\n          </Route>\n\n          <Route exact path=\"/account/reception\">\n            <ReceptionPanel></ReceptionPanel>\n          </Route>\n\n          <Route exact path=\"/account/doctor\">\n            <DoctorPanel></DoctorPanel>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n//<Redirect from=\"/\" to=\"/login\"></Redirect> dac przed koncem browser router\nexport default App;\n"]},"metadata":{},"sourceType":"module"}