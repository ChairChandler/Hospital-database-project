{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/ReceptionPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog } from '../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nexport class AddPatientDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const userCreated = this.props.users.some(row => row.pesel === this.state.inputs.pesel);\n      const containsChars = Array.from(this.state.inputs.pesel).some(val => val < '0' || val > '9');\n      return {\n        //true means error\n        errors: {\n          pesel: this.state.inputs.pesel.length !== 11 || containsChars || userCreated,\n          name: !this.state.inputs.name.length,\n          surname: !this.state.inputs.surname.length,\n          date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today\n        },\n        errorsLabel: {\n          pesel: this.state.inputs.pesel.length !== 11 || containsChars ? 'Niewłaściwy numer pesel' : userCreated ? 'Taki uzytkownik juz istnieje' : '',\n          name: !this.state.inputs.name.length ? 'Puste imie' : '',\n          surname: !this.state.inputs.surname.length ? 'Puste nazwisko' : '',\n          date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today ? 'Niewłaściwa data urodzenia' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Imie\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.surname,\n        helperText: this.state.errorsLabel.surname,\n        margin: \"dense\",\n        id: \"surname\",\n        label: \"Nazwisko\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('surname', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.pesel,\n        helperText: this.state.errorsLabel.pesel,\n        margin: \"dense\",\n        id: \"pesel\",\n        label: \"Pesel\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('pesel', event.target.value);\n        },\n        inputProps: {\n          maxLength: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(KeyboardDatePicker, {\n        margin: \"normal\",\n        id: \"date-picker-dialog\",\n        label: \"Data urodzenia\",\n        error: this.state.errors.date_of_birth,\n        helperText: this.state.errorsLabel.date_of_birth,\n        format: \"MM/dd/yyyy\",\n        value: this.state.inputs.date_of_birth,\n        onChange: date => {\n          if (date !== null) this.setInputValue('date_of_birth', date);\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      inputs: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: AddPatientDialog.today\n      },\n      errors: {\n        pesel: false,\n        name: false,\n        surname: false,\n        date_of_birth: false\n      },\n      errorsLabel: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nAddPatientDialog.today = new Date();\nexport class EditPatientDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const wrongDeathDate = this.state.inputs.date_of_death !== null && (this.state.inputs.date_of_death < this.state.inputs.date_of_birth || this.state.inputs.date_of_death > EditPatientDialog.today);\n      return {\n        //true means error\n        errors: {\n          name: !this.state.inputs.name.length,\n          surname: !this.state.inputs.surname.length,\n          date_of_birth: this.state.inputs.date_of_birth > EditPatientDialog.today,\n          date_of_death: wrongDeathDate\n        },\n        errorsLabel: {\n          name: !this.state.inputs.name.length ? 'Puste imie' : '',\n          surname: !this.state.inputs.surname.length ? 'Puste nazwisko' : '',\n          date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today ? 'Niewłaściwa data urodzenia' : '',\n          date_of_death: wrongDeathDate ? 'Niewłaściwa data zgonu' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        value: this.state.inputs.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Imie\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.surname,\n        helperText: this.state.errorsLabel.surname,\n        value: this.state.inputs.surname,\n        margin: \"dense\",\n        id: \"surname\",\n        label: \"Nazwisko\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('surname', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(KeyboardDatePicker, {\n        margin: \"normal\",\n        id: \"date-picker-dialog\",\n        label: \"Data urodzenia\",\n        error: this.state.errors.date_of_birth,\n        helperText: this.state.errorsLabel.date_of_birth,\n        format: \"MM/dd/yyyy\",\n        value: this.state.inputs.date_of_birth,\n        onChange: date => {\n          if (date !== null) this.setInputValue('date_of_birth', date);\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(KeyboardDatePicker, {\n        margin: \"normal\",\n        id: \"date-picker-dialog\",\n        label: \"Data zgonu\",\n        error: this.state.errors.date_of_death,\n        helperText: this.state.errorsLabel.date_of_death,\n        format: \"MM/dd/yyyy\",\n        value: this.state.inputs.date_of_death,\n        onChange: date => {\n          if (date !== null) this.setInputValue('date_of_death', date);\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      inputs: {\n        name: this.props.selectedPatient.imie,\n        surname: this.props.selectedPatient.nazwisko,\n        date_of_birth: new Date(this.props.selectedPatient.data_urodzenia),\n        date_of_death: this.props.selectedPatient.data_zgonu ? new Date(this.props.selectedPatient.data_zgonu) : null\n      },\n      errors: {\n        name: false,\n        surname: false,\n        date_of_birth: false,\n        date_of_death: false\n      },\n      errorsLabel: {\n        name: '',\n        surname: '',\n        date_of_birth: '',\n        date_of_death: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nEditPatientDialog.today = new Date();","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/ReceptionPanel/Dialogs.js"],"names":["React","TextField","FormDialog","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","AddPatientDialog","Component","constructor","props","validate","userCreated","users","some","row","pesel","state","inputs","containsChars","Array","from","val","errors","length","name","surname","date_of_birth","today","errorsLabel","setInputValue","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","date","Date","EditPatientDialog","wrongDeathDate","date_of_death","selectedPatient","imie","nazwisko","data_urodzenia","data_zgonu"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog } from '../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nexport class AddPatientDialog extends React.Component {\n  static today = new Date()\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: AddPatientDialog.today\n      },\n      errors: {\n        pesel: false,\n        name: false,\n        surname: false,\n        date_of_birth: false\n      },\n      errorsLabel: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const userCreated = this.props.users.some(row => row.pesel === this.state.inputs.pesel)\n    const containsChars = Array.from(this.state.inputs.pesel).some((val) => val < '0' || val > '9')\n\n    return { //true means error\n      errors: {\n        pesel: this.state.inputs.pesel.length !== 11 || containsChars || userCreated,\n        name: !this.state.inputs.name.length,\n        surname: !this.state.inputs.surname.length,\n        date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today\n      },\n      errorsLabel: {\n        pesel: this.state.inputs.pesel.length !== 11  || containsChars? 'Niewłaściwy numer pesel' : (userCreated ? 'Taki uzytkownik juz istnieje' : ''),\n        name: !this.state.inputs.name.length ? 'Puste imie' : '',\n        surname: !this.state.inputs.surname.length ? 'Puste nazwisko': '',\n        date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today ? 'Niewłaściwa data urodzenia' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.name}\n      helperText={this.state.errorsLabel.name}\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Imie\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.surname}\n      helperText={this.state.errorsLabel.surname}\n      margin=\"dense\"\n      id=\"surname\"\n      label=\"Nazwisko\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('surname', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.pesel}\n      helperText={this.state.errorsLabel.pesel}\n      margin=\"dense\"\n      id=\"pesel\"\n      label=\"Pesel\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('pesel', event.target.value)}}\n      inputProps={{ maxLength: 11 }}\n      />\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Data urodzenia\"\n        error={this.state.errors.date_of_birth}\n        helperText={this.state.errorsLabel.date_of_birth}\n        format=\"MM/dd/yyyy\"\n        value={this.state.inputs.date_of_birth}\n        onChange={(date) => {if(date !== null) this.setInputValue('date_of_birth', date)}}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        />\n      </MuiPickersUtilsProvider>\n\n    </FormDialog>\n  )}\n}\n\nexport class EditPatientDialog extends React.Component {\n  static today = new Date()\n  \n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      inputs: {\n        name: this.props.selectedPatient.imie,\n        surname: this.props.selectedPatient.nazwisko,\n        date_of_birth: new Date(this.props.selectedPatient.data_urodzenia),\n        date_of_death: this.props.selectedPatient.data_zgonu ? new Date(this.props.selectedPatient.data_zgonu) : null\n      },\n      errors: {\n        name: false,\n        surname: false,\n        date_of_birth: false,\n        date_of_death: false\n      },\n      errorsLabel: {\n        name: '',\n        surname: '',\n        date_of_birth: '',\n        date_of_death: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const wrongDeathDate = this.state.inputs.date_of_death !== null && (\n      this.state.inputs.date_of_death < this.state.inputs.date_of_birth ||\n      this.state.inputs.date_of_death > EditPatientDialog.today)\n\n    return { //true means error\n      errors: {\n        name: !this.state.inputs.name.length,\n        surname: !this.state.inputs.surname.length,\n        date_of_birth: this.state.inputs.date_of_birth > EditPatientDialog.today,\n        date_of_death: wrongDeathDate\n      },\n      errorsLabel: {\n        name: !this.state.inputs.name.length ? 'Puste imie' : '',\n        surname: !this.state.inputs.surname.length ? 'Puste nazwisko': '',\n        date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today ? 'Niewłaściwa data urodzenia' : '',\n        date_of_death: wrongDeathDate ? 'Niewłaściwa data zgonu' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.name}\n      helperText={this.state.errorsLabel.name}\n      value={this.state.inputs.name}\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Imie\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.surname}\n      helperText={this.state.errorsLabel.surname}\n      value={this.state.inputs.surname}\n      margin=\"dense\"\n      id=\"surname\"\n      label=\"Nazwisko\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('surname', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Data urodzenia\"\n        error={this.state.errors.date_of_birth}\n        helperText={this.state.errorsLabel.date_of_birth}\n        format=\"MM/dd/yyyy\"\n        value={this.state.inputs.date_of_birth}\n        onChange={(date) => {if(date !== null) this.setInputValue('date_of_birth', date)}}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        />\n\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Data zgonu\"\n        error={this.state.errors.date_of_death}\n        helperText={this.state.errorsLabel.date_of_death}\n        format=\"MM/dd/yyyy\"\n        value={this.state.inputs.date_of_death}\n        onChange={(date) => {if(date !== null) this.setInputValue('date_of_death', date)}}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        />\n      </MuiPickersUtilsProvider>\n\n    </FormDialog>\n  )}\n}\n"]},"metadata":{},"sourceType":"module"}