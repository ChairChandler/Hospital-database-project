{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/Specialization.js\";\nimport React from 'react';\nimport { FormDialog } from '../../Shared/Dialog';\nimport { TextField } from '@material-ui/core';\nexport class AddSpecDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const specsCreate = this.props.specs.some(spec => spec.nazwa === this.state.inputs.spec_name);\n      return {\n        //true means error\n        errors: {\n          spec_name: this.state.inputs.spec_name.length === 0 || specsCreate\n        },\n        errorsLabel: {\n          spec_name: this.state.inputs.spec_name.length === 0 ? 'Pusta nazwa specjalizacji' : specsCreate ? 'Taka specjalizacja już istnieje' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.spec_name,\n        helperText: this.state.errorsLabel.spec_name,\n        margin: \"dense\",\n        id: \"spec_name\",\n        label: \"Nazwa specjalizacji\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('spec_name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        style: {\n          \"paddingRight\": '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"P\\u0142aca dodatkowa  \"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"30000\",\n        value: this.state.inputs.payment,\n        onChange: event => {\n          this.setInputValue('payment', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      inputs: {\n        spec_name: '',\n        payment: 0\n      },\n      errors: {\n        spec_name: false\n      },\n      errorsLabel: {\n        spec_name: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport class EditSpecDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const specsCreate = this.props.specs.some((spec, indx) => spec.nazwa === this.state.inputs.spec_name && indx !== this.props.selected.id);\n      return {\n        //true means error\n        errors: {\n          spec_name: this.state.inputs.spec_name.length === 0 || specsCreate\n        },\n        errorsLabel: {\n          spec_name: this.state.inputs.spec_name.length === 0 ? 'Pusta nazwa specjalizacji' : specsCreate ? 'Taka specjalizacja już istnieje' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.spec_name,\n        helperText: this.state.errorsLabel.spec_name,\n        margin: \"dense\",\n        id: \"spec_name\",\n        label: \"Nazwa specjalizacji\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('spec_name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        style: {\n          \"paddingRight\": '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"P\\u0142aca dodatkowa  \"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"30000\",\n        value: this.state.inputs.payment,\n        onChange: event => {\n          this.setInputValue('payment', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      inputs: {\n        spec_name: this.props.selected.nazwa,\n        payment: this.props.selected.placa\n      },\n      errors: {\n        spec_name: false\n      },\n      errorsLabel: {\n        spec_name: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/Specialization.js"],"names":["React","FormDialog","TextField","AddSpecDialog","Component","constructor","props","validate","specsCreate","specs","some","spec","nazwa","state","inputs","spec_name","errors","length","errorsLabel","setInputValue","name","val","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","payment","EditSpecDialog","indx","selected","id","placa"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormDialog } from '../../Shared/Dialog';\nimport { TextField } from '@material-ui/core';\n\nexport class AddSpecDialog extends React.Component { \n    constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        spec_name: '',\n        payment: 0,\n      },\n      errors: {\n        spec_name: false,\n      },\n      errorsLabel: {\n        spec_name: '',\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const specsCreate = this.props.specs.some(spec => spec.nazwa === this.state.inputs.spec_name)\n    return { //true means error\n      errors: {\n        spec_name: this.state.inputs.spec_name.length === 0 || specsCreate,\n      },\n      errorsLabel: {\n        spec_name: this.state.inputs.spec_name.length === 0 ? 'Pusta nazwa specjalizacji' : (specsCreate ? 'Taka specjalizacja już istnieje' : ''),\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n\n        <TextField\n        autoFocus\n        required\n        error={this.state.errors.spec_name}\n        helperText={this.state.errorsLabel.spec_name}\n        margin=\"dense\"\n        id=\"spec_name\"\n        label=\"Nazwa specjalizacji\"\n        type=\"text\"\n        fullWidth\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('spec_name', event.target.value)}}\n        inputProps={{ maxLength: 45 }}\n        />\n\n        <label style={{\"paddingRight\": '5px'}}>Płaca dodatkowa  </label>\n        <input type=\"number\" min=\"0\" max=\"30000\" value={this.state.inputs.payment} onChange={(event) => {this.setInputValue('payment', event.target.value)}}/>\n\n    </FormDialog>\n  )}\n}\n\nexport class EditSpecDialog extends React.Component { \n    constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        spec_name: this.props.selected.nazwa,\n        payment: this.props.selected.placa,\n      },\n      errors: {\n        spec_name: false,\n      },\n      errorsLabel: {\n        spec_name: '',\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const specsCreate = this.props.specs.some((spec, indx) => spec.nazwa === this.state.inputs.spec_name && indx !== this.props.selected.id)\n    return { //true means error\n      errors: {\n        spec_name: this.state.inputs.spec_name.length === 0 || specsCreate,\n      },\n      errorsLabel: {\n        spec_name: this.state.inputs.spec_name.length === 0 ? 'Pusta nazwa specjalizacji' : (specsCreate ? 'Taka specjalizacja już istnieje' : ''),\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n\n        <TextField\n        autoFocus\n        required\n        error={this.state.errors.spec_name}\n        helperText={this.state.errorsLabel.spec_name}\n        margin=\"dense\"\n        id=\"spec_name\"\n        label=\"Nazwa specjalizacji\"\n        type=\"text\"\n        fullWidth\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('spec_name', event.target.value)}}\n        inputProps={{ maxLength: 45 }}\n        />\n\n        <label style={{\"paddingRight\": '5px'}}>Płaca dodatkowa  </label>\n        <input type=\"number\" min=\"0\" max=\"30000\" value={this.state.inputs.payment} onChange={(event) => {this.setInputValue('payment', event.target.value)}}/>\n\n    </FormDialog>\n  )}\n}"]},"metadata":{},"sourceType":"module"}