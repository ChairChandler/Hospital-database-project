{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js\";\nimport React from 'react';\nimport { DataGrid, ToolbarOptions } from 'tubular-react';\nimport { ColumnModel } from 'tubular-common';\nimport { Checkbox, IconButton } from '@material-ui/core';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport { Redirect } from 'react-router-dom';\nexport default class SQLTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = () => {\n      const state = this.state;\n      state.redirect = true;\n      this.setState(state);\n    };\n\n    this.createColumns = () => {\n      this.columns = this.props.headers.map(({\n        header\n      }, colnum) => new ColumnModel(header, {\n        sortable: true,\n        searchable: true\n      }));\n      this.columns.push(new ColumnModel('rownum', {\n        visible: false,\n        isKey: true\n      }));\n    };\n\n    this.createRows = () => {\n      if (this.props.selectRowChecbox) {\n        this.columns.push(new ColumnModel('selected', {\n          label: ' '\n        }));\n        this.rows = this.props.rows.map((val, indx) => {\n          val['selected'] = React.createElement(Checkbox, {\n            onClick: this.onRowClick.bind(this, val),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          });\n          val['rownum'] = indx;\n          return val;\n        });\n      } else {\n        this.rows = this.props.rows.map((val, indx) => {\n          val['rownum'] = indx;\n          return val;\n        });\n      }\n    };\n\n    this.createToolbar = () => {\n      this.toolbarButton = new ToolbarOptions({\n        customItems: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.props.children, React.createElement(IconButton, {\n          onClick: this.logout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(ExitToAppOutlinedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }))),\n        exportButton: false,\n        printButton: false\n      });\n    };\n\n    this.onRowClick = row => {\n      const state = this.state;\n      const indx = state.clickedRows.findIndex(val => val.rownum === row.rownum);\n\n      if (indx < 0) {\n        state.clickedRows.push(row);\n        state.rows[row.rownum].selected = '123';\n      } else {\n        state.clickedRows.splice(indx, 1);\n      }\n\n      this.setState(state);\n      this.props.onRowClick(state.clickedRows);\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(DataGrid, {\n        gridName: \"\",\n        columns: this.columns,\n        dataSource: this.state.rows,\n        onRowClick: () => this.props.selectRowChecbox && this.props.onRowClick ? this.props.onRowClick : null,\n        toolbarOptions: this.toolbarButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), this.state.redirect && React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    };\n\n    this.createToolbar();\n    this.createColumns();\n    this.createRows();\n    this.state = {\n      clickedRows: [],\n      rows: this.rows,\n      redirect: false\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js"],"names":["React","DataGrid","ToolbarOptions","ColumnModel","Checkbox","IconButton","ExitToAppOutlinedIcon","Redirect","SQLTable","Component","constructor","props","logout","state","redirect","setState","createColumns","columns","headers","map","header","colnum","sortable","searchable","push","visible","isKey","createRows","selectRowChecbox","label","rows","val","indx","onRowClick","bind","createToolbar","toolbarButton","customItems","children","exportButton","printButton","row","clickedRows","findIndex","rownum","selected","splice","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,eAAzC;AACA,SAASC,WAAT,QAA2B,gBAA3B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mBAArC;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,MAdmB,GAcV,MAAM;AACb,YAAMC,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACC,QAAN,GAAiB,IAAjB;AACA,WAAKC,QAAL,CAAcF,KAAd;AACD,KAlBkB;;AAAA,SAoBnBG,aApBmB,GAoBH,MAAM;AACpB,WAAKC,OAAL,GAAe,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,GAAnB,CAAuB,CAAC;AAACC,QAAAA;AAAD,OAAD,EAAWC,MAAX,KACtC,IAAIlB,WAAJ,CAAgBiB,MAAhB,EAAwB;AACtBE,QAAAA,QAAQ,EAAE,IADY;AAEtBC,QAAAA,UAAU,EAAE;AAFU,OAAxB,CADe,CAAf;AAKA,WAAKN,OAAL,CAAaO,IAAb,CAAkB,IAAIrB,WAAJ,CAAgB,QAAhB,EAA0B;AAC1CsB,QAAAA,OAAO,EAAE,KADiC;AAE1CC,QAAAA,KAAK,EAAE;AAFmC,OAA1B,CAAlB;AAID,KA9BkB;;AAAA,SAgCnBC,UAhCmB,GAgCN,MAAM;AACjB,UAAG,KAAKhB,KAAL,CAAWiB,gBAAd,EAAgC;AAC9B,aAAKX,OAAL,CAAaO,IAAb,CAAkB,IAAIrB,WAAJ,CAAgB,UAAhB,EAA4B;AAAC0B,UAAAA,KAAK,EAAE;AAAR,SAA5B,CAAlB;AACA,aAAKC,IAAL,GAAY,KAAKnB,KAAL,CAAWmB,IAAX,CAAgBX,GAAhB,CAAoB,CAACY,GAAD,EAAMC,IAAN,KAAe;AAC3CD,UAAAA,GAAG,CAAC,UAAD,CAAH,GAAkB,oBAAC,QAAD;AAAU,YAAA,OAAO,EAAE,KAAKE,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,EAA2BH,GAA3B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB;AACAA,UAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBC,IAAhB;AACA,iBAAOD,GAAP;AACH,SAJW,CAAZ;AAKD,OAPD,MAOO;AACL,aAAKD,IAAL,GAAY,KAAKnB,KAAL,CAAWmB,IAAX,CAAgBX,GAAhB,CAAoB,CAACY,GAAD,EAAMC,IAAN,KAAe;AAC7CD,UAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBC,IAAhB;AACA,iBAAOD,GAAP;AACD,SAHW,CAAZ;AAID;AACF,KA9CkB;;AAAA,SAgDnBI,aAhDmB,GAgDH,MAAM;AACpB,WAAKC,aAAL,GAAqB,IAAIlC,cAAJ,CAAmB;AACtCmC,QAAAA,WAAW,EACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK1B,KAAL,CAAW2B,QADd,EAEE,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,KAAK1B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,CAFsC;AAQtC2B,QAAAA,YAAY,EAAE,KARwB;AAStCC,QAAAA,WAAW,EAAE;AATyB,OAAnB,CAArB;AAWD,KA5DkB;;AAAA,SA8DnBP,UA9DmB,GA8DLQ,GAAD,IAAS;AACpB,YAAM5B,KAAK,GAAG,KAAKA,KAAnB;AACA,YAAMmB,IAAI,GAAGnB,KAAK,CAAC6B,WAAN,CAAkBC,SAAlB,CAA6BZ,GAAD,IAASA,GAAG,CAACa,MAAJ,KAAeH,GAAG,CAACG,MAAxD,CAAb;;AACA,UAAGZ,IAAI,GAAG,CAAV,EAAa;AACXnB,QAAAA,KAAK,CAAC6B,WAAN,CAAkBlB,IAAlB,CAAuBiB,GAAvB;AACA5B,QAAAA,KAAK,CAACiB,IAAN,CAAWW,GAAG,CAACG,MAAf,EAAuBC,QAAvB,GAAkC,KAAlC;AACD,OAHD,MAGO;AACLhC,QAAAA,KAAK,CAAC6B,WAAN,CAAkBI,MAAlB,CAAyBd,IAAzB,EAA+B,CAA/B;AACD;;AAED,WAAKjB,QAAL,CAAcF,KAAd;AACA,WAAKF,KAAL,CAAWsB,UAAX,CAAsBpB,KAAK,CAAC6B,WAA5B;AACD,KA1EkB;;AAAA,SA4EnBK,MA5EmB,GA4EV,MAAM;AACb,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACA,QAAA,QAAQ,EAAC,EADT;AAEA,QAAA,OAAO,EAAE,KAAK9B,OAFd;AAGA,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWiB,IAHvB;AAIA,QAAA,UAAU,EAAE,MAAM,KAAKnB,KAAL,CAAWiB,gBAAX,IAA+B,KAAKjB,KAAL,CAAWsB,UAA1C,GAAuD,KAAKtB,KAAL,CAAWsB,UAAlE,GAA+E,IAJjG;AAKA,QAAA,cAAc,EAAE,KAAKG,aALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASC,KAAKvB,KAAL,CAAWC,QAAX,IAAwB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATzB,CADF;AAYA,KAzFiB;;AAGjB,SAAKqB,aAAL;AACA,SAAKnB,aAAL;AACA,SAAKW,UAAL;AAEA,SAAKd,KAAL,GAAa;AACX6B,MAAAA,WAAW,EAAE,EADF;AAEXZ,MAAAA,IAAI,EAAE,KAAKA,IAFA;AAGXhB,MAAAA,QAAQ,EAAG;AAHA,KAAb;AAKD;;AAbmD","sourcesContent":["import React from 'react';\nimport { DataGrid, ToolbarOptions } from 'tubular-react';\nimport { ColumnModel} from 'tubular-common';\nimport { Checkbox, IconButton } from '@material-ui/core';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport { Redirect } from 'react-router-dom';\n\nexport default class SQLTable extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.createToolbar()\n    this.createColumns()\n    this.createRows()\n\n    this.state = {\n      clickedRows: [],\n      rows: this.rows,\n      redirect : false\n    }\n  }\n\n  logout = () => {\n    const state = this.state\n    state.redirect = true\n    this.setState(state)\n  }\n\n  createColumns = () => {\n    this.columns = this.props.headers.map(({header}, colnum) => \n    new ColumnModel(header, {\n      sortable: true,\n      searchable: true\n    }))\n    this.columns.push(new ColumnModel('rownum', {\n      visible: false,\n      isKey: true\n    }))\n  }\n\n  createRows = () => {\n    if(this.props.selectRowChecbox) {\n      this.columns.push(new ColumnModel('selected', {label: ' '}))\n      this.rows = this.props.rows.map((val, indx) => {\n          val['selected'] = <Checkbox onClick={this.onRowClick.bind(this, val)}></Checkbox>\n          val['rownum'] = indx\n          return val\n      })\n    } else {\n      this.rows = this.props.rows.map((val, indx) => {\n        val['rownum'] = indx\n        return val\n      })\n    }\n  }\n  \n  createToolbar = () => {\n    this.toolbarButton = new ToolbarOptions({\n      customItems: (\n      <div>\n        {this.props.children}\n        <IconButton onClick={this.logout}>\n          <ExitToAppOutlinedIcon/>\n        </IconButton>\n      </div>),\n      exportButton: false,\n      printButton: false\n    });\n  }\n\n  onRowClick = (row) => {\n    const state = this.state\n    const indx = state.clickedRows.findIndex((val) => val.rownum === row.rownum)\n    if(indx < 0) {  \n      state.clickedRows.push(row)\n      state.rows[row.rownum].selected = '123'\n    } else {\n      state.clickedRows.splice(indx, 1)\n    }\n\n    this.setState(state)\n    this.props.onRowClick(state.clickedRows)\n  } \n\n  render = () => {\n    return (\n      <div>\n        <DataGrid\n        gridName=''\n        columns={this.columns}\n        dataSource={this.state.rows}\n        onRowClick={() => this.props.selectRowChecbox && this.props.onRowClick ? this.props.onRowClick : null}\n        toolbarOptions={this.toolbarButton}\n      />\n\n      {this.state.redirect && (<Redirect to='/login'/>)}\n    </div>\n  )}\n}"]},"metadata":{},"sourceType":"module"}