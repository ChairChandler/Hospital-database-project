{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar useTubular_1 = require(\"./useTubular\");\n\nexports.useTbList = function (initColumns, source, tubularOptions) {\n  var tubular = useTubular_1.useTubular(initColumns, source, tubularOptions);\n  var infiniteLoaderRef = React.useRef(null);\n\n  var _a = React.useState({\n    hasNextPage: false,\n    // We need to hold all the items that we have loaded\n    // This will be a cumulated of all of the rows from tubular instance\n    items: []\n  }),\n      list = _a[0],\n      setListState = _a[1]; // Reset list is required to flush cache from\n  // Infinite loader\n\n\n  var resetList = function () {\n    infiniteLoaderRef.current.resetLoadMoreRowsCache(true);\n    setListState({\n      hasNextPage: false,\n      items: []\n    });\n    tubular.api.goToPage(0);\n  };\n\n  var sortByColumn = function (columnName) {\n    resetList();\n    tubular.api.sortColumn(columnName);\n  };\n\n  var search = function (value) {\n    resetList();\n    tubular.api.updateSearchText(value);\n  };\n\n  React.useEffect(function () {\n    setListState(function (state) {\n      var _a;\n\n      return {\n        hasNextPage: state.items.length + tubular.state.data.length < tubular.state.filteredRecordCount,\n        items: (_a = __spreadArrays(state.items)).concat.apply(_a, tubular.state.data)\n      };\n    });\n  }, [tubular.state.data]);\n  return {\n    // API fort a list should be simpler than\n    // the one used for a grid\n    api: {\n      loadPage: tubular.api.goToPage,\n      search: search,\n      sortByColumn: sortByColumn\n    },\n    state: __assign(__assign({}, tubular.state), {\n      // This is the ref that will be binded\n      // to the actual infinite loader component\n      infiniteLoaderRef: infiniteLoaderRef,\n      list: list\n    })\n  };\n};","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/node_modules/tubular-react-common/dist/useTbList.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","defineProperty","exports","value","React","require","useTubular_1","useTbList","initColumns","source","tubularOptions","tubular","useTubular","infiniteLoaderRef","useRef","_a","useState","hasNextPage","items","list","setListState","resetList","current","resetLoadMoreRowsCache","api","goToPage","sortByColumn","columnName","sortColumn","search","updateSearchText","useEffect","state","data","filteredRecordCount","concat","loadPage"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar useTubular_1 = require(\"./useTubular\");\nexports.useTbList = function (initColumns, source, tubularOptions) {\n    var tubular = useTubular_1.useTubular(initColumns, source, tubularOptions);\n    var infiniteLoaderRef = React.useRef(null);\n    var _a = React.useState({\n        hasNextPage: false,\n        // We need to hold all the items that we have loaded\n        // This will be a cumulated of all of the rows from tubular instance\n        items: [],\n    }), list = _a[0], setListState = _a[1];\n    // Reset list is required to flush cache from\n    // Infinite loader\n    var resetList = function () {\n        infiniteLoaderRef.current.resetLoadMoreRowsCache(true);\n        setListState({ hasNextPage: false, items: [] });\n        tubular.api.goToPage(0);\n    };\n    var sortByColumn = function (columnName) {\n        resetList();\n        tubular.api.sortColumn(columnName);\n    };\n    var search = function (value) {\n        resetList();\n        tubular.api.updateSearchText(value);\n    };\n    React.useEffect(function () {\n        setListState(function (state) {\n            var _a;\n            return {\n                hasNextPage: state.items.length + tubular.state.data.length < tubular.state.filteredRecordCount,\n                items: (_a = __spreadArrays(state.items)).concat.apply(_a, tubular.state.data),\n            };\n        });\n    }, [tubular.state.data]);\n    return {\n        // API fort a list should be simpler than\n        // the one used for a grid\n        api: {\n            loadPage: tubular.api.goToPage,\n            search: search,\n            sortByColumn: sortByColumn,\n        },\n        state: __assign(__assign({}, tubular.state), { \n            // This is the ref that will be binded\n            // to the actual infinite loader component\n            infiniteLoaderRef: infiniteLoaderRef,\n            list: list }),\n    };\n};\n"]},"metadata":{},"sourceType":"script"}