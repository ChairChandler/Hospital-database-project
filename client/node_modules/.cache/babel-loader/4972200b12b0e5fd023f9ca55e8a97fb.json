{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAccountType = type => {\n      App.accountType = type;\n    };\n\n    this.componentWillMount = () => {\n      this.unregisterLeaveHook = this.props.router.setRouteLeaveHook(this.props.route, this.routerWillLeave.bind(this));\n    };\n\n    this.routerWillLeave = nextLocation => {\n      return false;\n    };\n\n    this.componentWillUnmount = () => {\n      this.unregisterLeaveHook();\n    };\n\n    this.getAccountType = () => {\n      return App.accountType;\n    };\n\n    this.render = () => {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(SignIn, {\n        connection: App.connection,\n        onLogged: this.setAccountType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/admin\",\n        getAccountTypeUser: this.getAccountType,\n        accountTypeComponent: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(AdminPanel, {\n        connection: App.connection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/director\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(DirectorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/reception\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(ReceptionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(DoctorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(Redirect, {\n        exact: true,\n        from: \"/\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    };\n\n    this.props = props;\n  }\n\n}\n\nApp.connection = {\n  ip: '127.0.0.1',\n  port: '1234'\n};\nApp.accountType = undefined;\nexport default App;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","SignIn","AdminPanel","DirectorPanel","DoctorPanel","ReceptionPanel","PrivateRoute","App","Component","constructor","props","setAccountType","type","accountType","componentWillMount","unregisterLeaveHook","router","setRouteLeaveHook","route","routerWillLeave","bind","nextLocation","componentWillUnmount","getAccountType","render","connection","ip","port","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  \n  static connection = {\n    ip: '127.0.0.1',\n    port:'1234'\n  }\n\n  static accountType = undefined\n\n  constructor(props) {\n    super(props)\n\n    this.props = props\n  }\n\n  setAccountType = (type) => {\n    App.accountType = type\n  }\n\n  componentWillMount = () => {\n    this.unregisterLeaveHook = this.props.router.setRouteLeaveHook(this.props.route, this.routerWillLeave.bind(this))\n  }\n\n  routerWillLeave = (nextLocation) => {\n    return false;        \n  }\n\n  componentWillUnmount = () => {\n    this.unregisterLeaveHook()\n  }\n\n  getAccountType = () => {\n    return App.accountType\n  }\n\n  render = () => {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\">\n            <SignIn connection={App.connection} onLogged={this.setAccountType}></SignIn>\n          </Route>\n\n          <PrivateRoute exact path=\"/account/admin\" getAccountTypeUser={this.getAccountType} accountTypeComponent=\"admin\">\n            <AdminPanel connection={App.connection}></AdminPanel>\n          </PrivateRoute>\n\n          <Route exact path=\"/account/director\">\n            <DirectorPanel></DirectorPanel>\n          </Route>\n\n          <Route exact path=\"/account/reception\">\n            <ReceptionPanel></ReceptionPanel>\n          </Route>\n\n          <Route exact path=\"/account/doctor\">\n            <DoctorPanel></DoctorPanel>\n          </Route>\n        </Switch>\n\n        <Redirect exact from=\"/\" to=\"/login\"/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}