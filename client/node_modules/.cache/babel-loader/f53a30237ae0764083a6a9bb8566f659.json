{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const userCreated = this.props.users.some(row => row.nazwa === this.state.inputs.login);\n      return {\n        //true means error\n        errors: {\n          login: !this.state.inputs.login.length || userCreated,\n          password: !this.state.inputs.password.length\n        },\n        errorsLabel: {\n          login: !this.state.inputs.login.length ? 'Empty login' : userCreated ? 'User already created' : '',\n          password: !this.state.inputs.password.length ? 'Empty password' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.login,\n        helperText: this.state.errorsLabel.login,\n        margin: \"dense\",\n        id: \"login\",\n        label: \"Login\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('login', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.password,\n        helperText: this.state.errorsLabel.password,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('password', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Type\",\n        onChange: event => {\n          if (event.target.value === 'null') {\n            this.setInputValue('type', null);\n          } else {\n            this.setInputValue('type', event.target.value);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"null\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Empty\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      inputs: {\n        login: '',\n        password: '',\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      errorsLabel: {\n        login: '',\n        password: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport class EditUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const userWithSameNameCreated = this.props.users.some(row => row.nazwa === this.state.inputs.login && row.id !== this.props.selected.id);\n      return {\n        //true means error\n        errors: {\n          login: !this.state.inputs.login.length || userWithSameNameCreated,\n          password: !this.state.inputs.password.length\n        },\n        errorsLabel: {\n          login: !this.state.inputs.login.length ? 'Empty login' : userWithSameNameCreated ? 'Another user with this name exists' : '',\n          password: !this.state.inputs.password.length ? 'Empty password' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.login,\n        helperText: this.state.errorsLabel.login,\n        margin: \"dense\",\n        id: \"login\",\n        label: \"Login\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('login', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.password,\n        helperText: this.state.errorsLabel.password,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('password', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Type\",\n        onChange: event => {\n          if (event.target.value === 'null') {\n            this.setInputValue('type', null);\n          } else {\n            this.setInputValue('type', event.target.value);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"null\",\n        selected: this.props.selected.rola == null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Empty\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        selected: this.props.selected.rola === type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      inputs: {\n        login: '',\n        password: '',\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      errorsLabel: {\n        login: '',\n        password: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport const DeleteUserDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Are you sure?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 248\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","AddUserDialog","Component","constructor","props","validate","userCreated","users","some","row","nazwa","state","inputs","login","errors","length","password","errorsLabel","setInputValue","name","val","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","types","map","EditUserDialog","userWithSameNameCreated","id","selected","rola","DeleteUserDialog","isOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\n\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        login: '',\n        password: '',\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      errorsLabel: {\n        login: '',\n        password: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const userCreated = this.props.users.some(row => row.nazwa === this.state.inputs.login)\n\n    return { //true means error\n      errors: {\n        login: !this.state.inputs.login.length || userCreated,\n        password: !this.state.inputs.password.length\n      },\n      errorsLabel: {\n        login: !this.state.inputs.login.length ? 'Empty login' : (userCreated ? 'User already created' : ''),\n        password: !this.state.inputs.password.length ? 'Empty password' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.login}\n      helperText={this.state.errorsLabel.login}\n      margin=\"dense\"\n      id=\"login\"\n      label=\"Login\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('login', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.password}\n      helperText={this.state.errorsLabel.password}\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Password\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('password', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <select name=\"Type\" onChange={(event) => {\n        if(event.target.value === 'null') {\n          this.setInputValue('type', null)\n        } else {\n          this.setInputValue('type', event.target.value)\n        }}}\n      >\n\n        <option value=\"null\" selected>Empty</option>\n        {this.props.types.map(type => <option value={type}>{type}</option>)}\n\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport class EditUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        login: '',\n        password: '',\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      errorsLabel: {\n        login: '',\n        password: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const userWithSameNameCreated = this.props.users.some(row => row.nazwa === this.state.inputs.login && row.id !== this.props.selected.id)\n\n    return { //true means error\n      errors: {\n        login: !this.state.inputs.login.length || userWithSameNameCreated,\n        password: !this.state.inputs.password.length\n      },\n      errorsLabel: {\n        login: !this.state.inputs.login.length ? 'Empty login' : (userWithSameNameCreated ? 'Another user with this name exists' : ''),\n        password: !this.state.inputs.password.length ? 'Empty password' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.login}\n      helperText={this.state.errorsLabel.login}\n      margin=\"dense\"\n      id=\"login\"\n      label=\"Login\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('login', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.password}\n      helperText={this.state.errorsLabel.password}\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Password\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('password', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <select name=\"Type\" onChange={(event) => {\n        if(event.target.value === 'null') {\n          this.setInputValue('type', null)\n        } else {\n          this.setInputValue('type', event.target.value)\n        }}}\n      >\n\n        <option value=\"null\" selected={this.props.selected.rola == null}>Empty</option>\n        {this.props.types.map(type => <option value={type} selected={this.props.selected.rola === type}>{type}</option>)}\n\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport const DeleteUserDialog = ({isOpen, title, onClose}) =>\n    <QuestionDialog isOpen={isOpen} title={title} question=\"Are you sure?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}