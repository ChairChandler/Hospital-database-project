{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/AdminPanel.js\";\nimport React from 'react';\nimport SQLTable from '../Shared/SQLTable';\nexport default class AdminPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsers = () => {\n      fetch(`http://${this.props.connection.ip}:${this.props.connection.port}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          operation: 'show users',\n          data: this.props.user\n        })\n      }).then(res => res.json()).then(json => {\n        this._headers = json.headers;\n        this._rows = json.rows;\n        this.forceUpdate();\n      }).catch(error => {\n        alert(error);\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.headers && this.rows && React.createElement(SQLTable, {\n        headers: this.headers,\n        rows: this.rows,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    };\n\n    this.getUsers();\n  }\n\n  get headers() {\n    alert(`1: ${this._headers}`);\n    return this._headers;\n  }\n\n  get rows() {\n    return this._rows;\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/AdminPanel.js"],"names":["React","SQLTable","AdminPanel","Component","constructor","props","getUsers","fetch","connection","ip","port","method","headers","body","JSON","stringify","operation","data","user","then","res","json","_headers","_rows","rows","forceUpdate","catch","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,eAAe,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,QALmB,GAKR,MAAM;AACbC,MAAAA,KAAK,CAAE,UAAS,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,EAAG,IAAG,KAAKJ,KAAL,CAAWG,UAAX,CAAsBE,IAAK,EAAlE,EAAqE;AACxEC,QAAAA,MAAM,EAAE,MADgE;AAExEC,QAAAA,OAAO,EAAE;AACP,0BAAgB,YADT;AAEP,oBAAU;AAFH,SAF+D;AAMxEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,SAAS,EAAE,YADQ;AAEnBC,UAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWa;AAFE,SAAf;AANkE,OAArE,CAAL,CAWCC,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYME,IAAI,IAAI;AACV,aAAKC,QAAL,GAAgBD,IAAI,CAACT,OAArB;AACA,aAAKW,KAAL,GAAaF,IAAI,CAACG,IAAlB;AACA,aAAKC,WAAL;AACH,OAhBD,EAiBCC,KAjBD,CAiBOC,KAAK,IAAI;AACZC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH,OAnBD;AAoBH,KA1BkB;;AAAA,SAqCnBE,MArCmB,GAqCV,MAAM;AACX,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKjB,OAAL,IAAgB,KAAKY,IAArB,IAA8B,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKZ,OAAxB;AAAiC,QAAA,IAAI,EAAE,KAAKY,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnC,CADJ;AAKH,KA3CkB;;AAEf,SAAKlB,QAAL;AACH;;AAyBD,MAAIM,OAAJ,GAAc;AACVgB,IAAAA,KAAK,CAAE,MAAK,KAAKN,QAAS,EAArB,CAAL;AACA,WAAO,KAAKA,QAAZ;AACH;;AAED,MAAIE,IAAJ,GAAW;AACP,WAAO,KAAKD,KAAZ;AACH;;AApCmD","sourcesContent":["import React from 'react';\nimport SQLTable from '../Shared/SQLTable';\n\nexport default class AdminPanel extends React.Component {\n    constructor(props) {\n        super(props)\n        this.getUsers()\n    }\n    \n    getUsers = () => {\n        fetch(`http://${this.props.connection.ip}:${this.props.connection.port}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'text/plain',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            operation: 'show users',\n            data: this.props.user\n          })\n        })\n        .then(res => res.json())\n        .then(json => {\n            this._headers = json.headers\n            this._rows = json.rows\n            this.forceUpdate()\n        })\n        .catch(error => {\n            alert(error)\n        })\n    }\n\n    get headers() {\n        alert(`1: ${this._headers}`)\n        return this._headers\n    }\n\n    get rows() {\n        return this._rows\n    }\n\n    render = () => {\n        return(\n            <div>\n                {this.headers && this.rows && (<SQLTable headers={this.headers} rows={this.rows}/>)}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}