{"ast":null,"code":"import _slicedToArray from \"/home/chairchandler/Desktop/Bazy Danych/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/Dialog.js\";\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button, DialogContentText } from '@material-ui/core';\nexport const FormDialog = ({\n  isOpen,\n  reopen,\n  onClose,\n  title = '',\n  message = '',\n  children\n}) => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        isCancelled = _React$useState2[0],\n        setCancelled = _React$useState2[1];\n\n  if (reopen) {\n    setCancelled(false);\n  }\n\n  return React.createElement(Dialog, {\n    open: !isCancelled && isOpen,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, title), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, message && React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, message), children), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      setCancelled(true);\n      onClose('cancel');\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"cancel\"), React.createElement(Button, {\n    onClick: () => {\n      onClose('done');\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"done\")));\n};\nexport const QuestionDialog = ({\n  isOpen,\n  title = '',\n  question = '',\n  answers,\n  onClose\n}) => {\n  return React.createElement(Dialog, {\n    open: isOpen,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, title), question && React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, question)), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, answers.map(answer => React.createElement(Button, {\n    onClick: () => {\n      onClose(answer);\n    },\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, answer))));\n};","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/Dialog.js"],"names":["React","Dialog","DialogActions","DialogContent","DialogTitle","Button","DialogContentText","FormDialog","isOpen","reopen","onClose","title","message","children","useState","isCancelled","setCancelled","QuestionDialog","question","answers","map","answer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button, DialogContentText }  from '@material-ui/core';\n\nexport const FormDialog = ({isOpen, reopen, onClose, title = '', message = '', children}) => {\n  const [isCancelled, setCancelled] = React.useState(false)\n  \n  if(reopen) {\n    setCancelled(false)\n  }\n\n  return (\n    <Dialog open={!isCancelled && isOpen} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        {message && (\n          <DialogContentText>\n            {message}\n          </DialogContentText>)\n        }\n        {children}\n      </DialogContent>\n  \n      <DialogActions>\n        <Button onClick={() => {setCancelled(true); onClose('cancel')}} color=\"primary\">\n          cancel\n        </Button>\n        <Button onClick={() => {onClose('done')}} color=\"primary\">\n          done\n        </Button>\n      </DialogActions>\n    </Dialog>\n    )\n  }\n\nexport const QuestionDialog = ({isOpen, title = '', question = '', answers, onClose}) => {\n    return (\n      <Dialog open={isOpen} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n          {question && (\n            <DialogContent>\n              <DialogContentText>\n                {question}\n              </DialogContentText>\n            </DialogContent>)\n          }\n          <DialogActions>\n            {answers.map(answer => <Button onClick={() => {onClose(answer)}} color=\"primary\">{answer}</Button>)}\n          </DialogActions>\n      </Dialog>\n    )\n  }"]},"metadata":{},"sourceType":"module"}