{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/JobDialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../../Shared/Dialog';\nexport class AddJobTypeDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const jobTypeCreate = this.props.jobs.some(job => job.nazwa_etatu === this.state.inputs.name);\n      return {\n        //true means error\n        errors: {\n          name: jobTypeCreate || !this.state.inputs.name.length\n        },\n        errorsLabel: {\n          name: jobTypeCreate ? 'Etat już istnieje' : !this.state.inputs.name.length ? 'Puste imie' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Etat\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        style: {\n          \"paddingRight\": '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"P\\u0142aca podstawowa  \"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"30000\",\n        value: this.state.inputs.payment,\n        onChange: event => {\n          this.setInputValue('payment', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      inputs: {\n        name: '',\n        payment: 0\n      },\n      errors: {\n        name: false\n      },\n      errorsLabel: {\n        name: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport class EditJobTypeDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      return {\n        //true means error\n        errors: {\n          name: !this.state.inputs.name.length || this.state.inputs.name === 'lekarz' || this.state.isDoctor\n        },\n        errorsLabel: {\n          name: !this.state.inputs.name.length ? 'Puste imie' : this.state.isDoctor && this.state.inputs.name !== 'lekarz' ? 'Edycja predefiniowanego etatu zabroniona' : !this.state.isDoctor && this.state.inputs.name === 'lekarz' ? 'Nie można użyć predefiniowanego etatu' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        value: this.state.inputs.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Etat\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        style: {\n          \"paddingRight\": '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"P\\u0142aca podstawowa  \"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"30000\",\n        value: this.state.inputs.payment,\n        onChange: event => {\n          this.setInputValue('payment', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      inputs: {\n        name: this.props.selected.nazwa_etatu,\n        payment: this.props.selected.placa_pod\n      },\n      errors: {\n        name: false\n      },\n      errorsLabel: {\n        name: ''\n      },\n      isCancelled: false,\n      isDoctor: this.props.selected.nazwa_etatu === 'lekarz'\n    };\n  }\n\n}\nexport const DeleteJobTypeDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Czy jestes pewny?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/JobDialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","AddJobTypeDialog","Component","constructor","props","validate","jobTypeCreate","jobs","some","job","nazwa_etatu","state","inputs","name","errors","length","errorsLabel","setInputValue","val","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","payment","EditJobTypeDialog","isDoctor","selected","placa_pod","DeleteJobTypeDialog","isOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../../Shared/Dialog';\n\nexport class AddJobTypeDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        name: '',\n        payment: 0\n      },\n      errors: {\n        name: false\n      },\n      errorsLabel: {\n        name: '',\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const jobTypeCreate = this.props.jobs.some(job => job.nazwa_etatu === this.state.inputs.name)\n    return { //true means error\n      errors: {\n        name: jobTypeCreate || !this.state.inputs.name.length,\n      },\n      errorsLabel: {\n        name: jobTypeCreate? 'Etat już istnieje' : (!this.state.inputs.name.length ? 'Puste imie' : '')\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.name}\n      helperText={this.state.errorsLabel.name}\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Etat\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n    <label style={{\"paddingRight\": '5px'}}>Płaca podstawowa  </label>\n     <input type=\"number\" min=\"0\" max=\"30000\" value={this.state.inputs.payment} onChange={(event) => {this.setInputValue('payment', event.target.value)}}/>\n\n    </FormDialog>\n  )}\n}\n\nexport class EditJobTypeDialog extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        inputs: {\n          name: this.props.selected.nazwa_etatu,\n          payment: this.props.selected.placa_pod\n        },\n        errors: {\n          name: false\n        },\n        errorsLabel: {\n          name: '',\n        },\n        isCancelled: false,\n        isDoctor: this.props.selected.nazwa_etatu === 'lekarz'\n      } \n    }\n  \n    validate = () => {\n        return { //true means error\n          errors: {\n            name: !this.state.inputs.name.length || this.state.inputs.name === 'lekarz' || this.state.isDoctor,\n          },\n          errorsLabel: {\n            name: !this.state.inputs.name.length ? 'Puste imie' : (this.state.isDoctor && this.state.inputs.name !== 'lekarz' ? 'Edycja predefiniowanego etatu zabroniona' : \n            (!this.state.isDoctor && this.state.inputs.name === 'lekarz' ? 'Nie można użyć predefiniowanego etatu': ''))\n          }\n        }\n      }\n  \n    setInputValue = (name, val) => {\n      const state = this.state\n      state.inputs[name] = val\n      this.setState(state)\n    }\n  \n    exit = () => {\n      const state = this.state\n      state.isCancelled = true\n      this.setState(state)\n    }\n  \n    setErrors = (errors, label) => {\n      const state = this.state\n      state.errors = errors\n      state.errorsLabel = label\n      this.setState(state)\n    }\n  \n    submit = (button) => {\n      if(button === 'cancel') {\n        this.exit()\n        this.props.onClose(button)\n      } else {\n        const errors = this.validate()\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n        \n        if(isError) {\n          this.setErrors(errors.errors, errors.errorsLabel)\n        } else {\n          this.props.setData(this.state.inputs)\n          this.exit()\n          this.props.onClose(button)\n        }\n      }\n    }\n  \n    render = () => {\n      return !this.state.isCancelled && (\n      <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n        \n        <TextField\n        autoFocus\n        required\n        error={this.state.errors.name}\n        helperText={this.state.errorsLabel.name}\n        value={this.state.inputs.name}\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Etat\"\n        type=\"text\"\n        fullWidth\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n        inputProps={{ maxLength: 45 }}\n        />\n  \n        <label style={{\"paddingRight\": '5px'}}>Płaca podstawowa  </label>\n       <input type=\"number\" min=\"0\" max=\"30000\" value={this.state.inputs.payment} onChange={(event) => {this.setInputValue('payment', event.target.value)}}/>\n  \n      </FormDialog>\n    )}\n  }\n\nexport const DeleteJobTypeDialog = ({isOpen, title, onClose}) =>\n  <QuestionDialog isOpen={isOpen} title={title} question=\"Czy jestes pewny?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}