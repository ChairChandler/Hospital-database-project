{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const userCreated = this.props.users.some(name => name === this.state.inputs.login);\n      alert(userCreated);\n      return {\n        //true means error\n        errors: {\n          login: !this.state.inputs.login.length || userCreated,\n          password: !this.state.inputs.password.length\n        },\n        errorsLabel: {\n          login: !this.state.inputs.login.length ? 'Empty login' : userCreated ? 'User already created' : '',\n          password: !this.state.inputs.password.length ? 'Empty password' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.login,\n        helperText: this.state.errorsLabel.login,\n        margin: \"dense\",\n        id: \"login\",\n        label: \"Login\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('login', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.password,\n        helperText: this.state.errorsLabel.password,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('password', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Type\",\n        onChange: event => {\n          if (event.target.value === 'null') {\n            this.setInputValue('type', null);\n          } else {\n            this.setInputValue('type', event.target.value);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"null\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Empty\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      inputs: {\n        login: '',\n        password: '',\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      errorsLabel: {\n        login: '',\n        password: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport const EditUserDialog = props => React.createElement(FormDialog, {\n  isOpen: props.isOpen,\n  onClose: props.onClose,\n  title: props.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"password\",\n  label: \"Password\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"type\",\n  label: \"Type\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}));\nexport const DeleteUserDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Are you sure?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","AddUserDialog","Component","constructor","props","validate","userCreated","users","some","name","state","inputs","login","alert","errors","length","password","errorsLabel","setInputValue","val","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","type","event","target","value","maxLength","types","map","EditUserDialog","isOpen","DeleteUserDialog"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,kBAA3C;AAEA,OAAO,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,QApBmB,GAoBR,MAAM;AACf,YAAMC,WAAW,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,KAAK,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAzD,CAApB;AACAC,MAAAA,KAAK,CAACP,WAAD,CAAL;AACA,aAAO;AAAE;AACPQ,QAAAA,MAAM,EAAE;AACNF,UAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBG,MAAzB,IAAmCT,WADpC;AAENU,UAAAA,QAAQ,EAAE,CAAC,KAAKN,KAAL,CAAWC,MAAX,CAAkBK,QAAlB,CAA2BD;AAFhC,SADH;AAKLE,QAAAA,WAAW,EAAE;AACXL,UAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwBG,MAAzB,GAAkC,aAAlC,GAAmDT,WAAW,GAAG,sBAAH,GAA4B,EADtF;AAEXU,UAAAA,QAAQ,EAAE,CAAC,KAAKN,KAAL,CAAWC,MAAX,CAAkBK,QAAlB,CAA2BD,MAA5B,GAAqC,gBAArC,GAAwD;AAFvD;AALR,OAAP;AAUD,KAjCkB;;AAAA,SAmCnBG,aAnCmB,GAmCH,CAACT,IAAD,EAAOU,GAAP,KAAe;AAC7B,YAAMT,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACC,MAAN,CAAaF,IAAb,IAAqBU,GAArB;AACA,WAAKC,QAAL,CAAcV,KAAd;AACD,KAvCkB;;AAAA,SAyCnBW,IAzCmB,GAyCZ,MAAM;AACX,YAAMX,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACY,WAAN,GAAoB,IAApB;AACA,WAAKF,QAAL,CAAcV,KAAd;AACD,KA7CkB;;AAAA,SA+CnBa,SA/CmB,GA+CP,CAACT,MAAD,EAASU,KAAT,KAAmB;AAC7B,YAAMd,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACI,MAAN,GAAeA,MAAf;AACAJ,MAAAA,KAAK,CAACO,WAAN,GAAoBO,KAApB;AACA,WAAKJ,QAAL,CAAcV,KAAd;AACD,KApDkB;;AAAA,SAsDnBe,MAtDmB,GAsDTC,MAAD,IAAY;AACnB,UAAGA,MAAM,KAAK,QAAd,EAAwB;AACtB,aAAKL,IAAL;AACA,aAAKjB,KAAL,CAAWuB,OAAX,CAAmBD,MAAnB;AACD,OAHD,MAGO;AACL,cAAMZ,MAAM,GAAG,KAAKT,QAAL,EAAf;AACA,cAAMuB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYhB,MAAM,CAACA,MAAnB,EAA2BN,IAA3B,CAAgCuB,GAAG,IAAIjB,MAAM,CAACA,MAAP,CAAciB,GAAd,CAAvC,CAAhB;;AAEA,YAAGH,OAAH,EAAY;AACV,eAAKL,SAAL,CAAeT,MAAM,CAACA,MAAtB,EAA8BA,MAAM,CAACG,WAArC;AACD,SAFD,MAEO;AACL,eAAKb,KAAL,CAAW4B,OAAX,CAAmB,KAAKtB,KAAL,CAAWC,MAA9B;AACA,eAAKU,IAAL;AACA,eAAKjB,KAAL,CAAWuB,OAAX,CAAmBD,MAAnB;AACD;AACF;AACF,KAtEkB;;AAAA,SAwEnBO,MAxEmB,GAwEV,MAAM;AACb,aAAO,CAAC,KAAKvB,KAAL,CAAWY,WAAZ,IACP,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAW8B,KAA9B;AAAqC,QAAA,MAAM,EAAE,IAA7C;AAAmD,QAAA,OAAO,EAAGC,IAAD,IAAU;AAAC,eAAKV,MAAL,CAAYU,IAAZ;AAAkB,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,SAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,QAAQ,MAFR;AAGA,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWI,MAAX,CAAkBF,KAHzB;AAIA,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWO,WAAX,CAAuBL,KAJnC;AAKA,QAAA,MAAM,EAAC,OALP;AAMA,QAAA,EAAE,EAAC,OANH;AAOA,QAAA,KAAK,EAAC,OAPN;AAQA,QAAA,IAAI,EAAC,MARL;AASA,QAAA,SAAS,MATT;AAUA,QAAA,QAAQ,EAAGwB,KAAD,IAAW;AAAC,cAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,IAA1B,EAAgC,KAAKpB,aAAL,CAAmB,OAAnB,EAA4BkB,KAAK,CAACC,MAAN,CAAaC,KAAzC;AAAgD,SAVtG;AAWA,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAgBE,oBAAC,SAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,QAAQ,MAFR;AAGA,QAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWI,MAAX,CAAkBE,QAHzB;AAIA,QAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,WAAX,CAAuBD,QAJnC;AAKA,QAAA,MAAM,EAAC,OALP;AAMA,QAAA,EAAE,EAAC,UANH;AAOA,QAAA,KAAK,EAAC,UAPN;AAQA,QAAA,IAAI,EAAC,UARL;AASA,QAAA,SAAS,MATT;AAUA,QAAA,QAAQ,EAAGoB,KAAD,IAAW;AAAC,cAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,IAA1B,EAAgC,KAAKpB,aAAL,CAAmB,UAAnB,EAA+BkB,KAAK,CAACC,MAAN,CAAaC,KAA5C;AAAmD,SAVzG;AAWA,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,EA8BE;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAGH,KAAD,IAAW;AACvC,cAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,MAA1B,EAAkC;AAChC,iBAAKpB,aAAL,CAAmB,MAAnB,EAA2B,IAA3B;AACD,WAFD,MAEO;AACL,iBAAKA,aAAL,CAAmB,MAAnB,EAA2BkB,KAAK,CAACC,MAAN,CAAaC,KAAxC;AACD;AAAC,SALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,EASG,KAAKlC,KAAL,CAAWoC,KAAX,CAAiBC,GAAjB,CAAqBN,IAAI,IAAI;AAAQ,QAAA,KAAK,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBA,IAAtB,CAA7B,CATH,CA9BF,CADA;AA4CA,KArHiB;;AAEjB,SAAKzB,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,EADD;AAENI,QAAAA,QAAQ,EAAE,EAFJ;AAGNmB,QAAAA,IAAI,EAAE;AAHA,OADG;AAMXrB,MAAAA,MAAM,EAAE;AACNF,QAAAA,KAAK,EAAE,KADD;AAENI,QAAAA,QAAQ,EAAE;AAFJ,OANG;AAUXC,MAAAA,WAAW,EAAE;AACXL,QAAAA,KAAK,EAAE,EADI;AAEXI,QAAAA,QAAQ,EAAE;AAFC,OAVF;AAcXM,MAAAA,WAAW,EAAE;AAdF,KAAb;AAgBD;;AAnBgD;AAyHnD,OAAO,MAAMoB,cAAc,GAAItC,KAAD,IAC1B,oBAAC,UAAD;AAAY,EAAA,MAAM,EAAEA,KAAK,CAACuC,MAA1B;AAAkC,EAAA,OAAO,EAAEvC,KAAK,CAACuB,OAAjD;AAA0D,EAAA,KAAK,EAAEvB,KAAK,CAAC8B,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AACM,EAAA,SAAS,MADf;AAEM,EAAA,QAAQ,MAFd;AAGM,EAAA,MAAM,EAAC,OAHb;AAIM,EAAA,EAAE,EAAC,OAJT;AAKM,EAAA,KAAK,EAAC,OALZ;AAMM,EAAA,IAAI,EAAC,MANX;AAOM,EAAA,SAAS,MAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAWI,oBAAC,SAAD;AACI,EAAA,SAAS,MADb;AAEI,EAAA,MAAM,EAAC,OAFX;AAGI,EAAA,EAAE,EAAC,UAHP;AAII,EAAA,KAAK,EAAC,UAJV;AAKI,EAAA,IAAI,EAAC,UALT;AAMI,EAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXJ,EAoBI,oBAAC,SAAD;AACI,EAAA,SAAS,MADb;AAEI,EAAA,MAAM,EAAC,OAFX;AAGI,EAAA,EAAE,EAAC,MAHP;AAII,EAAA,KAAK,EAAC,MAJV;AAKI,EAAA,IAAI,EAAC,UALT;AAMI,EAAA,SAAS,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApBJ,CADG;AA+BP,OAAO,MAAMU,gBAAgB,GAAG,CAAC;AAACD,EAAAA,MAAD;AAAST,EAAAA,KAAT;AAAgBP,EAAAA;AAAhB,CAAD,KAC5B,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEgB,MAAxB;AAAgC,EAAA,KAAK,EAAET,KAAvC;AAA8C,EAAA,QAAQ,EAAC,eAAvD;AAAuE,EAAA,OAAO,EAAE,CAAC,QAAD,EAAW,QAAX,CAAhF;AAAsG,EAAA,OAAO,EAAEP,OAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADG","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\n\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        login: '',\n        password: '',\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      errorsLabel: {\n        login: '',\n        password: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const userCreated = this.props.users.some(name => name === this.state.inputs.login)\n    alert(userCreated)\n    return { //true means error\n      errors: {\n        login: !this.state.inputs.login.length || userCreated,\n        password: !this.state.inputs.password.length\n      },\n      errorsLabel: {\n        login: !this.state.inputs.login.length ? 'Empty login' : (userCreated ? 'User already created' : ''),\n        password: !this.state.inputs.password.length ? 'Empty password' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.login}\n      helperText={this.state.errorsLabel.login}\n      margin=\"dense\"\n      id=\"login\"\n      label=\"Login\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('login', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.password}\n      helperText={this.state.errorsLabel.password}\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Password\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('password', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <select name=\"Type\" onChange={(event) => {\n        if(event.target.value === 'null') {\n          this.setInputValue('type', null)\n        } else {\n          this.setInputValue('type', event.target.value)\n        }}}\n      >\n\n        <option value=\"null\" selected>Empty</option>\n        {this.props.types.map(type => <option value={type}>{type}</option>)}\n\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport const EditUserDialog = (props) =>\n    <FormDialog isOpen={props.isOpen} onClose={props.onClose} title={props.title}>\n      <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"type\"\n            label=\"Type\"\n            type=\"password\"\n            fullWidth\n          />\n    </FormDialog>\n\nexport const DeleteUserDialog = ({isOpen, title, onClose}) =>\n    <QuestionDialog isOpen={isOpen} title={title} question=\"Are you sure?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}