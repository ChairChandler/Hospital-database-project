{"ast":null,"code":"const send = fetch;\nexport default class DbmsFetch {\n  constructor({\n    ip,\n    port\n  }, userInfo) {\n    this.fetch = (operation, name, data) => {\n      return send(`http://${this.ip}:${this.port}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          operation: operation,\n          data: {\n            login: this.userInfo.login,\n            password: this.userInfo.password,\n            'account-type': this.userInfo['account-type'],\n            [name]: data\n          }\n        })\n      }).then(res => res.json());\n    };\n\n    this.ip = ip;\n    this.port = port;\n    this.userInfo = userInfo;\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/DbmsFetch.js"],"names":["send","fetch","DbmsFetch","constructor","ip","port","userInfo","operation","name","data","method","headers","body","JSON","stringify","login","password","then","res","json"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,KAAb;AAEA,eAAe,MAAMC,SAAN,CAAgB;AAC3BC,EAAAA,WAAW,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAD,EAAaC,QAAb,EAAuB;AAAA,SAMlCL,KANkC,GAM1B,CAACM,SAAD,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;AAC/B,aACIT,IAAI,CAAE,UAAS,KAAKI,EAAG,IAAG,KAAKC,IAAK,EAAhC,EAAmC;AACnCK,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACT,0BAAgB,YADP;AAET,oBAAU;AAFD,SAF0B;AAMnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,UAAAA,SAAS,EAAEA,SADM;AAEjBE,UAAAA,IAAI,EAAE;AACFM,YAAAA,KAAK,EAAE,KAAKT,QAAL,CAAcS,KADnB;AAEFC,YAAAA,QAAQ,EAAE,KAAKV,QAAL,CAAcU,QAFtB;AAGF,4BAAgB,KAAKV,QAAL,CAAc,cAAd,CAHd;AAIF,aAACE,IAAD,GAAQC;AAJN;AAFW,SAAf;AAN6B,OAAnC,CAAJ,CAgBCQ,IAhBD,CAgBMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAhBb,CADJ;AAmBH,KA1BiC;;AAC9B,SAAKf,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AAL0B","sourcesContent":["const send = fetch\n\nexport default class DbmsFetch {\n    constructor({ip, port}, userInfo) {\n        this.ip = ip\n        this.port = port\n        this.userInfo = userInfo\n    }\n\n    fetch = (operation, name, data) => {\n        return (\n            send(`http://${this.ip}:${this.port}`, {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'text/plain',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify({\n                    operation: operation,\n                    data: {\n                        login: this.userInfo.login,\n                        password: this.userInfo.password,\n                        'account-type': this.userInfo['account-type'],\n                        [name]: data\n                    }\n                })\n            })\n            .then(res => res.json())\n        )\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}