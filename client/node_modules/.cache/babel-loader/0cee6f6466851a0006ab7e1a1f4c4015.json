{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.connection = {\n      ip: '127.0.0.1',\n      port: '1234'\n    };\n\n    this.render = () => {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(SignIn, {\n        connection: this.connection,\n        onLogged: this.setAccountType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/admin\",\n        getAccountTypeUser: this.accountType,\n        accountTypeComponent: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(AdminPanel, {\n        connection: this.connection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/director\",\n        getAccountTypeUser: this.accountType,\n        accountTypeComponent: \"director\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(DirectorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/reception\",\n        getAccountTypeUser: this.getAccountType,\n        accountTypeComponent: \"reception\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ReceptionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/doctor\",\n        getAccountTypeUser: this.getAccountType,\n        accountTypeComponent: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(DoctorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))), React.createElement(Redirect, {\n        exact: true,\n        from: \"/\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    };\n\n    this.props = props;\n    this.state = {\n      accountType: undefined\n    };\n    window.addEventListener('popstate', ev => {\n      this.setState(ev.state);\n    });\n  }\n\n  set accountType(type) {\n    this.setState({\n      accountType: type\n    });\n    window.history.pushState(this.state, 'App', '/login');\n  }\n\n  get accountType() {\n    return this.state.accountType;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","SignIn","AdminPanel","DirectorPanel","DoctorPanel","ReceptionPanel","PrivateRoute","App","Component","constructor","props","connection","ip","port","render","setAccountType","accountType","getAccountType","state","undefined","window","addEventListener","ev","setState","type","history","pushState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  \n  connection = {\n    ip: '127.0.0.1',\n    port:'1234'\n  }\n\n  constructor(props) {\n    super(props)\n    this.props = props\n    this.state = {accountType: undefined}\n\n    window.addEventListener('popstate', ev => {\n      this.setState(ev.state)\n    })\n  }\n\n  set accountType(type) {\n    this.setState({accountType: type})\n    window.history.pushState(this.state, 'App', '/login')\n  }\n\n  get accountType() {\n    return this.state.accountType\n  }\n\n  render = () => {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\">\n            <SignIn connection={this.connection} onLogged={this.setAccountType}/>\n          </Route>\n\n          <PrivateRoute exact path=\"/account/admin\" getAccountTypeUser={this.accountType} accountTypeComponent=\"admin\">\n            <AdminPanel connection={this.connection}/>\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/account/director\" getAccountTypeUser={this.accountType} accountTypeComponent=\"director\">\n            <DirectorPanel/>\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/account/reception\" getAccountTypeUser={this.getAccountType} accountTypeComponent=\"reception\">\n            <ReceptionPanel/>\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/account/doctor\" getAccountTypeUser={this.getAccountType} accountTypeComponent=\"doctor\">\n            <DoctorPanel/>\n          </PrivateRoute>\n        </Switch>\n\n        <Redirect exact from=\"/\" to=\"/login\"/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}