{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/AdminPanel.js\";\nimport React from 'react';\nimport SQLTable from '../Shared/SQLTable';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button, TextField } from '@material-ui/core';\n\nconst AddUserDialog = props => React.createElement(Dialog, {\n  open: props.isOpen,\n  onClose: props.onClose,\n  \"aria-labelledby\": \"form-dialog-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(DialogTitle, {\n  id: \"form-dialog-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Add user\"), React.createElement(DialogContent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"password\",\n  label: \"Password\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})), React.createElement(DialogActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: props.onClose,\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Cancel\"), React.createElement(Button, {\n  onClick: props.onClose,\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Done\")));\n\nconst EditUserDialog = props => React.createElement(Dialog, {\n  open: props.isOpen,\n  onClose: props.onClose,\n  \"aria-labelledby\": \"form-dialog-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(DialogTitle, {\n  id: \"form-dialog-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"Add user\"), React.createElement(DialogContent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"password\",\n  label: \"Password\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"type\",\n  label: \"Type\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n})), React.createElement(DialogActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: props.onClose,\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, \"Cancel\"), React.createElement(Button, {\n  onClick: props.onClose,\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, \"Done\")));\n\nconst DeleteUserDialog = props => React.createElement(Dialog, {\n  open: props.isOpen,\n  onClose: props.onClose,\n  \"aria-labelledby\": \"form-dialog-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(DialogTitle, {\n  id: \"form-dialog-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, \"Add user\"), React.createElement(DialogContent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n})), React.createElement(DialogActions, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: props.onClose,\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"Cancel\"), React.createElement(Button, {\n  onClick: props.onClose,\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, \"Done\")));\n\nexport default class AdminPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsers = () => {\n      fetch(`http://${this.props.connection.ip}:${this.props.connection.port}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          operation: 'show users',\n          data: this.props.user\n        })\n      }).then(res => res.json()).then(json => {\n        this.headers = json.headers;\n        this.rows = json.rows;\n        this.forceUpdate();\n      }).catch(error => {\n        alert(error);\n      });\n    };\n\n    this.openDialog = id => {\n      this.dialogs[id].open = true;\n      this.forceUpdate();\n    };\n\n    this.closeDialog = id => {\n      this.dialogs[id].open = false;\n      this.forceUpdate();\n    };\n\n    this.onRowClick = row => {\n      let indx = this.clickedRows.findIndex(val => val === row);\n      alert(indx);\n\n      if (indx < 0) {\n        alert('Add');\n        this.clickedRows.push(row);\n      } else {\n        alert('Remove');\n        this.clickedRows.splice(indx, 1);\n      }\n    };\n\n    this.render = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, this.headers && this.rows && React.createElement(SQLTable, {\n        headers: this.headers,\n        rows: this.rows,\n        title: \"Users\",\n        onRowClick: this.onRowClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: this.openDialog.bind(this, 'addUser'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(AddOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.openDialog.bind(this, 'editUser'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(EditOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: this.openDialog.bind(this, 'deleteUser'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(RemoveCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(AddUserDialog, {\n        isOpen: this.dialogs.addUser.open,\n        onClose: this.closeDialog.bind(this, 'addUser'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(EditUserDialog, {\n        isOpen: this.dialogs.editUser.open,\n        onClose: this.closeDialog.bind(this, 'editUser'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(DeleteUserDialog, {\n        isOpen: this.dialogs.deleteUser.open,\n        onClose: this.closeDialog.bind(this, 'deleteUser'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }));\n    };\n\n    this.getUsers();\n    this.clickedRows = [];\n    this.dialogs = {\n      'addUser': {\n        open: false\n      },\n      'editUser': {\n        open: false\n      },\n      'deleteUser': {\n        open: false\n      }\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/AdminPanel.js"],"names":["React","SQLTable","IconButton","AddOutlinedIcon","EditOutlinedIcon","RemoveCircleOutlineOutlinedIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","AddUserDialog","props","isOpen","onClose","EditUserDialog","DeleteUserDialog","AdminPanel","Component","constructor","getUsers","fetch","connection","ip","port","method","headers","body","JSON","stringify","operation","data","user","then","res","json","rows","forceUpdate","catch","error","alert","openDialog","id","dialogs","open","closeDialog","onRowClick","row","indx","clickedRows","findIndex","val","push","splice","render","bind","addUser","editUser","deleteUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SQLTable from '../Shared/SQLTable';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Button, TextField } from '@material-ui/core';\n\nconst AddUserDialog = (props) =>\n    <Dialog open={props.isOpen} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add user</DialogTitle>\n        \n        <DialogContent>\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={props.onClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n    </Dialog>\n\nconst EditUserDialog = (props) =>\n    <Dialog open={props.isOpen} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add user</DialogTitle>\n        \n        <DialogContent>\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"type\"\n            label=\"Type\"\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={props.onClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n    </Dialog>\n\nconst DeleteUserDialog = (props) =>\n    <Dialog open={props.isOpen} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add user</DialogTitle>\n        \n        <DialogContent>\n          <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={props.onClose} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n    </Dialog>\n\nexport default class AdminPanel extends React.Component {\n    constructor(props) {\n        super(props)\n        this.getUsers()\n        this.clickedRows = []\n        this.dialogs = {\n            'addUser': {\n                open: false\n            },\n            'editUser': {\n                open: false\n            },\n            'deleteUser': {\n                open: false\n            }\n        }\n    }\n    \n    getUsers = () => {\n        fetch(`http://${this.props.connection.ip}:${this.props.connection.port}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'text/plain',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            operation: 'show users',\n            data: this.props.user\n          })\n        })\n        .then(res => res.json())\n        .then(json => {\n            this.headers = json.headers\n            this.rows = json.rows\n            this.forceUpdate()\n        })\n        .catch(error => {\n            alert(error)\n        })\n    }\n\n    openDialog = (id) => {\n        this.dialogs[id].open = true\n        this.forceUpdate()\n    }\n\n    closeDialog = (id) => {\n        this.dialogs[id].open = false\n        this.forceUpdate()\n    }\n\n    onRowClick = (row) => {\n        let indx = this.clickedRows.findIndex((val) => val === row)\n        alert(indx)\n        if(indx < 0) {\n            alert('Add')\n            this.clickedRows.push(row)\n        } else {\n            alert('Remove')\n            this.clickedRows.splice(indx, 1)\n        }\n    }\n\n    render = () => {\n        return(\n            <div>\n                {this.headers && this.rows && (\n                    <SQLTable headers={this.headers} rows={this.rows} title=\"Users\" onRowClick={this.onRowClick}>\n                        <IconButton onClick={this.openDialog.bind(this, 'addUser')}>\n                            <AddOutlinedIcon/>\n                        </IconButton>\n\n                        <IconButton onClick={this.openDialog.bind(this, 'editUser')}>\n                            <EditOutlinedIcon/>\n                        </IconButton>\n                        \n                        <IconButton onClick={this.openDialog.bind(this, 'deleteUser')}>\n                            <RemoveCircleOutlineOutlinedIcon/>\n                        </IconButton>\n                    </SQLTable>\n                )}\n\n                <AddUserDialog isOpen={this.dialogs.addUser.open} onClose={this.closeDialog.bind(this, 'addUser')}/>\n                <EditUserDialog isOpen={this.dialogs.editUser.open} onClose={this.closeDialog.bind(this, 'editUser')}/>\n                <DeleteUserDialog isOpen={this.dialogs.deleteUser.open} onClose={this.closeDialog.bind(this, 'deleteUser')}/>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}