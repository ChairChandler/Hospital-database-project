{"ast":null,"code":"import _slicedToArray from \"/home/chairchandler/Desktop/Bazy Danych/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/SignIn/SignIn.js\";\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Redirect } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  let _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  let _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accountType = _useState4[0],\n      setAccountType = _useState4[1];\n\n  function login() {\n    const user = {\n      login: document.getElementById('login').value,\n      password: document.getElementById('password').value\n    };\n    fetch(`http://${props.connection.ip}:${props.connection.port}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        operation: 'login',\n        data: user\n      })\n    }).then(res => res.json()).then(json => {\n      if (!json.error) {\n        user['account-type'] = json['account-type'];\n        props.onLogged(user);\n        setAccountType(json['account-type']);\n      } else {\n        setError(json.error);\n      }\n    }).catch(error => {\n      setError('Blad podczas polaczenia z serwerem');\n    });\n  }\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Szpitalny System Identyfikacyjny\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"login\",\n    label: \"Login\",\n    name: \"login\",\n    autoComplete: \"login\",\n    autoFocus: true,\n    error: error === '' ? false : true,\n    helperText: error === '' ? '' : error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Haslo\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    error: error === '' ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"button\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: () => login(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Zaloguj\"))), accountType && React.createElement(Redirect, {\n    to: `/konto/${accountType}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/SignIn/SignIn.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","makeStyles","Container","Redirect","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","props","classes","error","setError","accountType","setAccountType","login","user","document","getElementById","value","password","fetch","connection","ip","port","method","headers","body","JSON","stringify","operation","data","then","res","json","onLogged","catch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAD8B;AAOrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAP6B;AAWrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAX+B;AAerCY,EAAAA,MAAM,EAAE;AACNP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAf6B,CAAL,CAAN,CAA5B;AAoBA,eAAe,SAASa,MAAT,CAAgBC,KAAhB,EAAuB;AACpC,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;;AADoC,kBAEZV,QAAQ,CAAC,EAAD,CAFI;AAAA;AAAA,MAE/B8B,KAF+B;AAAA,MAExBC,QAFwB;;AAAA,mBAGA/B,QAAQ,EAHR;AAAA;AAAA,MAG/BgC,WAH+B;AAAA,MAGlBC,cAHkB;;AAKpC,WAASC,KAAT,GAAiB;AACf,UAAMC,IAAI,GAAG;AACXD,MAAAA,KAAK,EAAEE,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAD7B;AAEXC,MAAAA,QAAQ,EAAEH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC;AAFnC,KAAb;AAKAE,IAAAA,KAAK,CAAE,UAASZ,KAAK,CAACa,UAAN,CAAiBC,EAAG,IAAGd,KAAK,CAACa,UAAN,CAAiBE,IAAK,EAAxD,EAA2D;AAC9DC,MAAAA,MAAM,EAAE,MADsD;AAE9DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,YADT;AAEP,kBAAU;AAFH,OAFqD;AAM9DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,SAAS,EAAE,OADQ;AAEnBC,QAAAA,IAAI,EAAEf;AAFa,OAAf;AANwD,KAA3D,CAAL,CAWCgB,IAXD,CAWMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXb,EAYCF,IAZD,CAYME,IAAI,IAAI;AACZ,UAAG,CAACA,IAAI,CAACvB,KAAT,EAAgB;AACdK,QAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuBkB,IAAI,CAAC,cAAD,CAA3B;AACAzB,QAAAA,KAAK,CAAC0B,QAAN,CAAenB,IAAf;AACAF,QAAAA,cAAc,CAACoB,IAAI,CAAC,cAAD,CAAL,CAAd;AACD,OAJD,MAIO;AACLtB,QAAAA,QAAQ,CAACsB,IAAI,CAACvB,KAAN,CAAR;AACD;AACF,KApBD,EAqBCyB,KArBD,CAqBOzB,KAAK,IAAI;AACdC,MAAAA,QAAQ,CAAC,oCAAD,CAAR;AACD,KAvBD;AAwBD;;AAED,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACjB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEiB,OAAO,CAACX,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,EAOE;AAAM,IAAA,SAAS,EAAEW,OAAO,CAACL,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,EAAE,EAAC,OALL;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,YAAY,EAAC,OARf;AASE,IAAA,SAAS,MATX;AAUE,IAAA,KAAK,EAAEM,KAAK,KAAK,EAAV,GAAe,KAAf,GAAuB,IAVhC;AAWE,IAAA,UAAU,EAAEA,KAAK,KAAK,EAAV,GAAe,EAAf,GAAoBA,KAXlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAgBE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,IAAI,EAAC,UAPP;AAQE,IAAA,EAAE,EAAC,UARL;AASE,IAAA,YAAY,EAAC,kBATf;AAUE,IAAA,KAAK,EAAEA,KAAK,KAAK,EAAV,GAAe,KAAf,GAAuB,IAVhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EA6BE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAED,OAAO,CAACH,MALrB;AAME,IAAA,OAAO,EAAE,MAAMQ,KAAK,EANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7BF,CAPF,CAFF,EAmDGF,WAAW,IAAK,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,UAASA,WAAY,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnDnB,CADF;AAuDD","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  let [error, setError] = useState('')\n  let [accountType, setAccountType] = useState()\n\n  function login() {\n    const user = { \n      login: document.getElementById('login').value,\n      password: document.getElementById('password').value\n    }\n    \n    fetch(`http://${props.connection.ip}:${props.connection.port}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'text/plain',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        operation: 'login',\n        data: user\n      })\n    })\n    .then(res => res.json())\n    .then(json => {\n      if(!json.error) {\n        user['account-type'] = json['account-type']\n        props.onLogged(user)\n        setAccountType(json['account-type'])\n      } else {\n        setError(json.error)\n      }\n    })\n    .catch(error => {\n      setError('Blad podczas polaczenia z serwerem')\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Szpitalny System Identyfikacyjny\n        </Typography>\n        <form className={classes.form} noValidate>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"login\"\n            label=\"Login\"\n            name=\"login\"\n            autoComplete=\"login\"\n            autoFocus\n            error={error === '' ? false : true}\n            helperText={error === '' ? '' : error}\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Haslo\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            error={error === '' ? false : true}\n          />\n\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={() => login()}\n          >\n            Zaloguj\n          </Button>\n        </form>\n      </div>\n\n      {accountType && (<Redirect to={`/konto/${accountType}`}/>)}\n    </Container>\n  )\n}"]},"metadata":{},"sourceType":"module"}