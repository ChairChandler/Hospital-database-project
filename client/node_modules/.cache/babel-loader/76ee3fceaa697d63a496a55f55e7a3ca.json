{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.connection = {\n      ip: '127.0.0.1',\n      port: '1234'\n    };\n\n    this.setAccountType = type => {\n      this.setState({\n        accountType: type\n      });\n    };\n\n    this.getAccountType = () => {\n      return this.state.accountType;\n    };\n\n    this.render = () => {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(SignIn, {\n        connection: this.connection,\n        onLogged: this.setAccountType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/admin\",\n        getAccountTypeUser: this.getAccountType,\n        accountTypeComponent: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(AdminPanel, {\n        connection: this.connection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/director\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(DirectorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/reception\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ReceptionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/account/doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(DoctorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }))), React.createElement(Redirect, {\n        exact: true,\n        from: \"/\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    };\n\n    this.props = props;\n\n    let _type;\n\n    if (typeof window.components.App !== 'undefined' && window.components.App.accountType) {\n      _type = window.components.App.accountType;\n    }\n\n    this.state = {\n      accountType: _type\n    };\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","SignIn","AdminPanel","DirectorPanel","DoctorPanel","ReceptionPanel","PrivateRoute","App","Component","constructor","props","connection","ip","port","setAccountType","type","setState","accountType","getAccountType","state","render","window","components"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  \n  connection = {\n    ip: '127.0.0.1',\n    port:'1234'\n  }\n\n  constructor(props) {\n    super(props)\n    this.props = props\n\n    let type\n    if(typeof window.components.App !== 'undefined' && window.components.App.accountType) {\n      type = window.components.App.accountType\n    }\n    this.state = {accountType: type}\n  }\n\n  setAccountType = (type) => {\n    this.setState({accountType: type})\n  }\n\n  getAccountType = () => {\n    return this.state.accountType\n  }\n\n  render = () => {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\">\n            <SignIn connection={this.connection} onLogged={this.setAccountType}></SignIn>\n          </Route>\n\n          <PrivateRoute exact path=\"/account/admin\" getAccountTypeUser={this.getAccountType} accountTypeComponent=\"admin\">\n            <AdminPanel connection={this.connection}></AdminPanel>\n          </PrivateRoute>\n\n          <Route exact path=\"/account/director\">\n            <DirectorPanel></DirectorPanel>\n          </Route>\n\n          <Route exact path=\"/account/reception\">\n            <ReceptionPanel></ReceptionPanel>\n          </Route>\n\n          <Route exact path=\"/account/doctor\">\n            <DoctorPanel></DoctorPanel>\n          </Route>\n        </Switch>\n\n        <Redirect exact from=\"/\" to=\"/login\"/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}