{"ast":null,"code":"const send = fetch;\nexport default class DbmsFetch {\n  constructor({\n    ip,\n    port\n  }, userInfo) {\n    this.createPayload = (operation, name, data) => {\n      let payload = {\n        operation: operation,\n        data: {\n          login: this.userInfo.login,\n          password: this.userInfo.password,\n          'account-type': this.userInfo['account-type']\n        }\n      };\n\n      if (name !== undefined) {\n        payload.data[name] = data;\n        alert(JSON.stringify(data));\n        alert(JSON.stringify(payload.data));\n      }\n\n      alert(JSON.stringify(payload));\n      return payload;\n    };\n\n    this.fetch = (operation, name, data) => {\n      return send(`http://${this.ip}:${this.port}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'text/plain',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(this.createPayload(operation, name, data))\n      }).then(res => res.json());\n    };\n\n    this.ip = ip;\n    this.port = port;\n    this.userInfo = userInfo;\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/DbmsFetch.js"],"names":["send","fetch","DbmsFetch","constructor","ip","port","userInfo","createPayload","operation","name","data","payload","login","password","undefined","alert","JSON","stringify","method","headers","body","then","res","json"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,KAAb;AAEA,eAAe,MAAMC,SAAN,CAAgB;AAC3BC,EAAAA,WAAW,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA;AAAL,GAAD,EAAaC,QAAb,EAAuB;AAAA,SAMlCC,aANkC,GAMlB,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;AACvC,UAAIC,OAAO,GAAG;AACVH,QAAAA,SAAS,EAAEA,SADD;AAEVE,QAAAA,IAAI,EAAE;AACFE,UAAAA,KAAK,EAAE,KAAKN,QAAL,CAAcM,KADnB;AAEFC,UAAAA,QAAQ,EAAE,KAAKP,QAAL,CAAcO,QAFtB;AAGF,0BAAgB,KAAKP,QAAL,CAAc,cAAd;AAHd;AAFI,OAAd;;AASA,UAAGG,IAAI,KAAKK,SAAZ,EAAuB;AACnBH,QAAAA,OAAO,CAACD,IAAR,CAAaD,IAAb,IAAqBC,IAArB;AACAK,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAD,CAAL;AACAK,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,OAAO,CAACD,IAAvB,CAAD,CAAL;AACH;;AAEDK,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,OAAf,CAAD,CAAL;AACA,aAAOA,OAAP;AACH,KAxBiC;;AAAA,SA0BlCV,KA1BkC,GA0B1B,CAACO,SAAD,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;AAC/B,aACIV,IAAI,CAAE,UAAS,KAAKI,EAAG,IAAG,KAAKC,IAAK,EAAhC,EAAmC;AACnCa,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,OAAO,EAAE;AACT,0BAAgB,YADP;AAET,oBAAU;AAFD,SAF0B;AAMnCC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAe,KAAKV,aAAL,CAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,IAApC,CAAf;AAN6B,OAAnC,CAAJ,CAQCW,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,CADJ;AAWH,KAtCiC;;AAC9B,SAAKnB,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AAL0B","sourcesContent":["const send = fetch\n\nexport default class DbmsFetch {\n    constructor({ip, port}, userInfo) {\n        this.ip = ip\n        this.port = port\n        this.userInfo = userInfo\n    }\n\n    createPayload = (operation, name, data) => {\n        let payload = {\n            operation: operation,\n            data: {\n                login: this.userInfo.login,\n                password: this.userInfo.password,\n                'account-type': this.userInfo['account-type']\n            }\n        }\n\n        if(name !== undefined) {\n            payload.data[name] = data\n            alert(JSON.stringify(data))\n            alert(JSON.stringify(payload.data))\n        }\n\n        alert(JSON.stringify(payload))\n        return payload\n    }\n\n    fetch = (operation, name, data) => {\n        return (\n            send(`http://${this.ip}:${this.port}`, {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'text/plain',\n                'Accept': 'application/json'\n                },\n                body: JSON.stringify(this.createPayload(operation, name, data))\n            })\n            .then(res => res.json())\n        )\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}