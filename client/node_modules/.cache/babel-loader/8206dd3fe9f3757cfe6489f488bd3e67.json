{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar differenceInMinutes_1 = __importDefault(require(\"date-fns/differenceInMinutes\"));\n\nvar parseISO_1 = __importDefault(require(\"date-fns/parseISO\"));\n\nvar react_form_validator_core_1 = require(\"react-form-validator-core\");\n\nexports.ValidatorForm = react_form_validator_core_1.ValidatorForm;\nvar lettersRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])');\nvar numberRegex = new RegExp('^(?=.*[0-9])');\nvar nonAlphanumericRegex = new RegExp('^(?=.*[^da-zA-Z0-9])');\nvar imageRegex = new RegExp('.(jpe?g|png)');\nvar passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!_%*.?&])([A-Za-z\\d$@$!%*?&]|[^ ]){8,}$/;\n\nfunction isNotAllBlanks(value, minlength) {\n  return value.replace(/\\s/g, '').length >= minlength;\n}\n\nexports.isNotAllBlanks = isNotAllBlanks;\n\nfunction maxNaturalNumber(value, maxInt) {\n  var valueReal = +Number(value);\n  var maxInteger = +Number(maxInt);\n  return valueReal >= 0 && valueReal <= maxInteger;\n}\n\nexports.maxNaturalNumber = maxNaturalNumber;\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isNotAllBlanks', isNotAllBlanks);\nreact_form_validator_core_1.ValidatorForm.addValidationRule('maxNaturalNumber', maxNaturalNumber);\n\nfunction validateEndDate(endValue, startValue) {\n  var startDate = parseISO_1.default(startValue);\n  var endDate = parseISO_1.default(endValue);\n  return differenceInMinutes_1.default(endDate, startDate) > 0;\n}\n\nexports.validateEndDate = validateEndDate;\nreact_form_validator_core_1.ValidatorForm.addValidationRule('validateEndDate', validateEndDate);\n\nfunction startDateGreaterThanEndDate(startValue, endValue) {\n  return endValue !== null ? validateEndDate(endValue, startValue) : true;\n}\n\nexports.startDateGreaterThanEndDate = startDateGreaterThanEndDate;\nreact_form_validator_core_1.ValidatorForm.addValidationRule('startDateGreaterThanEndDate', startDateGreaterThanEndDate);\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isImage', function (value, extensionFile) {\n  return imageRegex.test(extensionFile.toLowerCase());\n});\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneLowerAndUpperCase', function (value) {\n  return lettersRegex.test(value);\n});\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneNumber', function (value) {\n  return numberRegex.test(value);\n});\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneSpecialCharacter', function (value) {\n  return nonAlphanumericRegex.test(value);\n});\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isPasswordMatch', function (value, comparedValue) {\n  return value === comparedValue;\n});\nreact_form_validator_core_1.ValidatorForm.addValidationRule('password', function (value) {\n  return !!value.match(passwordRegex);\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/node_modules/uno-react/lib/functions/validations.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","differenceInMinutes_1","require","parseISO_1","react_form_validator_core_1","ValidatorForm","lettersRegex","RegExp","numberRegex","nonAlphanumericRegex","imageRegex","passwordRegex","isNotAllBlanks","minlength","replace","length","maxNaturalNumber","maxInt","valueReal","Number","maxInteger","addValidationRule","validateEndDate","endValue","startValue","startDate","default","endDate","startDateGreaterThanEndDate","extensionFile","test","toLowerCase","comparedValue","match"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,qBAAqB,GAAGP,eAAe,CAACQ,OAAO,CAAC,8BAAD,CAAR,CAA3C;;AACA,IAAIC,UAAU,GAAGT,eAAe,CAACQ,OAAO,CAAC,mBAAD,CAAR,CAAhC;;AACA,IAAIE,2BAA2B,GAAGF,OAAO,CAAC,2BAAD,CAAzC;;AACAH,OAAO,CAACM,aAAR,GAAwBD,2BAA2B,CAACC,aAApD;AACA,IAAIC,YAAY,GAAG,IAAIC,MAAJ,CAAW,yBAAX,CAAnB;AACA,IAAIC,WAAW,GAAG,IAAID,MAAJ,CAAW,cAAX,CAAlB;AACA,IAAIE,oBAAoB,GAAG,IAAIF,MAAJ,CAAW,sBAAX,CAA3B;AACA,IAAIG,UAAU,GAAG,IAAIH,MAAJ,CAAW,cAAX,CAAjB;AACA,IAAII,aAAa,GAAG,iFAApB;;AACA,SAASC,cAAT,CAAwBZ,KAAxB,EAA+Ba,SAA/B,EAA0C;AACtC,SAAOb,KAAK,CAACc,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyBC,MAAzB,IAAmCF,SAA1C;AACH;;AACDd,OAAO,CAACa,cAAR,GAAyBA,cAAzB;;AACA,SAASI,gBAAT,CAA0BhB,KAA1B,EAAiCiB,MAAjC,EAAyC;AACrC,MAAIC,SAAS,GAAG,CAACC,MAAM,CAACnB,KAAD,CAAvB;AACA,MAAIoB,UAAU,GAAG,CAACD,MAAM,CAACF,MAAD,CAAxB;AACA,SAAOC,SAAS,IAAI,CAAb,IAAkBA,SAAS,IAAIE,UAAtC;AACH;;AACDrB,OAAO,CAACiB,gBAAR,GAA2BA,gBAA3B;AACAZ,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,gBAA5D,EAA8ET,cAA9E;AACAR,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,kBAA5D,EAAgFL,gBAAhF;;AACA,SAASM,eAAT,CAAyBC,QAAzB,EAAmCC,UAAnC,EAA+C;AAC3C,MAAIC,SAAS,GAAGtB,UAAU,CAACuB,OAAX,CAAmBF,UAAnB,CAAhB;AACA,MAAIG,OAAO,GAAGxB,UAAU,CAACuB,OAAX,CAAmBH,QAAnB,CAAd;AACA,SAAOtB,qBAAqB,CAACyB,OAAtB,CAA8BC,OAA9B,EAAuCF,SAAvC,IAAoD,CAA3D;AACH;;AACD1B,OAAO,CAACuB,eAAR,GAA0BA,eAA1B;AACAlB,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,iBAA5D,EAA+EC,eAA/E;;AACA,SAASM,2BAAT,CAAqCJ,UAArC,EAAiDD,QAAjD,EAA2D;AACvD,SAAOA,QAAQ,KAAK,IAAb,GAAoBD,eAAe,CAACC,QAAD,EAAWC,UAAX,CAAnC,GAA4D,IAAnE;AACH;;AACDzB,OAAO,CAAC6B,2BAAR,GAAsCA,2BAAtC;AACAxB,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,6BAA5D,EAA2FO,2BAA3F;AACAxB,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,SAA5D,EAAuE,UAAUrB,KAAV,EAAiB6B,aAAjB,EAAgC;AACnG,SAAOnB,UAAU,CAACoB,IAAX,CAAgBD,aAAa,CAACE,WAAd,EAAhB,CAAP;AACH,CAFD;AAGA3B,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,6BAA5D,EAA2F,UAAUrB,KAAV,EAAiB;AAAE,SAAOM,YAAY,CAACwB,IAAb,CAAkB9B,KAAlB,CAAP;AAAkC,CAAhJ;AACAI,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,kBAA5D,EAAgF,UAAUrB,KAAV,EAAiB;AAAE,SAAOQ,WAAW,CAACsB,IAAZ,CAAiB9B,KAAjB,CAAP;AAAiC,CAApI;AACAI,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,4BAA5D,EAA0F,UAAUrB,KAAV,EAAiB;AAAE,SAAOS,oBAAoB,CAACqB,IAArB,CAA0B9B,KAA1B,CAAP;AAA0C,CAAvJ;AACAI,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,iBAA5D,EAA+E,UAAUrB,KAAV,EAAiBgC,aAAjB,EAAgC;AAAE,SAAOhC,KAAK,KAAKgC,aAAjB;AAAiC,CAAlJ;AACA5B,2BAA2B,CAACC,aAA5B,CAA0CgB,iBAA1C,CAA4D,UAA5D,EAAwE,UAAUrB,KAAV,EAAiB;AAAE,SAAO,CAAC,CAACA,KAAK,CAACiC,KAAN,CAAYtB,aAAZ,CAAT;AAAsC,CAAjI","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar differenceInMinutes_1 = __importDefault(require(\"date-fns/differenceInMinutes\"));\nvar parseISO_1 = __importDefault(require(\"date-fns/parseISO\"));\nvar react_form_validator_core_1 = require(\"react-form-validator-core\");\nexports.ValidatorForm = react_form_validator_core_1.ValidatorForm;\nvar lettersRegex = new RegExp('^(?=.*[a-z])(?=.*[A-Z])');\nvar numberRegex = new RegExp('^(?=.*[0-9])');\nvar nonAlphanumericRegex = new RegExp('^(?=.*[^da-zA-Z0-9])');\nvar imageRegex = new RegExp('.(jpe?g|png)');\nvar passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!_%*.?&])([A-Za-z\\d$@$!%*?&]|[^ ]){8,}$/;\nfunction isNotAllBlanks(value, minlength) {\n    return value.replace(/\\s/g, '').length >= minlength;\n}\nexports.isNotAllBlanks = isNotAllBlanks;\nfunction maxNaturalNumber(value, maxInt) {\n    var valueReal = +Number(value);\n    var maxInteger = +Number(maxInt);\n    return valueReal >= 0 && valueReal <= maxInteger;\n}\nexports.maxNaturalNumber = maxNaturalNumber;\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isNotAllBlanks', isNotAllBlanks);\nreact_form_validator_core_1.ValidatorForm.addValidationRule('maxNaturalNumber', maxNaturalNumber);\nfunction validateEndDate(endValue, startValue) {\n    var startDate = parseISO_1.default(startValue);\n    var endDate = parseISO_1.default(endValue);\n    return differenceInMinutes_1.default(endDate, startDate) > 0;\n}\nexports.validateEndDate = validateEndDate;\nreact_form_validator_core_1.ValidatorForm.addValidationRule('validateEndDate', validateEndDate);\nfunction startDateGreaterThanEndDate(startValue, endValue) {\n    return endValue !== null ? validateEndDate(endValue, startValue) : true;\n}\nexports.startDateGreaterThanEndDate = startDateGreaterThanEndDate;\nreact_form_validator_core_1.ValidatorForm.addValidationRule('startDateGreaterThanEndDate', startDateGreaterThanEndDate);\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isImage', function (value, extensionFile) {\n    return imageRegex.test(extensionFile.toLowerCase());\n});\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneLowerAndUpperCase', function (value) { return lettersRegex.test(value); });\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneNumber', function (value) { return numberRegex.test(value); });\nreact_form_validator_core_1.ValidatorForm.addValidationRule('atLeastOneSpecialCharacter', function (value) { return nonAlphanumericRegex.test(value); });\nreact_form_validator_core_1.ValidatorForm.addValidationRule('isPasswordMatch', function (value, comparedValue) { return value === comparedValue; });\nreact_form_validator_core_1.ValidatorForm.addValidationRule('password', function (value) { return !!value.match(passwordRegex); });\n"]},"metadata":{},"sourceType":"script"}