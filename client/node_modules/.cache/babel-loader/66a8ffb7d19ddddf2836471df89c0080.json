{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.connection = {\n      ip: '127.0.0.1',\n      port: '1234'\n    };\n\n    this.render = () => {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(SignIn, {\n        connection: this.connection,\n        onLogged: usr => {\n          this.user = usr;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/admin\",\n        accountTypeUser: this.accountType,\n        accountTypeComponent: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(AdminPanel, {\n        connection: this.connection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/director\",\n        accountTypeUser: this.accountType,\n        accountTypeComponent: \"director\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(DirectorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/reception\",\n        accountTypeUser: this.accountType,\n        accountTypeComponent: \"reception\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ReceptionPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/account/doctor\",\n        accountTypeUser: this.accountType,\n        accountTypeComponent: \"doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(DoctorPanel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(Redirect, {\n        exact: true,\n        from: \"/\",\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    };\n\n    this.props = props;\n    this.state = {\n      user: {}\n    };\n    window.addEventListener('popstate', ev => {\n      this.setState(ev.state);\n    });\n  }\n\n  set user(user) {\n    this.setState(state => {\n      state.user = user;\n    });\n    window.history.pushState(this.state, 'App', '/login');\n  }\n\n  get accountType() {\n    return this.state.user['account-type'];\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/App/App.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","SignIn","AdminPanel","DirectorPanel","DoctorPanel","ReceptionPanel","PrivateRoute","App","Component","constructor","props","connection","ip","port","render","usr","user","accountType","state","window","addEventListener","ev","setState","history","pushState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SignIn from '../SignIn/SignIn';\nimport AdminPanel from '../AdminPanel/AdminPanel';\nimport DirectorPanel from '../DirectorPanel/DirectorPanel';\nimport DoctorPanel from '../DoctorPanel/DoctorPanel';\nimport ReceptionPanel from '../ReceptionPanel/ReceptionPanel';\nimport PrivateRoute from '../Shared/PrivateRoute';\n\nclass App extends React.Component {\n  \n  connection = {\n    ip: '127.0.0.1',\n    port:'1234'\n  }\n\n  constructor(props) {\n    super(props)\n    this.props = props\n    this.state = {\n      user: {}\n    }\n\n    window.addEventListener('popstate', ev => {\n      this.setState(ev.state)\n    })\n  }\n\n  set user(user) {\n    this.setState(state => {\n      state.user = user\n    })\n    window.history.pushState(this.state, 'App', '/login')\n  }\n\n  get accountType() {\n    return this.state.user['account-type']\n  }\n\n  render = () => {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\">\n            <SignIn connection={this.connection} onLogged={(usr) => {this.user = usr}}/>\n          </Route>\n\n          <PrivateRoute exact path=\"/account/admin\" accountTypeUser={this.accountType} accountTypeComponent=\"admin\">\n            <AdminPanel connection={this.connection}/>\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/account/director\" accountTypeUser={this.accountType} accountTypeComponent=\"director\">\n            <DirectorPanel/>\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/account/reception\" accountTypeUser={this.accountType} accountTypeComponent=\"reception\">\n            <ReceptionPanel/>\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/account/doctor\" accountTypeUser={this.accountType} accountTypeComponent=\"doctor\">\n            <DoctorPanel/>\n          </PrivateRoute>\n        </Switch>\n\n        <Redirect exact from=\"/\" to=\"/login\"/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}