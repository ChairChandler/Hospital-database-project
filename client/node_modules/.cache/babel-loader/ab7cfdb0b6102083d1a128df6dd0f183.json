{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction debounce(func, waitMilliseconds) {\n  if (waitMilliseconds === void 0) {\n    waitMilliseconds = 500;\n  }\n\n  var timeoutId; // tslint:disable-next-line: only-arrow-functions\n\n  return function (t) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var context = t;\n\n    var doLater = function () {\n      timeoutId = undefined;\n      func.apply(context, args);\n    };\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(doLater, waitMilliseconds);\n  };\n}\n\nexports.debounce = debounce;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/node_modules/uno-js/dist/debounce.js"],"names":["Object","defineProperty","exports","value","debounce","func","waitMilliseconds","timeoutId","t","args","_i","arguments","length","context","doLater","undefined","apply","clearTimeout","setTimeout"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,gBAAxB,EAA0C;AACtC,MAAIA,gBAAgB,KAAK,KAAK,CAA9B,EAAiC;AAAEA,IAAAA,gBAAgB,GAAG,GAAnB;AAAyB;;AAC5D,MAAIC,SAAJ,CAFsC,CAGtC;;AACA,SAAO,UAAUC,CAAV,EAAa;AAChB,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,IAAI,CAACC,EAAE,GAAG,CAAN,CAAJ,GAAeC,SAAS,CAACD,EAAD,CAAxB;AACH;;AACD,QAAIG,OAAO,GAAGL,CAAd;;AACA,QAAIM,OAAO,GAAG,YAAY;AACtBP,MAAAA,SAAS,GAAGQ,SAAZ;AACAV,MAAAA,IAAI,CAACW,KAAL,CAAWH,OAAX,EAAoBJ,IAApB;AACH,KAHD;;AAIA,QAAIF,SAAS,KAAKQ,SAAlB,EAA6B;AACzBE,MAAAA,YAAY,CAACV,SAAD,CAAZ;AACH;;AACDA,IAAAA,SAAS,GAAGW,UAAU,CAACJ,OAAD,EAAUR,gBAAV,CAAtB;AACH,GAdD;AAeH;;AACDJ,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction debounce(func, waitMilliseconds) {\n    if (waitMilliseconds === void 0) { waitMilliseconds = 500; }\n    var timeoutId;\n    // tslint:disable-next-line: only-arrow-functions\n    return function (t) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var context = t;\n        var doLater = function () {\n            timeoutId = undefined;\n            func.apply(context, args);\n        };\n        if (timeoutId !== undefined) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(doLater, waitMilliseconds);\n    };\n}\nexports.debounce = debounce;\n"]},"metadata":{},"sourceType":"script"}