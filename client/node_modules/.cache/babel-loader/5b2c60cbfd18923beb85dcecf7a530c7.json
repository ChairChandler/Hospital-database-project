{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getInput = () => {\n      return {\n        login: this.state.login,\n        password: this.state.password,\n        type: this.state.type\n      };\n    };\n\n    this.validate = () => {\n      return {\n        login: !!this.state.login,\n        password: !!this.state.password\n      };\n    };\n\n    this.setStatePropsValue = (name, val) => {\n      const state = this.state;\n      state[name] = val;\n      this.setState(state);\n    };\n\n    this.render = () => {\n      const errors = this.validate();\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        onClose: type => {\n          if (type === 'cancel') {\n            this.setStatePropsValue('isCancelled', true);\n            this.props.onClose(type);\n          }\n\n          if (type === 'done' && !Object.keys(errors).some(key => errors[key])) {\n            this.props.setData(this.getInput());\n            this.setStatePropsValue('isCancelled', true);\n            this.props.onClose(type);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: errors.login,\n        margin: \"dense\",\n        id: \"login\",\n        label: \"Login\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          this.setStatePropsValue('login', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: errors.password,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          this.setStatePropsValue('password', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Type\",\n        onChange: event => {\n          if (event.target.value === 'null') {\n            this.setStatePropsValue('type', null);\n          } else {\n            this.setStatePropsValue('type', event.target.value);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"null\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Empty\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      login: null,\n      password: null,\n      type: null,\n      isCancelled: false\n    };\n  }\n\n}\nexport const EditUserDialog = props => React.createElement(FormDialog, {\n  isOpen: props.isOpen,\n  onClose: props.onClose,\n  title: props.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"password\",\n  label: \"Password\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"type\",\n  label: \"Type\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}));\nexport const DeleteUserDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Are you sure?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","AddUserDialog","Component","constructor","props","getInput","login","state","password","type","validate","setStatePropsValue","name","val","setState","render","errors","isCancelled","title","onClose","Object","keys","some","key","setData","event","target","value","types","map","EditUserDialog","isOpen","DeleteUserDialog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\n\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      login: null,\n      password: null,\n      type: null,\n      isCancelled: false\n    }\n  }\n\n  getInput = () => {\n    return {\n      login: this.state.login,\n      password: this.state.password,\n      type: this.state.type\n    }\n  }\n\n  validate = () => {\n    return {\n      login: !!this.state.login,\n      password: !!this.state.password\n    }\n  }\n\n  setStatePropsValue = (name, val) => {\n    const state = this.state\n    state[name] = val\n    this.setState(state)\n  }\n\n  render = () => {\n    const errors = this.validate()\n\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} onClose={(type) => {\n      if(type === 'cancel') {\n        this.setStatePropsValue('isCancelled', true)\n        this.props.onClose(type)\n      }\n\n      if(type === 'done' && !Object.keys(errors).some(key => errors[key])) {\n        this.props.setData(this.getInput())\n        this.setStatePropsValue('isCancelled', true)\n        this.props.onClose(type)\n      }\n    }}>\n      \n      \n      <TextField\n      autoFocus\n      required\n      error={errors.login}\n      margin=\"dense\"\n      id=\"login\"\n      label=\"Login\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {this.setStatePropsValue('login', event.target.value)}}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={errors.password}\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Password\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {this.setStatePropsValue('password', event.target.value)}}\n      />\n\n      <select name=\"Type\" onChange={(event) => {\n        if(event.target.value === 'null') {\n          this.setStatePropsValue('type', null)\n        } else {\n          this.setStatePropsValue('type', event.target.value)\n        }}}\n      >\n\n        <option value=\"null\" selected>Empty</option>\n        {this.props.types.map(type => <option value={type}>{type}</option>)}\n\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport const EditUserDialog = (props) =>\n    <FormDialog isOpen={props.isOpen} onClose={props.onClose} title={props.title}>\n      <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"type\"\n            label=\"Type\"\n            type=\"password\"\n            fullWidth\n          />\n    </FormDialog>\n\nexport const DeleteUserDialog = ({isOpen, title, onClose}) =>\n    <QuestionDialog isOpen={isOpen} title={title} question=\"Are you sure?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}