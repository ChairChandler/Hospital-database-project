{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      return {\n        //true means error\n        login: !this.state.inputs.login || this.props.users.some(name => name === this.state.inputs.login),\n        password: !this.state.inputs.password\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = errors => {\n      const state = this.state;\n      state.errors = errors;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors).some(key => errors[key]);\n\n        if (isError) {\n          this.setErrors(errors);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.login,\n        margin: \"dense\",\n        id: \"login\",\n        label: \"Login\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          this.setInputValue('login', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.password,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          this.setInputValue('password', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Type\",\n        onChange: event => {\n          if (event.target.value === 'null') {\n            this.setInputValue('type', null);\n          } else {\n            this.setInputValue('type', event.target.value);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"null\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Empty\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      inputs: {\n        login: null,\n        password: null,\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport const EditUserDialog = props => React.createElement(FormDialog, {\n  isOpen: props.isOpen,\n  onClose: props.onClose,\n  title: props.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"password\",\n  label: \"Password\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"type\",\n  label: \"Type\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}));\nexport const DeleteUserDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Are you sure?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","AddUserDialog","Component","constructor","props","validate","login","state","inputs","users","some","name","password","setInputValue","val","setState","exit","isCancelled","setErrors","errors","submit","button","onClose","isError","Object","keys","key","setData","render","title","type","event","target","value","maxLength","types","map","EditUserDialog","isOpen","DeleteUserDialog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\n\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        login: null,\n        password: null,\n        type: null\n      },\n      errors: {\n        login: false,\n        password: false\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    return { //true means error\n      login: !this.state.inputs.login || this.props.users.some(name => name === this.state.inputs.login),\n      password: !this.state.inputs.password\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors) => {\n    const state = this.state\n    state.errors = errors\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors).some(key => errors[key])\n\n      if(isError) {\n        this.setErrors(errors)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.login}\n      margin=\"dense\"\n      id=\"login\"\n      label=\"Login\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {this.setInputValue('login', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.password}\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Password\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {this.setInputValue('password', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <select name=\"Type\" onChange={(event) => {\n        if(event.target.value === 'null') {\n          this.setInputValue('type', null)\n        } else {\n          this.setInputValue('type', event.target.value)\n        }}}\n      >\n\n        <option value=\"null\" selected>Empty</option>\n        {this.props.types.map(type => <option value={type}>{type}</option>)}\n\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport const EditUserDialog = (props) =>\n    <FormDialog isOpen={props.isOpen} onClose={props.onClose} title={props.title}>\n      <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"type\"\n            label=\"Type\"\n            type=\"password\"\n            fullWidth\n          />\n    </FormDialog>\n\nexport const DeleteUserDialog = ({isOpen, title, onClose}) =>\n    <QuestionDialog isOpen={isOpen} title={title} question=\"Are you sure?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}