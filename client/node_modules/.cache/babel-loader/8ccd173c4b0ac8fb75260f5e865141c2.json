{"ast":null,"code":"import _slicedToArray from \"/home/chairchandler/Desktop/Bazy Danych/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DataGrid, ToolbarOptions } from 'tubular-react';\nimport { ColumnModel, ColumnDataType } from 'tubular-common';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function SQLTable(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(props.headers),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        headers = _React$useState2[0],\n        setHeaders = _React$useState2[1];\n\n  const _React$useState3 = React.useState(props.rows),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rows = _React$useState4[0],\n        setRows = _React$useState4[1];\n\n  let convHeaders = headers.map(({\n    header,\n    label\n  }, colnum) => new ColumnModel(header, {\n    sortable: true,\n    filterable: true,\n    searchable: true,\n    dataType: ColumnDataType.String\n  }));\n\n  const _React$useState5 = React.useState(convHeaders),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        columns = _React$useState6[0],\n        setColumns = _React$useState6[1];\n\n  const toolbarButton = new ToolbarOptions({\n    customItems: React.createElement(IconButton, {\n      onClick: () => alert('HELLO'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(AddOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))\n  });\n  return React.createElement(DataGrid, {\n    columns: columns,\n    dataSource: rows,\n    gridName: props.title,\n    onRowClick: row => alert(JSON.stringify(row)),\n    toolbarOptions: toolbarButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js"],"names":["React","makeStyles","DataGrid","ToolbarOptions","ColumnModel","ColumnDataType","IconButton","AddOutlinedIcon","Button","useStyles","root","width","container","maxHeight","SQLTable","props","classes","useState","headers","setHeaders","rows","setRows","convHeaders","map","header","label","colnum","sortable","filterable","searchable","dataType","String","columns","setColumns","toolbarButton","customItems","alert","title","row","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,eAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gBAA5C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AAJgB,CAAD,CAA5B;AASA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AADsC,0BAERT,KAAK,CAACiB,QAAN,CAAeF,KAAK,CAACG,OAArB,CAFQ;AAAA;AAAA,QAE/BA,OAF+B;AAAA,QAEtBC,UAFsB;;AAAA,2BAGdnB,KAAK,CAACiB,QAAN,CAAeF,KAAK,CAACK,IAArB,CAHc;AAAA;AAAA,QAG/BA,IAH+B;AAAA,QAGzBC,OAHyB;;AAKtC,MAAIC,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAY,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,EAAkBC,MAAlB,KAC5B,IAAItB,WAAJ,CAAgBoB,MAAhB,EAAwB;AACtBG,IAAAA,QAAQ,EAAE,IADY;AAEtBC,IAAAA,UAAU,EAAE,IAFU;AAGtBC,IAAAA,UAAU,EAAE,IAHU;AAItBC,IAAAA,QAAQ,EAAEzB,cAAc,CAAC0B;AAJH,GAAxB,CADgB,CAAlB;;AALsC,2BAcR/B,KAAK,CAACiB,QAAN,CAAeK,WAAf,CAdQ;AAAA;AAAA,QAc/BU,OAd+B;AAAA,QActBC,UAdsB;;AAgBtC,QAAMC,aAAa,GAAG,IAAI/B,cAAJ,CAAmB;AACvCgC,IAAAA,WAAW,EAAE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,OAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACX,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAD0B,GAAnB,CAAtB;AAMA,SACE,oBAAC,QAAD;AACA,IAAA,OAAO,EAAEJ,OADT;AAEA,IAAA,UAAU,EAAEZ,IAFZ;AAGA,IAAA,QAAQ,EAAEL,KAAK,CAACsB,KAHhB;AAIA,IAAA,UAAU,EAAGC,GAAD,IAASF,KAAK,CAACG,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAD,CAJ1B;AAKA,IAAA,cAAc,EAAEJ,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DataGrid, ToolbarOptions } from 'tubular-react';\nimport { ColumnModel, ColumnDataType } from 'tubular-common';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function SQLTable(props) {\n  const classes = useStyles();\n  const [headers, setHeaders] = React.useState(props.headers)\n  const [rows, setRows] = React.useState(props.rows)\n  \n  let convHeaders = headers.map(({header, label}, colnum) => \n    new ColumnModel(header, {\n      sortable: true,\n      filterable: true,\n      searchable: true,\n      dataType: ColumnDataType.String\n    }))\n  \n  \n  const [columns, setColumns] = React.useState(convHeaders)\n\n  const toolbarButton = new ToolbarOptions({\n    customItems: <IconButton onClick={() => alert('HELLO')}>\n      <AddOutlinedIcon/>\n    </IconButton>,\n  });\n\n  return (\n    <DataGrid\n    columns={columns}\n    dataSource={rows}\n    gridName={props.title}\n    onRowClick={(row) => alert(JSON.stringify(row))}\n    toolbarOptions={toolbarButton}\n   />\n  )\n}"]},"metadata":{},"sourceType":"module"}