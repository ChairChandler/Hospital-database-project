{"ast":null,"code":"import _slicedToArray from \"/home/chairchandler/Desktop/Bazy Danych/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js\";\nimport React from 'react';\nimport { DataGrid, ToolbarOptions } from 'tubular-react';\nimport { ColumnModel } from 'tubular-common';\nexport default function SQLTable(props) {\n  const _React$useState = React.useState(props.headers),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        headers = _React$useState2[0],\n        setHeaders = _React$useState2[1];\n\n  const _React$useState3 = React.useState(props.rows),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rows = _React$useState4[0],\n        setRows = _React$useState4[1];\n\n  let convHeaders = headers.map(({\n    header,\n    label\n  }, colnum) => new ColumnModel(header, {\n    sortable: true,\n    searchable: true\n  }));\n\n  const _React$useState5 = React.useState(convHeaders),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        columns = _React$useState6[0],\n        setColumns = _React$useState6[1];\n\n  const toolbarButton = new ToolbarOptions({\n    customItems: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, props.children)\n  });\n  return React.createElement(DataGrid, {\n    columns: columns,\n    dataSource: rows,\n    gridName: props.title,\n    onRowClick: row => alert(JSON.stringify(row)),\n    toolbarOptions: toolbarButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js"],"names":["React","DataGrid","ToolbarOptions","ColumnModel","SQLTable","props","useState","headers","setHeaders","rows","setRows","convHeaders","map","header","label","colnum","sortable","searchable","columns","setColumns","toolbarButton","customItems","children","title","row","alert","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,eAAzC;AACA,SAASC,WAAT,QAA2B,gBAA3B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,0BACRL,KAAK,CAACM,QAAN,CAAeD,KAAK,CAACE,OAArB,CADQ;AAAA;AAAA,QAC/BA,OAD+B;AAAA,QACtBC,UADsB;;AAAA,2BAEdR,KAAK,CAACM,QAAN,CAAeD,KAAK,CAACI,IAArB,CAFc;AAAA;AAAA,QAE/BA,IAF+B;AAAA,QAEzBC,OAFyB;;AAItC,MAAIC,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAY,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,EAAkBC,MAAlB,KAC5B,IAAIZ,WAAJ,CAAgBU,MAAhB,EAAwB;AACtBG,IAAAA,QAAQ,EAAE,IADY;AAEtBC,IAAAA,UAAU,EAAE;AAFU,GAAxB,CADgB,CAAlB;;AAJsC,2BAWRjB,KAAK,CAACM,QAAN,CAAeK,WAAf,CAXQ;AAAA;AAAA,QAW/BO,OAX+B;AAAA,QAWtBC,UAXsB;;AAatC,QAAMC,aAAa,GAAG,IAAIlB,cAAJ,CAAmB;AACvCmB,IAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMhB,KAAK,CAACiB,QAAZ;AAD0B,GAAnB,CAAtB;AAIA,SACE,oBAAC,QAAD;AACA,IAAA,OAAO,EAAEJ,OADT;AAEA,IAAA,UAAU,EAAET,IAFZ;AAGA,IAAA,QAAQ,EAAEJ,KAAK,CAACkB,KAHhB;AAIA,IAAA,UAAU,EAAGC,GAAD,IAASC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,GAAf,CAAD,CAJ1B;AAKA,IAAA,cAAc,EAAEJ,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import React from 'react';\nimport { DataGrid, ToolbarOptions } from 'tubular-react';\nimport { ColumnModel} from 'tubular-common';\n\nexport default function SQLTable(props) {\n  const [headers, setHeaders] = React.useState(props.headers)\n  const [rows, setRows] = React.useState(props.rows)\n  \n  let convHeaders = headers.map(({header, label}, colnum) => \n    new ColumnModel(header, {\n      sortable: true,\n      searchable: true\n    }))\n  \n  \n  const [columns, setColumns] = React.useState(convHeaders)\n\n  const toolbarButton = new ToolbarOptions({\n    customItems: <div>{props.children}</div>\n  });\n\n  return (\n    <DataGrid\n    columns={columns}\n    dataSource={rows}\n    gridName={props.title}\n    onRowClick={(row) => alert(JSON.stringify(row))}\n    toolbarOptions={toolbarButton}\n   />\n  )\n}"]},"metadata":{},"sourceType":"module"}