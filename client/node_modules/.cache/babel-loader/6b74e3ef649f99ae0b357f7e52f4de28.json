{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/JobDialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog } from '../../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nexport class AddJobTypeDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const jobTypeCreate = this.props.jobs.some(job => job.nazwa_etatu === this.state.inputs.name);\n      return {\n        //true means error\n        errors: {\n          name: jobTypeCreate\n        },\n        errorsLabel: {\n          name: jobTypeCreate ? 'Etat już istnieje' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Etat\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"30000\",\n        value: \"0\",\n        onChange: event => {\n          this.setInputValue('payment', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      inputs: {\n        name: '',\n        payment: 0\n      },\n      errors: {\n        name: false\n      },\n      errorsLabel: {\n        name: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport class EditPatientDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const wrongBornInput = this.state.inputs.date_of_birth > EditPatientDialog.today;\n      return {\n        //true means error\n        errors: {\n          name: !this.state.inputs.name.length,\n          surname: !this.state.inputs.surname.length,\n          date_of_birth: wrongBornInput\n        },\n        errorsLabel: {\n          name: !this.state.inputs.name.length ? 'Puste imie' : '',\n          surname: !this.state.inputs.surname.length ? 'Puste nazwisko' : '',\n          date_of_birth: wrongBornInput ? 'Niewłaściwa data urodzenia' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        value: this.state.inputs.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Imie\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.surname,\n        helperText: this.state.errorsLabel.surname,\n        value: this.state.inputs.surname,\n        margin: \"dense\",\n        id: \"surname\",\n        label: \"Nazwisko\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('surname', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(KeyboardDatePicker, {\n        margin: \"normal\",\n        id: \"date-picker-dialog\",\n        label: \"Data urodzenia\",\n        error: this.state.errors.date_of_birth,\n        helperText: this.state.errorsLabel.date_of_birth,\n        format: \"MM/dd/yyyy\",\n        value: this.state.inputs.date_of_birth,\n        onChange: date => {\n          if (date !== null) this.setInputValue('date_of_birth', EditPatientDialog.parseDate(date));\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      inputs: {\n        name: this.props.selectedPatient.imie,\n        surname: this.props.selectedPatient.nazwisko,\n        date_of_birth: new Date(this.props.selectedPatient.data_urodzenia)\n      },\n      errors: {\n        name: false,\n        surname: false,\n        date_of_birth: false\n      },\n      errorsLabel: {\n        name: '',\n        surname: '',\n        date_of_birth: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\n\nEditPatientDialog.parseDate = date => {\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n};\n\nEditPatientDialog.today = EditPatientDialog.parseDate(new Date());\nexport class SignTreatmentDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        this.props.setData(this.state.inputs);\n        this.exit();\n        this.props.onClose(button);\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Pesel \"), React.createElement(\"select\", {\n        name: \"Pesel\",\n        onChange: event => {\n          this.setInputValue('pesel', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.props.pesels.map((pesel, indx) => React.createElement(\"option\", {\n        value: pesel,\n        selected: indx === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, pesel))));\n    };\n\n    this.state = {\n      inputs: {\n        pesel: this.props.pesels[0]\n      },\n      isCancelled: false\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/JobDialogs.js"],"names":["React","TextField","FormDialog","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","AddJobTypeDialog","Component","constructor","props","validate","jobTypeCreate","jobs","some","job","nazwa_etatu","state","inputs","name","errors","errorsLabel","setInputValue","val","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","payment","EditPatientDialog","wrongBornInput","date_of_birth","today","length","surname","date","parseDate","selectedPatient","imie","nazwisko","Date","data_urodzenia","UTC","getFullYear","getMonth","getDate","SignTreatmentDialog","pesels","map","pesel","indx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,QAA4D,sBAA5D;AAEA,OAAO,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,QAjBmB,GAiBR,MAAM;AACf,YAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,WAAJ,KAAoB,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,IAAlE,CAAtB;AACA,aAAO;AAAE;AACPC,QAAAA,MAAM,EAAE;AACND,UAAAA,IAAI,EAAEP;AADA,SADH;AAILS,QAAAA,WAAW,EAAE;AACXF,UAAAA,IAAI,EAAEP,aAAa,GAAE,mBAAF,GAAwB;AADhC;AAJR,OAAP;AAQD,KA3BkB;;AAAA,SA6BnBU,aA7BmB,GA6BH,CAACH,IAAD,EAAOI,GAAP,KAAe;AAC7B,YAAMN,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqBI,GAArB;AACA,WAAKC,QAAL,CAAcP,KAAd;AACD,KAjCkB;;AAAA,SAmCnBQ,IAnCmB,GAmCZ,MAAM;AACX,YAAMR,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACS,WAAN,GAAoB,IAApB;AACA,WAAKF,QAAL,CAAcP,KAAd;AACD,KAvCkB;;AAAA,SAyCnBU,SAzCmB,GAyCP,CAACP,MAAD,EAASQ,KAAT,KAAmB;AAC7B,YAAMX,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACAH,MAAAA,KAAK,CAACI,WAAN,GAAoBO,KAApB;AACA,WAAKJ,QAAL,CAAcP,KAAd;AACD,KA9CkB;;AAAA,SAgDnBY,MAhDmB,GAgDTC,MAAD,IAAY;AACnB,UAAGA,MAAM,KAAK,QAAd,EAAwB;AACtB,aAAKL,IAAL;AACA,aAAKf,KAAL,CAAWqB,OAAX,CAAmBD,MAAnB;AACD,OAHD,MAGO;AACL,cAAMV,MAAM,GAAG,KAAKT,QAAL,EAAf;AACA,cAAMqB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACA,MAAnB,EAA2BN,IAA3B,CAAgCqB,GAAG,IAAIf,MAAM,CAACA,MAAP,CAAce,GAAd,CAAvC,CAAhB;;AAEA,YAAGH,OAAH,EAAY;AACV,eAAKL,SAAL,CAAeP,MAAM,CAACA,MAAtB,EAA8BA,MAAM,CAACC,WAArC;AACD,SAFD,MAEO;AACL,eAAKX,KAAL,CAAW0B,OAAX,CAAmB,KAAKnB,KAAL,CAAWC,MAA9B;AACA,eAAKO,IAAL;AACA,eAAKf,KAAL,CAAWqB,OAAX,CAAmBD,MAAnB;AACD;AACF;AACF,KAhEkB;;AAAA,SAkEnBO,MAlEmB,GAkEV,MAAM;AACb,aAAO,CAAC,KAAKpB,KAAL,CAAWS,WAAZ,IACP,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAW4B,KAA9B;AAAqC,QAAA,MAAM,EAAE,IAA7C;AAAmD,QAAA,OAAO,EAAE,KAAK5B,KAAL,CAAW6B,OAAvE;AAAgF,QAAA,OAAO,EAAGC,IAAD,IAAU;AAAC,eAAKX,MAAL,CAAYW,IAAZ;AAAkB,SAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,SAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,QAAQ,MAFR;AAGA,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWG,MAAX,CAAkBD,IAHzB;AAIA,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWI,WAAX,CAAuBF,IAJnC;AAKA,QAAA,MAAM,EAAC,OALP;AAMA,QAAA,EAAE,EAAC,MANH;AAOA,QAAA,KAAK,EAAC,MAPN;AAQA,QAAA,IAAI,EAAC,MARL;AASA,QAAA,SAAS,MATT;AAUA,QAAA,QAAQ,EAAGsB,KAAD,IAAW;AAAC,cAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,IAA1B,EAAgC,KAAKrB,aAAL,CAAmB,MAAnB,EAA2BmB,KAAK,CAACC,MAAN,CAAaC,KAAxC;AAA+C,SAVrG;AAWA,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAgBC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,GAAzB;AAA6B,QAAA,GAAG,EAAC,OAAjC;AAAyC,QAAA,KAAK,EAAC,GAA/C;AAAmD,QAAA,QAAQ,EAAGH,KAAD,IAAW;AAAC,eAAKnB,aAAL,CAAmB,SAAnB,EAA8BmB,KAAK,CAACC,MAAN,CAAaC,KAA3C;AAAkD,SAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBD,CADA;AAoBA,KAvFiB;;AAEjB,SAAK1B,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,EADA;AAEN0B,QAAAA,OAAO,EAAE;AAFH,OADG;AAKXzB,MAAAA,MAAM,EAAE;AACND,QAAAA,IAAI,EAAE;AADA,OALG;AAQXE,MAAAA,WAAW,EAAE;AACXF,QAAAA,IAAI,EAAE;AADK,OARF;AAWXO,MAAAA,WAAW,EAAE;AAXF,KAAb;AAaD;;AAhBmD;AA2FtD,OAAO,MAAMoB,iBAAN,SAAgC7C,KAAK,CAACO,SAAtC,CAAgD;AAOrDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,QAvBmB,GAuBR,MAAM;AACf,YAAMoC,cAAc,GAAG,KAAK9B,KAAL,CAAWC,MAAX,CAAkB8B,aAAlB,GAAkCF,iBAAiB,CAACG,KAA3E;AAEA,aAAO;AAAE;AACP7B,QAAAA,MAAM,EAAE;AACND,UAAAA,IAAI,EAAE,CAAC,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB+B,MADxB;AAENC,UAAAA,OAAO,EAAE,CAAC,KAAKlC,KAAL,CAAWC,MAAX,CAAkBiC,OAAlB,CAA0BD,MAF9B;AAGNF,UAAAA,aAAa,EAAED;AAHT,SADH;AAML1B,QAAAA,WAAW,EAAE;AACXF,UAAAA,IAAI,EAAE,CAAC,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,IAAlB,CAAuB+B,MAAxB,GAAiC,YAAjC,GAAgD,EAD3C;AAEXC,UAAAA,OAAO,EAAE,CAAC,KAAKlC,KAAL,CAAWC,MAAX,CAAkBiC,OAAlB,CAA0BD,MAA3B,GAAoC,gBAApC,GAAsD,EAFpD;AAGXF,UAAAA,aAAa,EAAED,cAAc,GAAG,4BAAH,GAAkC;AAHpD;AANR,OAAP;AAYD,KAtCkB;;AAAA,SAwCnBzB,aAxCmB,GAwCH,CAACH,IAAD,EAAOI,GAAP,KAAe;AAC7B,YAAMN,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqBI,GAArB;AACA,WAAKC,QAAL,CAAcP,KAAd;AACD,KA5CkB;;AAAA,SA8CnBQ,IA9CmB,GA8CZ,MAAM;AACX,YAAMR,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACS,WAAN,GAAoB,IAApB;AACA,WAAKF,QAAL,CAAcP,KAAd;AACD,KAlDkB;;AAAA,SAoDnBU,SApDmB,GAoDP,CAACP,MAAD,EAASQ,KAAT,KAAmB;AAC7B,YAAMX,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACG,MAAN,GAAeA,MAAf;AACAH,MAAAA,KAAK,CAACI,WAAN,GAAoBO,KAApB;AACA,WAAKJ,QAAL,CAAcP,KAAd;AACD,KAzDkB;;AAAA,SA2DnBY,MA3DmB,GA2DTC,MAAD,IAAY;AACnB,UAAGA,MAAM,KAAK,QAAd,EAAwB;AACtB,aAAKL,IAAL;AACA,aAAKf,KAAL,CAAWqB,OAAX,CAAmBD,MAAnB;AACD,OAHD,MAGO;AACL,cAAMV,MAAM,GAAG,KAAKT,QAAL,EAAf;AACA,cAAMqB,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYd,MAAM,CAACA,MAAnB,EAA2BN,IAA3B,CAAgCqB,GAAG,IAAIf,MAAM,CAACA,MAAP,CAAce,GAAd,CAAvC,CAAhB;;AAEA,YAAGH,OAAH,EAAY;AACV,eAAKL,SAAL,CAAeP,MAAM,CAACA,MAAtB,EAA8BA,MAAM,CAACC,WAArC;AACD,SAFD,MAEO;AACL,eAAKX,KAAL,CAAW0B,OAAX,CAAmB,KAAKnB,KAAL,CAAWC,MAA9B;AACA,eAAKO,IAAL;AACA,eAAKf,KAAL,CAAWqB,OAAX,CAAmBD,MAAnB;AACD;AACF;AACF,KA3EkB;;AAAA,SA6EnBO,MA7EmB,GA6EV,MAAM;AACb,aAAO,CAAC,KAAKpB,KAAL,CAAWS,WAAZ,IACP,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAW4B,KAA9B;AAAqC,QAAA,MAAM,EAAE,IAA7C;AAAmD,QAAA,OAAO,EAAE,KAAK5B,KAAL,CAAW6B,OAAvE;AAAgF,QAAA,OAAO,EAAGC,IAAD,IAAU;AAAC,eAAKX,MAAL,CAAYW,IAAZ;AAAkB,SAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,SAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,QAAQ,MAFR;AAGA,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWG,MAAX,CAAkBD,IAHzB;AAIA,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWI,WAAX,CAAuBF,IAJnC;AAKA,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,IALzB;AAMA,QAAA,MAAM,EAAC,OANP;AAOA,QAAA,EAAE,EAAC,MAPH;AAQA,QAAA,KAAK,EAAC,MARN;AASA,QAAA,IAAI,EAAC,MATL;AAUA,QAAA,SAAS,MAVT;AAWA,QAAA,QAAQ,EAAGsB,KAAD,IAAW;AAAC,cAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,IAA1B,EAAgC,KAAKrB,aAAL,CAAmB,MAAnB,EAA2BmB,KAAK,CAACC,MAAN,CAAaC,KAAxC;AAA+C,SAXrG;AAYA,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAiBE,oBAAC,SAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,QAAQ,MAFR;AAGA,QAAA,KAAK,EAAE,KAAK3B,KAAL,CAAWG,MAAX,CAAkB+B,OAHzB;AAIA,QAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWI,WAAX,CAAuB8B,OAJnC;AAKA,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWC,MAAX,CAAkBiC,OALzB;AAMA,QAAA,MAAM,EAAC,OANP;AAOA,QAAA,EAAE,EAAC,SAPH;AAQA,QAAA,KAAK,EAAC,UARN;AASA,QAAA,IAAI,EAAC,MATL;AAUA,QAAA,SAAS,MAVT;AAWA,QAAA,QAAQ,EAAGV,KAAD,IAAW;AAAC,cAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,IAA1B,EAAgC,KAAKrB,aAAL,CAAmB,SAAnB,EAA8BmB,KAAK,CAACC,MAAN,CAAaC,KAA3C;AAAkD,SAXxG;AAYA,QAAA,UAAU,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EAgCE,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAExC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD;AACA,QAAA,MAAM,EAAC,QADP;AAEA,QAAA,EAAE,EAAC,oBAFH;AAGA,QAAA,KAAK,EAAC,gBAHN;AAIA,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWG,MAAX,CAAkB4B,aAJzB;AAKA,QAAA,UAAU,EAAE,KAAK/B,KAAL,CAAWI,WAAX,CAAuB2B,aALnC;AAMA,QAAA,MAAM,EAAC,YANP;AAOA,QAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWC,MAAX,CAAkB8B,aAPzB;AAQA,QAAA,QAAQ,EAAGI,IAAD,IAAU;AAAC,cAAGA,IAAI,KAAK,IAAZ,EAAkB,KAAK9B,aAAL,CAAmB,eAAnB,EAAoCwB,iBAAiB,CAACO,SAAlB,CAA4BD,IAA5B,CAApC;AAAuE,SAR9G;AASA,QAAA,mBAAmB,EAAE;AACnB,wBAAc;AADK,SATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhCF,CADA;AAkDA,KAhIiB;;AAGjB,SAAKnC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAW4C,eAAX,CAA2BC,IAD3B;AAENJ,QAAAA,OAAO,EAAE,KAAKzC,KAAL,CAAW4C,eAAX,CAA2BE,QAF9B;AAGNR,QAAAA,aAAa,EAAE,IAAIS,IAAJ,CAAS,KAAK/C,KAAL,CAAW4C,eAAX,CAA2BI,cAApC;AAHT,OADG;AAMXtC,MAAAA,MAAM,EAAE;AACND,QAAAA,IAAI,EAAE,KADA;AAENgC,QAAAA,OAAO,EAAE,KAFH;AAGNH,QAAAA,aAAa,EAAE;AAHT,OANG;AAWX3B,MAAAA,WAAW,EAAE;AACXF,QAAAA,IAAI,EAAE,EADK;AAEXgC,QAAAA,OAAO,EAAE,EAFE;AAGXH,QAAAA,aAAa,EAAE;AAHJ,OAXF;AAgBXtB,MAAAA,WAAW,EAAE;AAhBF,KAAb;AAkBD;;AA5BoD;;AAA1CoB,iB,CACJO,S,GAAaD,IAAD,IAAU;AAC3B,SAAO,IAAIK,IAAJ,CAASA,IAAI,CAACE,GAAL,CAASP,IAAI,CAACQ,WAAL,EAAT,EAA6BR,IAAI,CAACS,QAAL,EAA7B,EAA8CT,IAAI,CAACU,OAAL,EAA9C,CAAT,CAAP;AACD,C;;AAHUhB,iB,CAKJG,K,GAAQH,iBAAiB,CAACO,SAAlB,CAA4B,IAAII,IAAJ,EAA5B,C;AAqIjB,OAAO,MAAMM,mBAAN,SAAkC9D,KAAK,CAACO,SAAxC,CAAkD;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBY,aAVmB,GAUH,CAACH,IAAD,EAAOI,GAAP,KAAe;AAC7B,YAAMN,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqBI,GAArB;AACA,WAAKC,QAAL,CAAcP,KAAd;AACD,KAdkB;;AAAA,SAgBnBQ,IAhBmB,GAgBZ,MAAM;AACX,YAAMR,KAAK,GAAG,KAAKA,KAAnB;AACAA,MAAAA,KAAK,CAACS,WAAN,GAAoB,IAApB;AACA,WAAKF,QAAL,CAAcP,KAAd;AACD,KApBkB;;AAAA,SAsBnBY,MAtBmB,GAsBTC,MAAD,IAAY;AACnB,UAAGA,MAAM,KAAK,QAAd,EAAwB;AACtB,aAAKL,IAAL;AACA,aAAKf,KAAL,CAAWqB,OAAX,CAAmBD,MAAnB;AACD,OAHD,MAGO;AACL,aAAKpB,KAAL,CAAW0B,OAAX,CAAmB,KAAKnB,KAAL,CAAWC,MAA9B;AACA,aAAKO,IAAL;AACA,aAAKf,KAAL,CAAWqB,OAAX,CAAmBD,MAAnB;AACD;AACF,KA/BkB;;AAAA,SAiCnBO,MAjCmB,GAiCV,MAAM;AACb,aAAO,CAAC,KAAKpB,KAAL,CAAWS,WAAZ,IACP,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAW4B,KAA9B;AAAqC,QAAA,MAAM,EAAE,IAA7C;AAAmD,QAAA,OAAO,EAAE,KAAK5B,KAAL,CAAW6B,OAAvE;AAAgF,QAAA,OAAO,EAAGC,IAAD,IAAU;AAAC,eAAKX,MAAL,CAAYW,IAAZ;AAAkB,SAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACtC,eAAKnB,aAAL,CAAmB,OAAnB,EAA4BmB,KAAK,CAACC,MAAN,CAAaC,KAAzC;AACD,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKjC,KAAL,CAAWsD,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAAQ,QAAA,KAAK,EAAED,KAAf;AAAsB,QAAA,QAAQ,EAAEC,IAAI,KAAK,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6CD,KAA7C,CAAvC,CAJH,CAHF,CADA;AAWA,KA7CiB;;AAEjB,SAAKjD,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AACNgD,QAAAA,KAAK,EAAE,KAAKxD,KAAL,CAAWsD,MAAX,CAAkB,CAAlB;AADD,OADG;AAIXtC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AATsD","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog } from '../../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nexport class AddJobTypeDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        name: '',\n        payment: 0\n      },\n      errors: {\n        name: false\n      },\n      errorsLabel: {\n        name: '',\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const jobTypeCreate = this.props.jobs.some(job => job.nazwa_etatu === this.state.inputs.name)\n    return { //true means error\n      errors: {\n        name: jobTypeCreate,\n      },\n      errorsLabel: {\n        name: jobTypeCreate? 'Etat już istnieje' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.name}\n      helperText={this.state.errorsLabel.name}\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Etat\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n     <input type=\"number\" min=\"0\" max=\"30000\" value=\"0\" onChange={(event) => {this.setInputValue('payment', event.target.value)}}/>\n\n    </FormDialog>\n  )}\n}\n\nexport class EditPatientDialog extends React.Component {\n  static parseDate = (date) => {\n    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n  }\n\n  static today = EditPatientDialog.parseDate(new Date())\n  \n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      inputs: {\n        name: this.props.selectedPatient.imie,\n        surname: this.props.selectedPatient.nazwisko,\n        date_of_birth: new Date(this.props.selectedPatient.data_urodzenia),\n      },\n      errors: {\n        name: false,\n        surname: false,\n        date_of_birth: false,\n      },\n      errorsLabel: {\n        name: '',\n        surname: '',\n        date_of_birth: '',\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const wrongBornInput = this.state.inputs.date_of_birth > EditPatientDialog.today\n\n    return { //true means error\n      errors: {\n        name: !this.state.inputs.name.length,\n        surname: !this.state.inputs.surname.length,\n        date_of_birth: wrongBornInput,\n      },\n      errorsLabel: {\n        name: !this.state.inputs.name.length ? 'Puste imie' : '',\n        surname: !this.state.inputs.surname.length ? 'Puste nazwisko': '',\n        date_of_birth: wrongBornInput ? 'Niewłaściwa data urodzenia' : '',\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.name}\n      helperText={this.state.errorsLabel.name}\n      value={this.state.inputs.name}\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Imie\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.surname}\n      helperText={this.state.errorsLabel.surname}\n      value={this.state.inputs.surname}\n      margin=\"dense\"\n      id=\"surname\"\n      label=\"Nazwisko\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('surname', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Data urodzenia\"\n        error={this.state.errors.date_of_birth}\n        helperText={this.state.errorsLabel.date_of_birth}\n        format=\"MM/dd/yyyy\"\n        value={this.state.inputs.date_of_birth}\n        onChange={(date) => {if(date !== null) this.setInputValue('date_of_birth', EditPatientDialog.parseDate(date))}}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        />\n      </MuiPickersUtilsProvider>\n\n    </FormDialog>\n  )}\n}\n\nexport class SignTreatmentDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        pesel: this.props.pesels[0]\n      },\n      isCancelled: false,\n    } \n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      this.props.setData(this.state.inputs)\n      this.exit()\n      this.props.onClose(button)\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <label>Pesel </label>\n      <select name=\"Pesel\" onChange={(event) => {\n          this.setInputValue('pesel', event.target.value)\n        }}\n      >\n        {this.props.pesels.map((pesel, indx) => <option value={pesel} selected={indx === 0}>{pesel}</option>)}\n      </select>\n    </FormDialog>\n  )}\n}"]},"metadata":{},"sourceType":"module"}