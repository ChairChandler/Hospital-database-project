{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/ReceptionPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nexport class AddPatientDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const userCreated = this.props.users.some(row => row.nazwa === this.state.inputs.pesel);\n      const containsChars = Array.from(this.state.inputs.pesel).some(val => val < '1' || val > '9');\n      return {\n        //true means error\n        errors: {\n          pesel: this.state.inputs.pesel.length !== 11 || containsChars || userCreated,\n          name: !this.state.inputs.name.length,\n          surname: !this.state.inputs.surname.length,\n          date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today\n        },\n        errorsLabel: {\n          pesel: this.state.inputs.pesel.length !== 11 || containsChars ? 'Niewłaściwy numer pesel' : userCreated ? 'Taki uzytkownik juz istnieje' : '',\n          name: !this.state.inputs.name.length ? 'Puste imie' : '',\n          surname: !this.state.inputs.surname.length ? 'Puste nazwisko' : '',\n          date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today ? 'Niewłaściwa data urodzenia' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Imie\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.surname,\n        helperText: this.state.errorsLabel.surname,\n        margin: \"dense\",\n        id: \"surname\",\n        label: \"Nazwisko\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('surname', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.pesel,\n        helperText: this.state.errorsLabel.pesel,\n        margin: \"dense\",\n        id: \"pesel\",\n        label: \"Pesel\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('pesel', event.target.value);\n        },\n        inputProps: {\n          maxLength: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(KeyboardDatePicker, {\n        margin: \"normal\",\n        id: \"date-picker-dialog\",\n        label: \"Data urodzenia\",\n        error: 'test',\n        format: \"MM/dd/yyyy\",\n        value: AddPatientDialog.today,\n        onChange: date => {\n          if (date !== null) this.setInputValue('date_of_birth', date);\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      inputs: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: null\n      },\n      errors: {\n        pesel: false,\n        name: false,\n        surname: false,\n        date_of_birth: false\n      },\n      errorsLabel: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\nAddPatientDialog.today = new Date();\nexport class EditUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'done') {\n        this.props.setData(this.state.inputs);\n      }\n\n      this.exit();\n      this.props.onClose(button);\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Haslo\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          this.setInputValue('password', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Typ\",\n        onChange: event => {\n          if (event.target.value === 'null') {\n            this.setInputValue('type', null);\n          } else {\n            this.setInputValue('type', event.target.value);\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"null\",\n        selected: this.props.selected.rola == null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"---\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        selected: this.props.selected.rola === type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      inputs: {\n        password: null,\n        type: this.props.selected.rola\n      },\n      isCancelled: false\n    };\n  }\n\n}\nexport const DeleteUserDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Czy jestes pewny?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 222\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/ReceptionPanel/Dialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","AddPatientDialog","Component","constructor","props","validate","userCreated","users","some","row","nazwa","state","inputs","pesel","containsChars","Array","from","val","errors","length","name","surname","date_of_birth","today","errorsLabel","setInputValue","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","date","Date","EditUserDialog","selected","rola","types","map","password","DeleteUserDialog","isOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nexport class AddPatientDialog extends React.Component {\n  static today = new Date()\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: null\n      },\n      errors: {\n        pesel: false,\n        name: false,\n        surname: false,\n        date_of_birth: false\n      },\n      errorsLabel: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_birth: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const userCreated = this.props.users.some(row => row.nazwa === this.state.inputs.pesel)\n    const  containsChars = Array.from(this.state.inputs.pesel).some((val) => val < '1' || val > '9')\n\n    return { //true means error\n      errors: {\n        pesel: this.state.inputs.pesel.length !== 11 || containsChars || userCreated,\n        name: !this.state.inputs.name.length,\n        surname: !this.state.inputs.surname.length,\n        date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today\n      },\n      errorsLabel: {\n        pesel: this.state.inputs.pesel.length !== 11  || containsChars? 'Niewłaściwy numer pesel' : (userCreated ? 'Taki uzytkownik juz istnieje' : ''),\n        name: !this.state.inputs.name.length ? 'Puste imie' : '',\n        surname: !this.state.inputs.surname.length ? 'Puste nazwisko': '',\n        date_of_birth: this.state.inputs.date_of_birth > AddPatientDialog.today ? 'Niewłaściwa data urodzenia' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.name}\n      helperText={this.state.errorsLabel.name}\n      margin=\"dense\"\n      id=\"name\"\n      label=\"Imie\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.surname}\n      helperText={this.state.errorsLabel.surname}\n      margin=\"dense\"\n      id=\"surname\"\n      label=\"Nazwisko\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('surname', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.errors.pesel}\n      helperText={this.state.errorsLabel.pesel}\n      margin=\"dense\"\n      id=\"pesel\"\n      label=\"Pesel\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {if(event.target.value !== null) this.setInputValue('pesel', event.target.value)}}\n      inputProps={{ maxLength: 11 }}\n      />\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Data urodzenia\"\n        error={'test'}\n        format=\"MM/dd/yyyy\"\n        value={AddPatientDialog.today}\n        onChange={(date) => {if(date !== null) this.setInputValue('date_of_birth', date)}}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n        />\n      </MuiPickersUtilsProvider>\n\n    </FormDialog>\n  )}\n}\n\nexport class EditUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        password: null,\n        type: this.props.selected.rola\n      },\n      isCancelled: false,\n    } \n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'done') {\n      this.props.setData(this.state.inputs)\n    }\n\n    this.exit()\n    this.props.onClose(button)\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n      \n      <TextField\n      autoFocus\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Haslo\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {this.setInputValue('password', event.target.value)}}\n      inputProps={{ maxLength: 45 }}\n      />\n\n      <select name=\"Typ\" onChange={(event) => {\n        if(event.target.value === 'null') {\n          this.setInputValue('type', null)\n        } else {\n          this.setInputValue('type', event.target.value)\n        }}}\n      >\n\n        <option value=\"null\" selected={this.props.selected.rola == null}>---</option>\n        {this.props.types.map(type => <option value={type} selected={this.props.selected.rola === type}>{type}</option>)}\n\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport const DeleteUserDialog = ({isOpen, title, onClose}) =>\n    <QuestionDialog isOpen={isOpen} title={title} question=\"Czy jestes pewny?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}