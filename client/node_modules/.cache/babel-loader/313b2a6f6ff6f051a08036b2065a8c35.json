{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/EmployeeDialogs.js\";\nimport React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Switch from '@material-ui/core/Switch';\nexport class AddEmployeeDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      const userCreated = this.props.employees.some(row => row.pesel === this.state.inputs.pesel);\n      const containsChars = Array.from(this.state.inputs.pesel).some(val => val < '0' || val > '9');\n      return {\n        //true means error\n        errors: {\n          pesel: this.state.inputs.pesel.length !== 11 || containsChars || userCreated,\n          name: !this.state.inputs.name.length,\n          surname: !this.state.inputs.surname.length,\n          date_of_employment: this.state.inputs.date_of_employment > AddEmployeeDialog.today\n        },\n        errorsLabel: {\n          pesel: this.state.inputs.pesel.length !== 11 || containsChars ? 'Niewłaściwy numer pesel' : userCreated ? 'Taki uzytkownik juz istnieje' : '',\n          name: !this.state.inputs.name.length ? 'Puste imie' : '',\n          surname: !this.state.inputs.surname.length ? 'Puste nazwisko' : '',\n          date_of_employment: this.state.inputs.date_of_employment > AddEmployeeDialog.today ? 'Niewłaściwa data zatrudnienia' : ''\n        }\n      };\n    };\n\n    this.setInputValue = (name, val) => {\n      const state = this.state;\n      state.inputs[name] = val;\n      this.setState(state);\n    };\n\n    this.exit = () => {\n      const state = this.state;\n      state.isCancelled = true;\n      this.setState(state);\n    };\n\n    this.setErrors = (errors, label) => {\n      const state = this.state;\n      state.errors = errors;\n      state.errorsLabel = label;\n      this.setState(state);\n    };\n\n    this.submit = button => {\n      if (button === 'cancel') {\n        this.exit();\n        this.props.onClose(button);\n      } else {\n        const errors = this.validate();\n        const isError = Object.keys(errors.errors).some(key => errors.errors[key]);\n\n        if (isError) {\n          this.setErrors(errors.errors, errors.errorsLabel);\n        } else {\n          this.props.setData(this.state.inputs);\n          this.exit();\n          this.props.onClose(button);\n        }\n      }\n    };\n\n    this.render = () => {\n      return !this.state.isCancelled && React.createElement(FormDialog, {\n        title: this.props.title,\n        isOpen: true,\n        message: this.props.message,\n        onClose: type => {\n          this.submit(type);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"pesel\",\n        label: \"Pesel\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('pesel', event.target.value);\n        },\n        inputProps: {\n          maxLength: 11\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Imie\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('name', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.errors.name,\n        helperText: this.state.errorsLabel.name,\n        margin: \"dense\",\n        id: \"surname\",\n        label: \"Nazwisko\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('surname', event.target.value);\n        },\n        inputProps: {\n          maxLength: 45\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Etat \"), React.createElement(\"select\", {\n        name: \"Etat\",\n        onChange: event => {\n          this.setInputValue('jobType', event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.props.jobsTypes.map((jobType, indx) => React.createElement(\"option\", {\n        value: jobType,\n        selected: indx === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, jobType))), React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(KeyboardDatePicker, {\n        margin: \"normal\",\n        id: \"date-picker-dialog\",\n        label: \"Data zatrudnienia\",\n        error: this.state.errors.date_of_employment,\n        helperText: this.state.errorsLabel.date_of_employment,\n        format: \"MM/dd/yyyy\",\n        value: this.state.inputs.date_of_employment,\n        onChange: date => {\n          if (date !== null) this.setInputValue('date_of_employment', AddEmployeeDialog.parseDate(date));\n        },\n        KeyboardButtonProps: {\n          'aria-label': 'change date'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        value: \"xd\",\n        checked: this.state.inputs.monday_work,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('monday_work', event.target.value);\n        },\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        checked: this.state.inputs.tuesday_work,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('tuesday_work', event.target.value);\n        },\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        checked: this.state.inputs.wednesday_work,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('wednesday_work', event.target.value);\n        },\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        checked: this.state.inputs.thursday_work,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('thursday_work', event.target.value);\n        },\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        checked: this.state.inputs.friday_work,\n        onChange: event => {\n          if (event.target.value !== null) this.setInputValue('friday_work', event.target.value);\n        },\n        inputProps: {\n          'aria-label': 'primary checkbox'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      inputs: {\n        pesel: '',\n        name: '',\n        surname: '',\n        jobType: this.props.jobsTypes[0],\n        date_of_employment: AddEmployeeDialog.today,\n        monday_work: true,\n        tuesday_work: true,\n        wednesday_work: true,\n        thursday_work: true,\n        friday_work: true\n      },\n      errors: {\n        pesel: false,\n        name: false,\n        surname: false,\n        date_of_employment: false\n      },\n      errorsLabel: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_employment: ''\n      },\n      isCancelled: false\n    };\n  }\n\n}\n\nAddEmployeeDialog.parseDate = date => {\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n};\n\nAddEmployeeDialog.today = AddEmployeeDialog.parseDate(new Date());\nexport const DeleteEmployeeDialog = ({\n  isOpen,\n  title,\n  onClose\n}) => React.createElement(QuestionDialog, {\n  isOpen: isOpen,\n  title: title,\n  question: \"Czy jestes pewny?\",\n  answers: ['cancel', 'delete'],\n  onClose: onClose,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210\n  },\n  __self: this\n});","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/DirectorPanel/Dialogs/EmployeeDialogs.js"],"names":["React","TextField","FormDialog","QuestionDialog","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Switch","AddEmployeeDialog","Component","constructor","props","validate","userCreated","employees","some","row","pesel","state","inputs","containsChars","Array","from","val","errors","length","name","surname","date_of_employment","today","errorsLabel","setInputValue","setState","exit","isCancelled","setErrors","label","submit","button","onClose","isError","Object","keys","key","setData","render","title","message","type","event","target","value","maxLength","jobsTypes","map","jobType","indx","date","parseDate","monday_work","tuesday_work","wednesday_work","thursday_work","friday_work","Date","UTC","getFullYear","getMonth","getDate","DeleteEmployeeDialog","isOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../../Shared/Dialog';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Switch from '@material-ui/core/Switch';\n\nexport class AddEmployeeDialog extends React.Component {\n    static parseDate = (date) => {\n        return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()))\n      }\n      \n    static today = AddEmployeeDialog.parseDate(new Date())\n  \n    constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        pesel: '',\n        name: '',\n        surname: '',\n        jobType: this.props.jobsTypes[0],\n        date_of_employment: AddEmployeeDialog.today,\n\n        monday_work: true,\n        tuesday_work: true,\n        wednesday_work: true,\n        thursday_work: true,\n        friday_work: true\n      },\n      errors: {\n        pesel: false,\n        name: false,\n        surname: false,\n        date_of_employment: false\n      },\n      errorsLabel: {\n        pesel: '',\n        name: '',\n        surname: '',\n        date_of_employment: ''\n      },\n      isCancelled: false,\n    } \n  }\n\n  validate = () => {\n    const userCreated = this.props.employees.some(row => row.pesel === this.state.inputs.pesel)\n    const containsChars = Array.from(this.state.inputs.pesel).some((val) => val < '0' || val > '9')\n\n    return { //true means error\n      errors: {\n        pesel: this.state.inputs.pesel.length !== 11 || containsChars || userCreated,\n        name: !this.state.inputs.name.length,\n        surname: !this.state.inputs.surname.length,\n        date_of_employment: this.state.inputs.date_of_employment > AddEmployeeDialog.today\n      },\n      errorsLabel: {\n        pesel: this.state.inputs.pesel.length !== 11  || containsChars? 'Niewłaściwy numer pesel' : (userCreated ? 'Taki uzytkownik juz istnieje' : ''),\n        name: !this.state.inputs.name.length ? 'Puste imie' : '',\n        surname: !this.state.inputs.surname.length ? 'Puste nazwisko': '',\n        date_of_employment: this.state.inputs.date_of_employment > AddEmployeeDialog.today ? 'Niewłaściwa data zatrudnienia' : ''\n      }\n    }\n  }\n\n  setInputValue = (name, val) => {\n    const state = this.state\n    state.inputs[name] = val\n    this.setState(state)\n  }\n\n  exit = () => {\n    const state = this.state\n    state.isCancelled = true\n    this.setState(state)\n  }\n\n  setErrors = (errors, label) => {\n    const state = this.state\n    state.errors = errors\n    state.errorsLabel = label\n    this.setState(state)\n  }\n\n  submit = (button) => {\n    if(button === 'cancel') {\n      this.exit()\n      this.props.onClose(button)\n    } else {\n      const errors = this.validate()\n      const isError = Object.keys(errors.errors).some(key => errors.errors[key])\n      \n      if(isError) {\n        this.setErrors(errors.errors, errors.errorsLabel)\n      } else {\n        this.props.setData(this.state.inputs)\n        this.exit()\n        this.props.onClose(button)\n      }\n    }\n  }\n\n  render = () => {\n    return !this.state.isCancelled && (\n    <FormDialog title={this.props.title} isOpen={true} message={this.props.message} onClose={(type) => {this.submit(type)}}>\n        \n        <TextField\n        autoFocus\n        required\n        error={this.state.errors.name}\n        helperText={this.state.errorsLabel.name}\n        margin=\"dense\"\n        id=\"pesel\"\n        label=\"Pesel\"\n        type=\"text\"\n        fullWidth\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('pesel', event.target.value)}}\n        inputProps={{ maxLength: 11 }}\n        />\n\n        <TextField\n        autoFocus\n        required\n        error={this.state.errors.name}\n        helperText={this.state.errorsLabel.name}\n        margin=\"dense\"\n        id=\"name\"\n        label=\"Imie\"\n        type=\"text\"\n        fullWidth\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('name', event.target.value)}}\n        inputProps={{ maxLength: 45 }}\n        />\n        \n        <TextField\n        autoFocus\n        required\n        error={this.state.errors.name}\n        helperText={this.state.errorsLabel.name}\n        margin=\"dense\"\n        id=\"surname\"\n        label=\"Nazwisko\"\n        type=\"text\"\n        fullWidth\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('surname', event.target.value)}}\n        inputProps={{ maxLength: 45 }}\n        />\n\n        <label>Etat </label>\n            <select name=\"Etat\" onChange={(event) => {\n            this.setInputValue('jobType', event.target.value)\n            }}\n            >\n            {this.props.jobsTypes.map((jobType, indx) => <option value={jobType} selected={indx === 0}>{jobType}</option>)}\n        </select>\n\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Data zatrudnienia\"\n            error={this.state.errors.date_of_employment}\n            helperText={this.state.errorsLabel.date_of_employment}\n            format=\"MM/dd/yyyy\"\n            value={this.state.inputs.date_of_employment}\n            onChange={(date) => {if(date !== null) this.setInputValue('date_of_employment', AddEmployeeDialog.parseDate(date))}}\n            KeyboardButtonProps={{\n            'aria-label': 'change date',\n            }}\n            />\n      </MuiPickersUtilsProvider>\n\n        <Switch\n        value=\"xd\"\n        checked={this.state.inputs.monday_work}\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('monday_work', event.target.value)}}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n\n        <Switch\n        checked={this.state.inputs.tuesday_work}\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('tuesday_work', event.target.value)}}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n\n        <Switch\n        checked={this.state.inputs.wednesday_work}\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('wednesday_work', event.target.value)}}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n\n        <Switch\n        checked={this.state.inputs.thursday_work}\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('thursday_work', event.target.value)}}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n\n        <Switch\n        checked={this.state.inputs.friday_work}\n        onChange={(event) => {if(event.target.value !== null) this.setInputValue('friday_work', event.target.value)}}\n        inputProps={{ 'aria-label': 'primary checkbox' }}\n        />\n      \n    </FormDialog>\n  )}\n}\n\nexport const DeleteEmployeeDialog = ({isOpen, title, onClose}) =>\n  <QuestionDialog isOpen={isOpen} title={title} question=\"Czy jestes pewny?\" answers={['cancel', 'delete']} onClose={onClose}/>"]},"metadata":{},"sourceType":"module"}