{"ast":null,"code":"import _slicedToArray from \"/home/chairchandler/Desktop/Bazy Danych/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableRow from '@material-ui/core/TableRow';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function SQLTable(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(props.headers),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        headers = _React$useState2[0],\n        setHeaders = _React$useState2[1];\n\n  const _React$useState3 = React.useState(props.rows),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rows = _React$useState4[0],\n        setRows = _React$useState4[1];\n\n  const _React$useState5 = React.useState(new Set()),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selectedRows = _React$useState6[0],\n        setSelectedRows = _React$useState6[1];\n\n  function onSelectRow(rownum) {\n    if (selectedRows.has(rownum)) {\n      selectedRows.delete(rownum);\n    } else {\n      selectedRows.add(rownum);\n    }\n\n    let state = new Set(selectedRows);\n    setSelectedRows(state);\n  }\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, headers.map(({\n    header,\n    label\n  }) => React.createElement(TableCell, {\n    key: headers,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      'fontWeight': 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, label))))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, rows.map((row, rownum) => React.createElement(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: selectedRows.has(rownum),\n    onChange: onSelectRow.bind(this, rownum),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), headers.map(({\n    header\n  }) => React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, row[header]))))))));\n}","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/Shared/SQLTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","Checkbox","TableRow","useStyles","root","width","container","maxHeight","SQLTable","props","classes","useState","headers","setHeaders","rows","setRows","Set","selectedRows","setSelectedRows","onSelectRow","rownum","has","delete","add","state","map","header","label","row","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function SQLTable(props) {\n  const classes = useStyles();\n  const [headers, setHeaders] = React.useState(props.headers)\n  const [rows, setRows] = React.useState(props.rows)\n  \n  const [selectedRows, setSelectedRows] = React.useState(new Set())\n\n  function onSelectRow(rownum) {\n    if(selectedRows.has(rownum)) {\n      selectedRows.delete(rownum)\n    } else {\n      selectedRows.add(rownum)\n    }\n    let state = new Set(selectedRows)\n    setSelectedRows(state)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {headers.map(({header, label}) => (\n                <TableCell\n                  key={headers}\n                  align='center'\n                >\n                  <span style={{'fontWeight': 'bold'}}>{label}</span>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, rownum) => (\n                <TableRow hover role=\"checkbox\">\n                  \n                  <Checkbox\n                  checked={selectedRows.has(rownum)}\n                  onChange={onSelectRow.bind(this, rownum)}\n                  />\n\n                  {headers.map(({header}) => (\n                      <TableCell align='center'>\n                        {row[header]}\n                      </TableCell>\n                    ))\n                  }\n                </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}