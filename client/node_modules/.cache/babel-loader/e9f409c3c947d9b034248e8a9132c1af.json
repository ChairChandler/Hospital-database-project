{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.objectDifference = function (obj1, obj2) {\n  if (!obj2 || Object.prototype.toString.call(obj2) !== '[object Object]') {\n    return obj1;\n  }\n\n  var diffs = {};\n\n  var compare = function (item1, item2, prop) {\n    if (item1 !== item2) {\n      diffs[prop] = {\n        prev: item1,\n        new: item2,\n        type: prop\n      };\n    }\n  };\n\n  Object.keys(obj1).map(function (prop) {\n    return compare(obj1[prop], obj2[prop], prop);\n  });\n  return diffs;\n};","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/node_modules/uno-js/dist/objectDifference.js"],"names":["Object","defineProperty","exports","value","objectDifference","obj1","obj2","prototype","toString","call","diffs","compare","item1","item2","prop","prev","new","type","keys","map"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACAD,OAAO,CAACE,gBAAR,GAA2B,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC7C,MAAI,CAACA,IAAD,IAASN,MAAM,CAACO,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BH,IAA/B,MAAyC,iBAAtD,EAAyE;AACrE,WAAOD,IAAP;AACH;;AACD,MAAIK,KAAK,GAAG,EAAZ;;AACA,MAAIC,OAAO,GAAG,UAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;AACxC,QAAIF,KAAK,KAAKC,KAAd,EAAqB;AACjBH,MAAAA,KAAK,CAACI,IAAD,CAAL,GAAc;AAAEC,QAAAA,IAAI,EAAEH,KAAR;AAAeI,QAAAA,GAAG,EAAEH,KAApB;AAA2BI,QAAAA,IAAI,EAAEH;AAAjC,OAAd;AACH;AACJ,GAJD;;AAKAd,EAAAA,MAAM,CAACkB,IAAP,CAAYb,IAAZ,EAAkBc,GAAlB,CAAsB,UAAUL,IAAV,EAAgB;AAAE,WAAOH,OAAO,CAACN,IAAI,CAACS,IAAD,CAAL,EAAaR,IAAI,CAACQ,IAAD,CAAjB,EAAyBA,IAAzB,CAAd;AAA+C,GAAvF;AACA,SAAOJ,KAAP;AACH,CAZD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectDifference = function (obj1, obj2) {\n    if (!obj2 || Object.prototype.toString.call(obj2) !== '[object Object]') {\n        return obj1;\n    }\n    var diffs = {};\n    var compare = function (item1, item2, prop) {\n        if (item1 !== item2) {\n            diffs[prop] = { prev: item1, new: item2, type: prop };\n        }\n    };\n    Object.keys(obj1).map(function (prop) { return compare(obj1[prop], obj2[prop], prop); });\n    return diffs;\n};\n"]},"metadata":{},"sourceType":"script"}