{"ast":null,"code":"var _jsxFileName = \"/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js\";\nimport React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkObligatoryFields = () => {\n      let error = false;\n\n      if (!this.state.inputs.login) {\n        const state = this.state;\n        state.loginError = true;\n        this.setState(state);\n        error = true;\n      }\n\n      if (!this.state.inputs.password) {\n        const state = this.state;\n        state.passwordError = true;\n        this.setState(state);\n        error = true;\n      }\n\n      return error;\n    };\n\n    this.setLogin = login => {\n      const state = this.state;\n      state.inputs.login = login;\n      this.setState(state);\n      this.setData(state.inputs);\n    };\n\n    this.setPassword = password => {\n      const state = this.state;\n      state.inputs.password = password;\n      this.setState(state);\n      this.setData(state.inputs);\n    };\n\n    this.setType = event => {\n      const state = this.state;\n      state.inputs.type = event.target.value;\n      this.setState(state);\n      this.setData(state.inputs);\n    };\n\n    this.setData = data => {\n      this.props.setData(data);\n    };\n\n    this.render = () => {\n      return React.createElement(FormDialog, {\n        isOpen: this.props.isOpen,\n        onClose: type => {\n          if (type === 'done' && this.checkObligatoryFields() || type === 'cancel') {\n            this.props.onClose();\n            alert(1);\n          }\n        },\n        title: this.props.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.loginError,\n        margin: \"dense\",\n        id: \"login\",\n        label: \"Login\",\n        type: \"text\",\n        fullWidth: true,\n        onChange: event => {\n          if (this.state.loginError && event.target.value) {\n            let state = this.state;\n            state.loginError = false;\n            this.setState(state);\n          }\n\n          this.setLogin(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        autoFocus: true,\n        required: true,\n        error: this.state.passwordError,\n        margin: \"dense\",\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        fullWidth: true,\n        onChange: event => {\n          if (this.state.passwordError && event.target.value) {\n            let state = this.state;\n            state.passwordError = false;\n            this.setState(state);\n          }\n\n          this.setPassword(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"Type\",\n        onChange: this.setType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Empty\",\n        selected: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Empty\"), this.props.types.map(type => React.createElement(\"option\", {\n        value: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, type))));\n    };\n\n    this.state = {\n      inputs: {\n        login: null,\n        password: null,\n        type: null\n      },\n      loginError: false,\n      passwordError: false\n    };\n    this.setData(this.state);\n  }\n\n}\nexport const EditUserDialog = props => React.createElement(FormDialog, {\n  isOpen: props.isOpen,\n  onClose: props.onClose,\n  title: props.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, React.createElement(TextField, {\n  autoFocus: true,\n  required: true,\n  margin: \"dense\",\n  id: \"login\",\n  label: \"Login\",\n  type: \"text\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"password\",\n  label: \"Password\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}), React.createElement(TextField, {\n  autoFocus: true,\n  margin: \"dense\",\n  id: \"type\",\n  label: \"Type\",\n  type: \"password\",\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}));\nexport const DeleteUserDialog = props => React.createElement(QuestionDialog, {\n  isOpen: props.isOpen,\n  title: props.title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, React.createElement(Button, {\n  onClick: () => {\n    props.onClose('cancel');\n  },\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, \"Cancel\"), React.createElement(Button, {\n  onClick: () => {\n    props.onClose('delete');\n  },\n  color: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, \"Delete\"));","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/src/AdminPanel/Dialogs.js"],"names":["React","TextField","Button","FormDialog","QuestionDialog","AddUserDialog","Component","constructor","props","checkObligatoryFields","error","state","inputs","login","loginError","setState","password","passwordError","setLogin","setData","setPassword","setType","event","type","target","value","data","render","isOpen","onClose","alert","title","types","map","EditUserDialog","DeleteUserDialog"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { FormDialog, QuestionDialog } from '../Shared/Dialog';\n\nexport class AddUserDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputs: {\n        login: null,\n        password: null,\n        type: null\n      },\n      loginError: false,\n      passwordError: false\n    }\n    this.setData(this.state)\n  }\n\n  checkObligatoryFields = () => {\n    let error = false\n    if(!this.state.inputs.login) {\n      const state = this.state\n      state.loginError = true\n      this.setState(state)\n      error = true\n    }\n\n    if(!this.state.inputs.password) {\n      const state = this.state\n      state.passwordError = true\n      this.setState(state)\n      error = true\n    }\n\n    return error\n  }\n\n  setLogin = (login) => {\n    const state = this.state\n    state.inputs.login = login\n    this.setState(state)\n    this.setData(state.inputs)\n  }\n\n  setPassword = (password) => {\n    const state = this.state\n    state.inputs.password = password\n    this.setState(state)\n    this.setData(state.inputs)\n  }\n\n  setType = (event) => {\n    const state = this.state\n    state.inputs.type = event.target.value\n    this.setState(state)\n    this.setData(state.inputs)\n  }\n\n  setData = (data) => {\n    this.props.setData(data)\n  }\n\n  render = () => {\n    return (\n    <FormDialog isOpen={this.props.isOpen} onClose={(type) => {\n      if((type === 'done' && this.checkObligatoryFields()) || type === 'cancel') {\n        this.props.onClose(); alert(1)\n      }}} \n      \n      \n      title={this.props.title}>\n      \n      \n      <TextField\n      autoFocus\n      required\n      error={this.state.loginError}\n      margin=\"dense\"\n      id=\"login\"\n      label=\"Login\"\n      type=\"text\"\n      fullWidth\n      onChange={(event) => {\n        if(this.state.loginError && event.target.value) {\n          let state = this.state\n          state.loginError = false\n          this.setState(state)\n        }\n        this.setLogin(event.target.value)}}\n      />\n\n      <TextField\n      autoFocus\n      required\n      error={this.state.passwordError}\n      margin=\"dense\"\n      id=\"password\"\n      label=\"Password\"\n      type=\"password\"\n      fullWidth\n      onChange={(event) => {\n        if(this.state.passwordError && event.target.value) {\n          let state = this.state\n          state.passwordError = false\n          this.setState(state)\n        }\n        this.setPassword(event.target.value)}}\n      />\n\n      <select name=\"Type\" onChange={this.setType}>\n      <option value=\"Empty\" selected>Empty</option>\n      {this.props.types.map(type => <option value={type}>{type}</option>)}\n      </select>\n    </FormDialog>\n  )}\n}\n\nexport const EditUserDialog = (props) =>\n    <FormDialog isOpen={props.isOpen} onClose={props.onClose} title={props.title}>\n      <TextField\n            autoFocus\n            required\n            margin=\"dense\"\n            id=\"login\"\n            label=\"Login\"\n            type=\"text\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n\n        <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"type\"\n            label=\"Type\"\n            type=\"password\"\n            fullWidth\n          />\n    </FormDialog>\n\nexport const DeleteUserDialog = (props) =>\n    <QuestionDialog isOpen={props.isOpen} title={props.title}>\n      <Button onClick={() => {props.onClose('cancel')}} color=\"primary\">\n        Cancel \n      </Button>\n      <Button onClick={() => {props.onClose('delete')}} color=\"primary\">\n        Delete \n      </Button>\n    </QuestionDialog>"]},"metadata":{},"sourceType":"module"}