{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar uno_js_1 = require(\"uno-js\");\n\nvar Models_1 = require(\"./Models\");\n\nvar GridResponse_1 = require(\"./Models/GridResponse\");\n\nvar utils_1 = require(\"./utils\");\n\nvar isEqual = function (date1, date2) {\n  return uno_js_1.parseISO(date1).getTime() === uno_js_1.parseISO(date2).getTime();\n};\n\nvar isAfter = function (date1, date2) {\n  return uno_js_1.parseISO(date1).getTime() > uno_js_1.parseISO(date2).getTime();\n};\n\nvar isBefore = function (date1, date2) {\n  return uno_js_1.parseISO(date1).getTime() < uno_js_1.parseISO(date2).getTime();\n};\n\nvar Transformer =\n/** @class */\nfunction () {\n  function Transformer() {}\n\n  Transformer.getResponse = function (request, dataSource) {\n    var response = new GridResponse_1.default(request.counter);\n    response.totalRecordCount = dataSource.length;\n    var data = this.applyFreeTextSearch(request, dataSource);\n    data = this.applyFiltering(request, data);\n    data = this.applySorting(request, data);\n    response.filteredRecordCount = data.length;\n\n    if (request.take > -1) {\n      response.totalPages = Math.ceil(response.filteredRecordCount / request.take);\n\n      if (response.totalPages > 0) {\n        response.currentPage = request.skip / request.take + 1;\n      }\n    }\n\n    response.aggregationPayload = this.getAggregatePayload(request, data);\n    response.payload = data.slice(request.skip, request.skip + request.take).map(function (row) {\n      return utils_1.parsePayload(row, request.columns);\n    });\n    return response;\n  };\n\n  Transformer.applyFreeTextSearch = function (request, subset) {\n    if (request.search && request.search.operator.toLowerCase() === Models_1.CompareOperators.Auto.toLowerCase()) {\n      var searchableColumns_1 = request.columns.filter(function (x) {\n        return x.searchable;\n      });\n\n      if (searchableColumns_1.length > 0) {\n        var filter_1 = request.search.text.toLowerCase();\n\n        if (filter_1 === '') {\n          return subset;\n        }\n\n        return subset.filter(function (item) {\n          return searchableColumns_1.some(function (x) {\n            if (typeof item[x.name] === 'undefined') {\n              return false;\n            } else {\n              return item[x.name].toLowerCase().indexOf(filter_1) > -1;\n            }\n          });\n        });\n      }\n\n      return subset;\n    }\n  };\n\n  Transformer.applyFiltering = function (request, subset) {\n    request.columns.filter(function (column) {\n      return column.hasFilter;\n    }).forEach(function (column) {\n      var isDate = column.dataType === Models_1.ColumnDataType.Date || column.dataType === Models_1.ColumnDataType.DateTime || column.dataType === Models_1.ColumnDataType.DateTimeUtc;\n\n      var partialfiltering = function (data, action) {\n        return data.filter(function (row) {\n          return typeof row[column.name] === 'undefined' || row[column.name] === null ? false : action(row[column.name]);\n        });\n      };\n\n      switch (column.filter.operator) {\n        case Models_1.CompareOperators.Equals:\n          if (isDate) {\n            subset = subset.filter(function (row) {\n              return isEqual(row[column.name], column.filter.text);\n            });\n          } else if (column.dataType === Models_1.ColumnDataType.String) {\n            subset = partialfiltering(subset, function (x) {\n              return x.toLowerCase() === column.filter.text.toLowerCase();\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] === column.filter.text;\n            });\n          }\n\n          break;\n\n        case Models_1.CompareOperators.NotEquals:\n          if (column.dataType === 'string') {\n            subset = partialfiltering(subset, function (x) {\n              return x.toLowerCase() !== column.filter.text.toLowerCase();\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] !== column.filter.text;\n            });\n          }\n\n          break;\n\n        case Models_1.CompareOperators.Contains:\n          subset = partialfiltering(subset, function (x) {\n            return x.toLowerCase().indexOf(column.filter.text.toLowerCase()) >= 0;\n          });\n          subset = partialfiltering(subset, function (x) {\n            return x.toLowerCase().indexOf(column.filter.text.toLowerCase()) >= 0;\n          });\n          break;\n\n        case Models_1.CompareOperators.NotContains:\n          subset = partialfiltering(subset, function (x) {\n            return x.toLowerCase().indexOf(column.filter.text.toLowerCase()) < 0;\n          });\n          break;\n\n        case Models_1.CompareOperators.StartsWith:\n          subset = partialfiltering(subset, function (x) {\n            return x.toLowerCase().startsWith(column.filter.text.toLowerCase());\n          });\n          break;\n\n        case Models_1.CompareOperators.NotStartsWith:\n          subset = partialfiltering(subset, function (x) {\n            return !x.toLowerCase().startsWith(column.filter.text.toLowerCase());\n          });\n          break;\n\n        case Models_1.CompareOperators.EndsWith:\n          subset = partialfiltering(subset, function (x) {\n            return x.toLowerCase().endsWith(column.filter.text.toLowerCase());\n          });\n\n        case Models_1.CompareOperators.NotEndsWith:\n          subset = partialfiltering(subset, function (x) {\n            return !x.toLowerCase().endsWith(column.filter.text.toLowerCase());\n          });\n          break;\n\n        case Models_1.CompareOperators.Gt:\n          if (isDate) {\n            subset = subset.filter(function (row) {\n              return isAfter(row[column.name], column.filter.text);\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] > column.filter.text;\n            });\n          }\n\n          break;\n\n        case Models_1.CompareOperators.Gte:\n          if (isDate) {\n            subset = subset.filter(function (row) {\n              return isEqual(row[column.name], column.filter.text) || isAfter(row[column.name], column.filter.text);\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] >= column.filter.text;\n            });\n          }\n\n          break;\n\n        case Models_1.CompareOperators.Lt:\n          if (isDate) {\n            subset = subset.filter(function (row) {\n              return isBefore(row[column.name], column.filter.text);\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] < column.filter.text;\n            });\n          }\n\n          break;\n\n        case Models_1.CompareOperators.Lte:\n          if (isDate) {\n            subset = subset.filter(function (row) {\n              return isEqual(row[column.name], column.filter.text) || isBefore(row[column.name], column.filter.text);\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] <= column.filter.text;\n            });\n          }\n\n          break;\n\n        case Models_1.CompareOperators.Between:\n          if (isDate) {\n            subset = subset.filter(function (row) {\n              return (isEqual(row[column.name], column.filter.text) || isAfter(row[column.name], column.filter.text)) && (isEqual(row[column.name], column.filter.argument[0]) || isBefore(row[column.name], column.filter.argument[0]));\n            });\n          } else {\n            subset = subset.filter(function (row) {\n              return row[column.name] >= column.filter.text && row[column.name] <= column.filter.argument[0];\n            });\n          }\n\n          break;\n\n        default:\n          throw new Error('Unsupported Compare Operator');\n      }\n    });\n    return subset;\n  };\n\n  Transformer.applySorting = function (request, subset) {\n    var sortedColumns = request.columns.filter(function (column) {\n      return column.sortOrder > 0;\n    });\n    var sorts = [{\n      name: request.columns[0].name,\n      asc: true\n    }];\n\n    if (sortedColumns.length > 0) {\n      sortedColumns.sort(function (a, b) {\n        return a.sortOrder > b.sortOrder ? 1 : b.sortOrder > a.sortOrder ? -1 : 0;\n      });\n      sorts = sortedColumns.map(function (y) {\n        return {\n          name: y.name,\n          asc: y.sortDirection === Models_1.ColumnSortDirection.Ascending\n        };\n      });\n    }\n\n    subset.sort(function (a, b) {\n      var result = 0;\n\n      for (var _i = 0, sorts_1 = sorts; _i < sorts_1.length; _i++) {\n        var current = sorts_1[_i];\n        var reverse = current.asc ? 1 : -1;\n\n        if (typeof a[current.name] === 'undefined' || typeof b[current.name] === 'undefined') {\n          result = reverse * -1;\n          break;\n        }\n\n        if (a[current.name] < b[current.name]) {\n          result = reverse * -1;\n          break;\n        }\n\n        if (a[current.name] > b[current.name]) {\n          result = reverse * 1;\n          break;\n        }\n      }\n\n      return result;\n    });\n    return subset;\n  };\n\n  Transformer.getAggregatePayload = function (request, subset) {\n    var aggregateColumns = request.columns.filter(function (column) {\n      return column.aggregate && column.aggregate.toLowerCase() !== Models_1.AggregateFunctions.None.toLowerCase();\n    });\n    return aggregateColumns.reduce(function (prev, column) {\n      switch (column.aggregate.toLowerCase()) {\n        case Models_1.AggregateFunctions.Sum.toLowerCase():\n          prev[column.name] = subset.length === 0 ? 0 : subset.reduce(function (sum, r) {\n            return typeof r[column.name] === 'undefined' ? sum : sum + r[column.name];\n          }, 0);\n          break;\n\n        case Models_1.AggregateFunctions.Average.toLowerCase():\n          prev[column.name] = subset.length === 0 ? 0 : subset.reduce(function (sum, r) {\n            return typeof r[column.name] === 'undefined' ? sum : sum + r[column.name];\n          }, 0) / subset.length;\n          break;\n\n        case Models_1.AggregateFunctions.Max.toLowerCase():\n          prev[column.name] = subset.length === 0 ? 0 : subset.reduce(function (max, r) {\n            return r[column.name] > max ? r[column.name] : max;\n          }, subset[0][column.name]);\n          break;\n\n        case Models_1.AggregateFunctions.Min.toLowerCase():\n          prev[column.name] = subset.length === 0 ? 0 : subset.reduce(function (min, r) {\n            return r[column.name] < min ? r[column.name] : min;\n          }, subset[0][column.name]);\n          break;\n\n        case Models_1.AggregateFunctions.Count.toLowerCase():\n          prev[column.name] = subset.length;\n          break;\n\n        case Models_1.AggregateFunctions.DistinctCount.toLowerCase():\n          prev[column.name] = subset.length === 0 ? 0 : subset.reduce(function (list, r) {\n            if (list.indexOf(r[column.name]) === -1) {\n              list.push(r[column.name]);\n            }\n\n            return list;\n          }, []).length;\n          break;\n\n        default:\n          throw new Error('Unsupported aggregate function');\n      }\n\n      return prev;\n    }, {});\n  };\n\n  return Transformer;\n}();\n\nexports.default = Transformer;","map":{"version":3,"sources":["/home/chairchandler/Desktop/Bazy Danych/client/node_modules/tubular-common/dist/Transformer.js"],"names":["Object","defineProperty","exports","value","uno_js_1","require","Models_1","GridResponse_1","utils_1","isEqual","date1","date2","parseISO","getTime","isAfter","isBefore","Transformer","getResponse","request","dataSource","response","default","counter","totalRecordCount","length","data","applyFreeTextSearch","applyFiltering","applySorting","filteredRecordCount","take","totalPages","Math","ceil","currentPage","skip","aggregationPayload","getAggregatePayload","payload","slice","map","row","parsePayload","columns","subset","search","operator","toLowerCase","CompareOperators","Auto","searchableColumns_1","filter","x","searchable","filter_1","text","item","some","name","indexOf","column","hasFilter","forEach","isDate","dataType","ColumnDataType","Date","DateTime","DateTimeUtc","partialfiltering","action","Equals","String","NotEquals","Contains","NotContains","StartsWith","startsWith","NotStartsWith","EndsWith","endsWith","NotEndsWith","Gt","Gte","Lt","Lte","Between","argument","Error","sortedColumns","sortOrder","sorts","asc","sort","a","b","y","sortDirection","ColumnSortDirection","Ascending","result","_i","sorts_1","current","reverse","aggregateColumns","aggregate","AggregateFunctions","None","reduce","prev","Sum","sum","r","Average","Max","max","Min","min","Count","DistinctCount","list","push"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar uno_js_1 = require(\"uno-js\");\nvar Models_1 = require(\"./Models\");\nvar GridResponse_1 = require(\"./Models/GridResponse\");\nvar utils_1 = require(\"./utils\");\nvar isEqual = function (date1, date2) { return uno_js_1.parseISO(date1).getTime() === uno_js_1.parseISO(date2).getTime(); };\nvar isAfter = function (date1, date2) { return uno_js_1.parseISO(date1).getTime() > uno_js_1.parseISO(date2).getTime(); };\nvar isBefore = function (date1, date2) { return uno_js_1.parseISO(date1).getTime() < uno_js_1.parseISO(date2).getTime(); };\nvar Transformer = /** @class */ (function () {\n    function Transformer() {\n    }\n    Transformer.getResponse = function (request, dataSource) {\n        var response = new GridResponse_1.default(request.counter);\n        response.totalRecordCount = dataSource.length;\n        var data = this.applyFreeTextSearch(request, dataSource);\n        data = this.applyFiltering(request, data);\n        data = this.applySorting(request, data);\n        response.filteredRecordCount = data.length;\n        if (request.take > -1) {\n            response.totalPages = Math.ceil(response.filteredRecordCount / request.take);\n            if (response.totalPages > 0) {\n                response.currentPage = request.skip / request.take + 1;\n            }\n        }\n        response.aggregationPayload = this.getAggregatePayload(request, data);\n        response.payload = data\n            .slice(request.skip, request.skip + request.take)\n            .map(function (row) { return utils_1.parsePayload(row, request.columns); });\n        return response;\n    };\n    Transformer.applyFreeTextSearch = function (request, subset) {\n        if (request.search && request.search.operator.toLowerCase() === Models_1.CompareOperators.Auto.toLowerCase()) {\n            var searchableColumns_1 = request.columns.filter(function (x) { return x.searchable; });\n            if (searchableColumns_1.length > 0) {\n                var filter_1 = request.search.text.toLowerCase();\n                if (filter_1 === '') {\n                    return subset;\n                }\n                return subset.filter(function (item) {\n                    return searchableColumns_1.some(function (x) {\n                        if (typeof item[x.name] === 'undefined') {\n                            return false;\n                        }\n                        else {\n                            return item[x.name].toLowerCase().indexOf(filter_1) > -1;\n                        }\n                    });\n                });\n            }\n            return subset;\n        }\n    };\n    Transformer.applyFiltering = function (request, subset) {\n        request.columns\n            .filter(function (column) { return column.hasFilter; })\n            .forEach(function (column) {\n            var isDate = column.dataType === Models_1.ColumnDataType.Date ||\n                column.dataType === Models_1.ColumnDataType.DateTime ||\n                column.dataType === Models_1.ColumnDataType.DateTimeUtc;\n            var partialfiltering = function (data, action) {\n                return data.filter(function (row) {\n                    return typeof row[column.name] === 'undefined' || row[column.name] === null\n                        ? false\n                        : action(row[column.name]);\n                });\n            };\n            switch (column.filter.operator) {\n                case Models_1.CompareOperators.Equals:\n                    if (isDate) {\n                        subset = subset.filter(function (row) { return isEqual(row[column.name], column.filter.text); });\n                    }\n                    else if (column.dataType === Models_1.ColumnDataType.String) {\n                        subset = partialfiltering(subset, function (x) { return x.toLowerCase() === column.filter.text.toLowerCase(); });\n                    }\n                    else {\n                        subset = subset.filter(function (row) { return row[column.name] === column.filter.text; });\n                    }\n                    break;\n                case Models_1.CompareOperators.NotEquals:\n                    if (column.dataType === 'string') {\n                        subset = partialfiltering(subset, function (x) { return x.toLowerCase() !== column.filter.text.toLowerCase(); });\n                    }\n                    else {\n                        subset = subset.filter(function (row) { return row[column.name] !== column.filter.text; });\n                    }\n                    break;\n                case Models_1.CompareOperators.Contains:\n                    subset = partialfiltering(subset, function (x) { return x.toLowerCase().indexOf(column.filter.text.toLowerCase()) >= 0; });\n                    subset = partialfiltering(subset, function (x) { return x.toLowerCase().indexOf(column.filter.text.toLowerCase()) >= 0; });\n                    break;\n                case Models_1.CompareOperators.NotContains:\n                    subset = partialfiltering(subset, function (x) { return x.toLowerCase().indexOf(column.filter.text.toLowerCase()) < 0; });\n                    break;\n                case Models_1.CompareOperators.StartsWith:\n                    subset = partialfiltering(subset, function (x) {\n                        return x.toLowerCase().startsWith(column.filter.text.toLowerCase());\n                    });\n                    break;\n                case Models_1.CompareOperators.NotStartsWith:\n                    subset = partialfiltering(subset, function (x) { return !x.toLowerCase().startsWith(column.filter.text.toLowerCase()); });\n                    break;\n                case Models_1.CompareOperators.EndsWith:\n                    subset = partialfiltering(subset, function (x) {\n                        return x.toLowerCase().endsWith(column.filter.text.toLowerCase());\n                    });\n                case Models_1.CompareOperators.NotEndsWith:\n                    subset = partialfiltering(subset, function (x) { return !x.toLowerCase().endsWith(column.filter.text.toLowerCase()); });\n                    break;\n                case Models_1.CompareOperators.Gt:\n                    if (isDate) {\n                        subset = subset.filter(function (row) { return isAfter(row[column.name], column.filter.text); });\n                    }\n                    else {\n                        subset = subset.filter(function (row) { return row[column.name] > column.filter.text; });\n                    }\n                    break;\n                case Models_1.CompareOperators.Gte:\n                    if (isDate) {\n                        subset = subset.filter(function (row) {\n                            return isEqual(row[column.name], column.filter.text) ||\n                                isAfter(row[column.name], column.filter.text);\n                        });\n                    }\n                    else {\n                        subset = subset.filter(function (row) { return row[column.name] >= column.filter.text; });\n                    }\n                    break;\n                case Models_1.CompareOperators.Lt:\n                    if (isDate) {\n                        subset = subset.filter(function (row) { return isBefore(row[column.name], column.filter.text); });\n                    }\n                    else {\n                        subset = subset.filter(function (row) { return row[column.name] < column.filter.text; });\n                    }\n                    break;\n                case Models_1.CompareOperators.Lte:\n                    if (isDate) {\n                        subset = subset.filter(function (row) {\n                            return isEqual(row[column.name], column.filter.text) ||\n                                isBefore(row[column.name], column.filter.text);\n                        });\n                    }\n                    else {\n                        subset = subset.filter(function (row) { return row[column.name] <= column.filter.text; });\n                    }\n                    break;\n                case Models_1.CompareOperators.Between:\n                    if (isDate) {\n                        subset = subset.filter(function (row) {\n                            return (isEqual(row[column.name], column.filter.text) ||\n                                isAfter(row[column.name], column.filter.text)) &&\n                                (isEqual(row[column.name], column.filter.argument[0]) ||\n                                    isBefore(row[column.name], column.filter.argument[0]));\n                        });\n                    }\n                    else {\n                        subset = subset.filter(function (row) {\n                            return row[column.name] >= column.filter.text &&\n                                row[column.name] <= column.filter.argument[0];\n                        });\n                    }\n                    break;\n                default:\n                    throw new Error('Unsupported Compare Operator');\n            }\n        });\n        return subset;\n    };\n    Transformer.applySorting = function (request, subset) {\n        var sortedColumns = request.columns.filter(function (column) { return column.sortOrder > 0; });\n        var sorts = [{ name: request.columns[0].name, asc: true }];\n        if (sortedColumns.length > 0) {\n            sortedColumns.sort(function (a, b) { return (a.sortOrder > b.sortOrder ? 1 : b.sortOrder > a.sortOrder ? -1 : 0); });\n            sorts = sortedColumns.map(function (y) { return ({\n                name: y.name,\n                asc: y.sortDirection === Models_1.ColumnSortDirection.Ascending,\n            }); });\n        }\n        subset.sort(function (a, b) {\n            var result = 0;\n            for (var _i = 0, sorts_1 = sorts; _i < sorts_1.length; _i++) {\n                var current = sorts_1[_i];\n                var reverse = current.asc ? 1 : -1;\n                if (typeof a[current.name] === 'undefined' || typeof b[current.name] === 'undefined') {\n                    result = reverse * -1;\n                    break;\n                }\n                if (a[current.name] < b[current.name]) {\n                    result = reverse * -1;\n                    break;\n                }\n                if (a[current.name] > b[current.name]) {\n                    result = reverse * 1;\n                    break;\n                }\n            }\n            return result;\n        });\n        return subset;\n    };\n    Transformer.getAggregatePayload = function (request, subset) {\n        var aggregateColumns = request.columns.filter(function (column) {\n            return column.aggregate && column.aggregate.toLowerCase() !== Models_1.AggregateFunctions.None.toLowerCase();\n        });\n        return aggregateColumns.reduce(function (prev, column) {\n            switch (column.aggregate.toLowerCase()) {\n                case Models_1.AggregateFunctions.Sum.toLowerCase():\n                    prev[column.name] =\n                        subset.length === 0\n                            ? 0\n                            : subset.reduce(function (sum, r) { return (typeof r[column.name] === 'undefined' ? sum : sum + r[column.name]); }, 0);\n                    break;\n                case Models_1.AggregateFunctions.Average.toLowerCase():\n                    prev[column.name] =\n                        subset.length === 0\n                            ? 0\n                            : subset.reduce(function (sum, r) { return (typeof r[column.name] === 'undefined' ? sum : sum + r[column.name]); }, 0) / subset.length;\n                    break;\n                case Models_1.AggregateFunctions.Max.toLowerCase():\n                    prev[column.name] =\n                        subset.length === 0\n                            ? 0\n                            : subset.reduce(function (max, r) { return (r[column.name] > max ? r[column.name] : max); }, subset[0][column.name]);\n                    break;\n                case Models_1.AggregateFunctions.Min.toLowerCase():\n                    prev[column.name] =\n                        subset.length === 0\n                            ? 0\n                            : subset.reduce(function (min, r) { return (r[column.name] < min ? r[column.name] : min); }, subset[0][column.name]);\n                    break;\n                case Models_1.AggregateFunctions.Count.toLowerCase():\n                    prev[column.name] = subset.length;\n                    break;\n                case Models_1.AggregateFunctions.DistinctCount.toLowerCase():\n                    prev[column.name] =\n                        subset.length === 0\n                            ? 0\n                            : subset.reduce(function (list, r) {\n                                if (list.indexOf(r[column.name]) === -1) {\n                                    list.push(r[column.name]);\n                                }\n                                return list;\n                            }, []).length;\n                    break;\n                default:\n                    throw new Error('Unsupported aggregate function');\n            }\n            return prev;\n        }, {});\n    };\n    return Transformer;\n}());\nexports.default = Transformer;\n"]},"metadata":{},"sourceType":"script"}