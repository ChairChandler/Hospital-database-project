"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Button_1 = require("@material-ui/core/Button");
var Card_1 = require("@material-ui/core/Card");
var CardActions_1 = require("@material-ui/core/CardActions");
var CardContent_1 = require("@material-ui/core/CardContent");
var Popover_1 = require("@material-ui/core/Popover");
var React = require("react");
var tubular_common_1 = require("tubular-common");
var DialogInput_1 = require("./DialogInput");
var OperatorsDropdown_1 = require("./OperatorsDropdown");
exports.DialogModal = function (_a) {
    var anchorFilter = _a.anchorFilter, activeColumn = _a.activeColumn, setAnchorFilter = _a.setAnchorFilter, setFilter = _a.setFilter, handleFilterChange = _a.handleFilterChange;
    var clearFilter = function () { return setFilter(tubular_common_1.ColumnModel.clearFilterPatch()); };
    var handleInput = function (e) { return handleFilterChange({ Text: e }); };
    var handleBetweenInput = function (e) { return handleFilterChange({ Argument: [e] }); };
    var submit = function () { return setFilter(tubular_common_1.ColumnModel.createFilterPatch(activeColumn)); };
    var onClose = function () { return setAnchorFilter(null); };
    return (React.createElement(Popover_1.default, { open: Boolean(anchorFilter), onClose: onClose, anchorEl: anchorFilter, anchorOrigin: {
            horizontal: 'center',
            vertical: 'bottom',
        }, transformOrigin: {
            horizontal: 'center',
            vertical: 'top',
        } },
        React.createElement(Card_1.default, null,
            React.createElement(CardContent_1.default, null,
                React.createElement(OperatorsDropdown_1.OperatorsDropdown, { activeColumn: activeColumn, handleFilterChange: handleFilterChange }),
                React.createElement(DialogInput_1.DialogInput, { column: activeColumn, isPrimary: true, handleTextFieldChange: handleInput }),
                activeColumn.filter.operator === tubular_common_1.CompareOperators.Between && (React.createElement(DialogInput_1.DialogInput, { column: activeColumn, isPrimary: false, handleTextFieldChange: handleBetweenInput }))),
            React.createElement(CardActions_1.default, null,
                React.createElement(Button_1.default, { size: "medium", color: "secondary", onClick: clearFilter }, "Clear"),
                React.createElement(Button_1.default, { size: "medium", color: "primary", onClick: submit, disabled: activeColumn.filter.operator === tubular_common_1.CompareOperators.None }, "Apply")))));
};
