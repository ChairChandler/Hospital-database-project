"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Toolbar_1 = require("@material-ui/core/Toolbar");
var React = require("react");
var uno_react_1 = require("uno-react");
var SearchTextInput_1 = require("../Filtering/SearchTextInput");
var ExportButton_1 = require("./ExportButton");
var mobileSpacer = { flexShrink: 1 };
var spacer = { flex: '1 1 45%' };
var outerWidth = 800;
var timeout = 400;
exports.GridToolbar = function (_a) {
    var toolbarOptions = _a.toolbarOptions, gridName = _a.gridName, tbTableInstance = _a.tbTableInstance;
    var isMobileResolution = uno_react_1.useResolutionSwitch(outerWidth, timeout)[0];
    return (React.createElement(Toolbar_1.default, { "data-testid": "grid-toolbar" },
        React.createElement("div", { style: isMobileResolution ? mobileSpacer : spacer }),
        toolbarOptions.customItems,
        toolbarOptions.exportButton && (React.createElement(ExportButton_1.ExportButton, { type: "csv", gridName: gridName, exportTo: tbTableInstance.api.exportTo, filteredRecordCount: tbTableInstance.state.filteredRecordCount, "data-testid": "export-button-csv" })),
        toolbarOptions.printButton && (React.createElement(ExportButton_1.ExportButton, { type: "print", gridName: gridName, exportTo: tbTableInstance.api.exportTo, filteredRecordCount: tbTableInstance.state.filteredRecordCount, "data-testid": "export-button-print" })),
        toolbarOptions.searchText && (React.createElement(SearchTextInput_1.SearchTextInput, { searchText: tbTableInstance.state.searchText, updateSearchText: tbTableInstance.api.updateSearchText, "data-testid": "search-text-input" }))));
};
