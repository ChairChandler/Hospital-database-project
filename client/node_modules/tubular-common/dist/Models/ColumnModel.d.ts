import { AggregateFunctions, ColumnDataType, ColumnSortDirection, CompareOperators } from './Column';
import IColumnModelOptions from './ColumnModelOptions';
import { FilterWrapper } from './FilterWrapper';
export default class ColumnModel {
    static createFilterPatch(column: ColumnModel): FilterWrapper;
    static getOperators(column: ColumnModel): {}[];
    static sortColumnArray(columnName: string, columns: ColumnModel[], multiSort: boolean): ColumnModel[];
    static clearFilterPatch(): FilterWrapper;
    aggregate: AggregateFunctions;
    dataType: ColumnDataType;
    filter: FilterWrapper | {
        text?: string;
        argument: [];
        operator: CompareOperators;
        hasFilter: boolean;
    };
    filterable: boolean;
    isKey: boolean;
    label: string;
    name: string;
    searchable: boolean;
    sortDirection: ColumnSortDirection;
    sortOrder: number;
    sortable: boolean;
    visible: boolean;
    hasFilter: boolean;
    constructor(name: string, options?: IColumnModelOptions);
}
